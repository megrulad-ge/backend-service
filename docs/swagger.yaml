openapi: 3.0.0
paths:
  /api/v1/health:
    get:
      operationId: HealthController_getHealth
      parameters: []
      responses:
        '200':
          description: Health check
          content:
            application/json:
              schema:
                type: object
                example:
                  status: alive
                properties:
                  status:
                    type: string
                    example: alive
      tags:
        - Health
  /api/v1/translation:
    post:
      operationId: TranslationController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTranslationRequest'
      responses:
        '201':
          description: ''
      tags: &ref_0
        - Translation
    get:
      operationId: TranslationController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  '/api/v1/translation/{id}':
    get:
      operationId: TranslationController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
    patch:
      operationId: TranslationController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTranslationRequest'
      responses:
        '200':
          description: ''
      tags: *ref_0
    delete:
      operationId: TranslationController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v1/dictionary:
    post:
      operationId: DictionaryController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDictionaryRequest'
      responses:
        '201':
          description: ''
      tags: &ref_1
        - Dictionary
    get:
      operationId: DictionaryController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_1
  '/api/v1/dictionary/{id}':
    get:
      operationId: DictionaryController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
    patch:
      operationId: DictionaryController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDictionaryRequest'
      responses:
        '200':
          description: ''
      tags: *ref_1
    delete:
      operationId: DictionaryController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
info:
  title: Megrulad.ge Backend Service
  description: Main translation backend service
  version: 0.0.3
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT auth token
      in: header
  schemas:
    CreateTranslationRequest:
      type: object
      properties: {}
    UpdateTranslationRequest:
      type: object
      properties: {}
    CreateDictionaryRequest:
      type: object
      properties:
        value:
          type: string
          example: Hello there
          description: Word or sentence
        description:
          type: string
          example: Some explanation
          description: 'Dictionary word/sentence description, with examples'
        language:
          type: string
          example: en
          description: Language code
          enum: &ref_2
            - en
            - ru
            - ka
            - me
            - sv
        source:
          type: string
          description: >-
            Source of the word/sentence, whether it's individually contributed
            by user, or from a dictionary
          default: null
      required:
        - value
        - language
    UpdateDictionaryRequest:
      type: object
      properties:
        value:
          type: string
          example: Hello there
          description: Word or sentence
        description:
          type: string
          example: Some explanation
          description: 'Dictionary word/sentence description, with examples'
        language:
          type: string
          example: en
          description: Language code
          enum: *ref_2
        source:
          type: string
          description: >-
            Source of the word/sentence, whether it's individually contributed
            by user, or from a dictionary
          default: null
        status:
          type: string
          description: Translation status
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
            - PENDING
            - REJECTED
            - HIDDEN
