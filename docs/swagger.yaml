openapi: 3.0.0
paths:
  /api/v1/health:
    get:
      operationId: HealthController_getHealth
      parameters: []
      responses:
        '200':
          description: Health check
          content:
            application/json:
              schema:
                type: object
                example:
                  status: alive
                properties:
                  status:
                    type: string
                    example: alive
      tags:
        - Health
  /api/v1/translate:
    post:
      operationId: TranslateController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTranslateRequest'
      responses:
        '201':
          description: ''
      tags: &ref_0
        - Translate
    get:
      operationId: TranslateController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_0
  '/api/v1/translate/{id}':
    get:
      operationId: TranslateController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
    patch:
      operationId: TranslateController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTranslateRequest'
      responses:
        '200':
          description: ''
      tags: *ref_0
    delete:
      operationId: TranslateController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_0
  /api/v1/dictionary:
    post:
      operationId: DictionaryController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDictionaryRequest'
      responses:
        '201':
          description: ''
      tags: &ref_1
        - Dictionary
    get:
      operationId: DictionaryController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags: *ref_1
  '/api/v1/dictionary/{id}':
    get:
      operationId: DictionaryController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
    patch:
      operationId: DictionaryController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDictionaryRequest'
      responses:
        '200':
          description: ''
      tags: *ref_1
    delete:
      operationId: DictionaryController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags: *ref_1
info:
  title: Megrulad.ge Backend Service
  description: Main translation backend service
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
      name: JWT
      description: Enter JWT auth token
      in: header
  schemas:
    CreateTranslateRequest:
      type: object
      properties: {}
    UpdateTranslateRequest:
      type: object
      properties: {}
    CreateDictionaryRequest:
      type: object
      properties: {}
    UpdateDictionaryRequest:
      type: object
      properties: {}
