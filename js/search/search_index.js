var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/entities/Activity.html",[0,1.965,1,2.523]],["body/entities/Activity.html",[0,2.736,1,3.983,2,2.271,3,0.166,4,0.185,5,0.147,6,3.426,7,0.308,8,1.144,9,5.255,10,2.793,11,2.312,12,0.675,13,0.016,14,5.275,15,1.62,16,4.307,17,3.353,18,0.899,19,3.963,20,2.535,21,2.808,22,3.514,23,3.963,24,1.867,25,4.307,26,3.963,27,3.714,28,5.363,29,5.363,30,4.157,31,1.788,32,3.963,33,5.275,34,3.963,35,0.492,36,1.821,37,3.426,38,3.426,39,3.426,40,3.979,41,2.808,42,3.073,43,2.597,44,2.597,45,0.867,46,0.185,47,0.126,48,0.011,49,0.011]],["title/modules/ActivityModule.html",[50,1.039,51,2.078]],["body/modules/ActivityModule.html",[1,3.188,3,0.204,4,0.227,5,0.181,13,0.016,35,0.51,46,0.227,47,0.155,48,0.013,49,0.013,50,1.813,51,4.066,52,1.937,53,2.128,54,2.483,55,2.483,56,2.236,57,3.427,58,3.427,59,4.206,60,4.206,61,4.206,62,4.488,63,3.129,64,2.483,65,2.483,66,4.866,67,1.111,68,4.866,69,3.188,70,2.236,71,4.206,72,2.483,73,4.866]],["title/injectables/ActivityService.html",[62,2.206,74,1.23]],["body/injectables/ActivityService.html",[1,4.521,3,0.123,4,0.138,5,0.11,7,0.229,8,0.495,9,4.93,12,0.64,13,0.016,14,4.421,18,0.893,27,3.484,33,4.421,35,0.46,36,1.353,37,2.546,38,2.546,39,2.546,45,1.478,46,0.138,47,0.094,48,0.009,49,0.009,62,2.49,67,0.672,70,1.353,71,2.546,74,1.388,75,1.425,76,2.546,77,1.223,78,5.336,79,4.346,80,4.346,81,4.346,82,4.346,83,4.346,84,4.346,85,2.759,86,1.813,87,1.025,88,2.945,89,3.484,90,2.945,91,1.984,92,1.678,93,4.346,94,4.346,95,3.773,96,2.945,97,1.853,98,3.962,99,4.346,100,3.773,101,2.945,102,4.346,103,3.773,104,2.945,105,4.346,106,2.945,107,4.346,108,2.945,109,4.346,110,2.945,111,4.346,112,2.945,113,1.93,114,2.945,115,1.228,116,1.705,117,2.945,118,6.366,119,5.166,120,4.346,121,4.346,122,4.346,123,5.166]],["title/injectables/AddDefaultValuesForDevelopment.html",[74,1.23,124,2.352]],["body/injectables/AddDefaultValuesForDevelopment.html",[3,0.136,4,0.218,5,0.121,7,0.252,12,0.288,13,0.016,18,0.87,35,0.519,36,1.491,45,1.306,46,0.152,47,0.103,48,0.01,49,0.01,67,0.741,70,1.491,74,1.49,75,1.57,77,1.313,85,2.642,87,1.624,89,4.384,91,0.953,92,0.806,97,1.681,98,2.518,113,2.127,115,2.277,116,1.208,124,2.85,125,2.806,126,2.144,127,4.023,128,4.112,129,5.971,130,4.23,131,4.721,132,4.721,133,3.616,134,2.806,135,5.461,136,5.461,137,3.245,138,4.033,139,3.245,140,3.579,141,3.245,142,1.752,143,3.245,144,3.245,145,2.806,146,3.245,147,1.86,148,2.516,149,1.491,150,2.299,151,0.773,152,2.299,153,1.181,154,2.806,155,2.077,156,2.127,157,1.672,158,1.292,159,2.806,160,3.245,161,3.336,162,3.245,163,3.245,164,3.245,165,2.516,166,1.292,167,3.245,168,3.057,169,2.299,170,2.299,171,2.127,172,1.86,173,3.129,174,3.245,175,2.277,176,1.57,177,2.144,178,1.428,179,1.86,180,0.71,181,3.245,182,3.245,183,3.245,184,1.86,185,3.245,186,3.245,187,3.057,188,4.665,189,3.245,190,3.245,191,3.245,192,3.245,193,3.245]],["title/modules/AppModule.html",[50,1.039,194,2.728]],["body/modules/AppModule.html",[3,0.18,4,0.201,5,0.16,13,0.016,35,0.529,46,0.201,47,0.137,48,0.012,49,0.012,50,1.71,51,3.876,52,1.712,53,1.882,54,2.195,55,2.195,56,1.977,57,2.195,58,2.195,63,2.89,64,2.195,65,2.195,67,0.982,72,2.89,194,5.553,195,3.719,196,3.719,197,4.115,198,4.706,199,4.706,200,4.706,201,4.706,202,4.302,203,4.302,204,4.302,205,4.302,206,3.335,207,3.048,208,4.302]],["title/modules/ConfigModule.html",[50,1.039,209,2.523]],["body/modules/ConfigModule.html",[3,0.216,4,0.241,5,0.192,13,0.016,31,2.12,35,0.534,46,0.241,47,0.164,48,0.013,49,0.013,50,1.716,52,2.052,67,1.177,72,2.63,209,4.517,210,5.155,211,5.496,212,4.928,213,5.155,214,5.155,215,5.155,216,5.155,217,4.928,218,5.155,219,4.504,220,5.155,221,5.155,222,5.155,223,5.155,224,5.155,225,5.155,226,4.457]],["title/classes/CorsException.html",[47,0.123,227,2.728]],["body/classes/CorsException.html",[3,0.229,4,0.255,5,0.203,7,0.424,8,1.107,12,0.485,13,0.016,18,0.722,45,1.547,46,0.255,47,0.174,48,0.013,49,0.013,115,2.949,126,3.027,166,2.174,178,1.672,227,5.201,228,1.474,229,4.722,230,3.774,231,1.05,232,5.462]],["title/classes/CreateDictionaryRequest.html",[47,0.123,233,2.352]],["body/classes/CreateDictionaryRequest.html",[3,0.151,4,0.319,5,0.134,7,0.28,8,0.845,12,0.556,13,0.016,15,1.49,17,2.31,18,0.827,31,1.676,35,0.418,46,0.169,47,0.16,48,0.01,49,0.01,92,1.554,151,1.49,155,2.791,156,2.363,166,2.001,178,1.771,179,2.88,180,1.637,184,2.066,228,0.973,231,1.31,233,3.07,234,5.689,235,2.066,236,2.952,237,2.713,238,3.378,239,2.713,240,2.975,241,3.117,242,3.606,243,1.435,244,2.198,245,3.117,246,3.606,247,1.312,248,3.896,249,3.896,250,3.896,251,3.896,252,3.07,253,2.531,254,3.117,255,3.606,256,2.713,257,2.713,258,3.606,259,3.117,260,2.503,261,1.104,262,1.946,263,3.561,264,3.123,265,4.851,266,2.555,267,2.555,268,1.577,269,2.659,270,2.555,271,3.606,272,2.795,273,2.555,274,2.066]],["title/classes/CreateDictionaryResponse.html",[47,0.123,275,2.352]],["body/classes/CreateDictionaryResponse.html",[3,0.125,4,0.269,5,0.111,7,0.232,8,0.739,10,2.395,11,1.982,12,0.635,13,0.016,15,1.649,18,0.944,20,2.396,24,1.53,35,0.442,45,0.962,46,0.14,47,0.14,48,0.009,49,0.009,77,1.237,87,1.041,91,1.29,92,1.091,97,0.842,116,0.774,151,1.241,155,2.582,156,1.959,157,1.96,158,1.19,176,1.446,177,3.183,178,1.596,179,2.518,180,1.58,184,1.713,228,0.807,231,1.354,236,2.659,237,2.372,238,2.372,239,2.372,243,1.19,244,1.923,247,1.088,256,2.372,257,2.372,260,2.328,261,0.916,269,2.813,275,3.184,276,6.245,277,2.318,278,2.521,279,1.723,280,2.813,281,2.88,282,4.395,283,4.363,284,2.99,285,2.99,286,2.585,287,2.99,288,2.99,289,2.99,290,2.518,291,3.667,292,2.518,293,2.99,294,2.585,295,2.88,296,2.99,297,1.959,298,1.827,299,2.99,300,2.99,301,2.99,302,2.99,303,1.827,304,1.088,305,2.99]],["title/classes/CreateTranslationRequest.html",[47,0.123,306,2.206]],["body/classes/CreateTranslationRequest.html",[3,0.144,4,0.314,5,0.128,7,0.267,8,0.816,12,0.544,13,0.016,15,1.458,17,2.231,18,0.809,31,1.878,35,0.407,46,0.227,47,0.179,48,0.01,49,0.01,92,1.52,151,1.341,153,1.766,155,2.762,166,1.932,178,1.724,180,1.636,184,1.966,228,0.926,231,1.325,236,2.874,237,3.305,238,3.305,239,2.62,240,2.988,241,2.966,243,1.366,244,2.123,245,2.966,247,1.248,248,3.763,249,3.763,250,3.763,251,3.763,252,2.965,253,2.464,254,2.966,256,2.62,257,2.62,260,2.551,261,1.051,262,1.852,263,3.439,264,3.04,265,4.747,266,2.431,267,2.431,268,1.501,269,2.814,270,2.431,272,2.66,273,2.431,274,1.966,279,1.366,290,1.966,291,3.227,292,1.966,306,2.781,307,5.009,308,2.096,309,3.431,310,3.431,311,3.431,312,3.431,313,3.431,314,1.966,315,2.248,316,2.966,317,2.248,318,1.966]],["title/classes/CreateTranslationRequestParam.html",[47,0.123,317,2.523]],["body/classes/CreateTranslationRequestParam.html",[3,0.166,4,0.284,5,0.147,7,0.308,8,0.901,12,0.352,13,0.016,15,0.943,17,1.821,18,0.524,31,2.027,35,0.439,46,0.251,47,0.194,48,0.011,49,0.011,151,1.447,153,1.442,155,2.588,166,1.578,178,1.213,180,1.596,184,2.271,228,1.07,231,1.308,236,2.022,237,2.895,238,2.895,239,2.139,240,2.925,244,1.734,248,3.072,249,3.072,250,3.072,251,3.072,252,2.421,253,2.346,256,2.139,257,2.139,260,2.668,261,1.213,262,2.139,263,3.8,264,3.281,265,5.049,266,2.808,267,2.808,268,1.734,269,2.993,270,2.808,272,3.072,273,2.808,274,2.271,279,1.915,290,3.073,291,4.019,292,3.073,306,2.271,307,4.157,308,2.421,314,2.271,315,2.597,316,3.426,317,3.514,318,2.271,319,2.421,320,3.963]],["title/classes/CreateTranslationResponse.html",[47,0.123,321,2.728]],["body/classes/CreateTranslationResponse.html",[3,0.122,4,0.265,5,0.108,7,0.227,8,0.725,10,2.361,11,1.954,12,0.639,13,0.016,15,1.667,18,0.95,20,2.368,24,1.503,35,0.459,45,0.944,46,0.136,47,0.137,48,0.009,49,0.009,77,1.215,87,1.016,91,1.267,92,1.072,97,0.821,116,0.755,151,1.605,152,2.067,153,1.061,155,2.564,157,1.942,158,1.161,177,3.163,178,1.573,179,2.473,180,1.572,184,1.672,228,0.788,231,1.346,236,2.621,237,2.33,238,2.33,239,2.33,243,1.161,244,1.888,247,1.061,256,2.33,257,2.33,260,2.305,261,0.893,269,2.785,278,2.485,279,1.706,280,2.773,281,2.828,283,4.437,290,2.473,291,3.635,292,2.473,295,2.828,298,1.782,303,1.782,304,1.061,315,1.912,321,3.64,322,6.278,323,2.262,324,4.316,325,2.918,326,2.918,327,2.918,328,2.918,329,2.918,330,2.918,331,2.918,332,2.918,333,2.522,334,2.918,335,1.782,336,2.918]],["title/modules/DatabaseModule.html",[50,1.039,337,2.523]],["body/modules/DatabaseModule.html",[3,0.226,4,0.252,5,0.2,13,0.016,35,0.508,46,0.252,47,0.172,48,0.013,49,0.013,50,1.763,52,2.144,67,1.229,69,3.53,70,2.476,72,2.749,337,4.279,338,5.387,339,6.076,340,4.657,341,5.387,342,4.176,343,4.657,344,4.657,345,5.387]],["title/classes/DeleteDictionaryRequestParam.html",[47,0.123,346,2.728]],["body/classes/DeleteDictionaryRequestParam.html",[3,0.225,4,0.251,5,0.2,7,0.417,8,1.095,12,0.477,13,0.016,15,1.278,18,0.709,35,0.388,46,0.251,47,0.171,48,0.013,49,0.013,126,2.995,140,3.518,151,1.278,228,1.449,231,1.032,235,3.076,240,2.239,247,1.953,279,1.975,319,3.28,346,4.617,347,4.641,348,4.459,349,5.368,350,3.28,351,3.28]],["title/classes/DeleteTranslationRequestParam.html",[47,0.123,352,2.728]],["body/classes/DeleteTranslationRequestParam.html",[3,0.225,4,0.251,5,0.2,7,0.417,8,1.095,12,0.477,13,0.016,15,1.278,18,0.709,35,0.388,46,0.251,47,0.171,48,0.013,49,0.013,126,2.995,140,3.518,151,1.278,228,1.449,231,1.032,240,2.239,247,1.953,279,1.975,308,3.28,319,3.28,350,3.28,352,4.617,353,4.641,354,4.459,355,5.368,356,3.803]],["title/entities/Dictionary.html",[0,1.965,151,0.917]],["body/entities/Dictionary.html",[0,2.169,2,1.638,3,0.12,4,0.263,5,0.106,7,0.33,8,0.715,10,2.333,11,2.285,12,0.666,13,0.016,15,1.659,16,4.257,17,3.079,18,0.921,20,2.626,21,2.025,22,3.683,24,1.48,25,3.596,30,4.881,31,2.1,35,0.484,36,1.314,40,3.984,41,2.025,42,2.436,43,1.873,44,2.786,45,0.93,46,0.134,47,0.091,48,0.009,49,0.009,151,1.208,153,2.291,155,2.548,157,2.051,158,1.138,166,1.692,178,1.554,180,1.11,231,1.288,243,1.138,278,2.455,279,1.691,357,2.471,358,3.326,359,2.859,360,3.296,361,2.859,362,2.859,363,2.859,364,4.357,365,4.357,366,3.296,367,2.859,368,2.859,369,2.859,370,4.252,371,2.859,372,4.252,373,3.675,374,2.859,375,2.471,376,2.859,377,2.471,378,2.859,379,3.675,380,2.859,381,2.216,382,3.675,383,4.252,384,2.859,385,2.859,386,2.597,387,2.471,388,2.786,389,2.216,390,2.471,391,2.471,392,1.638,393,2.471,394,2.471,395,2.471,396,2.471,397,2.859,398,2.471,399,2.471,400,2.471]],["title/controllers/DictionaryController.html",[401,1.965,402,2.728]],["body/controllers/DictionaryController.html",[3,0.088,4,0.098,5,0.078,7,0.163,11,1.588,12,0.518,13,0.016,15,1.135,18,0.63,35,0.51,45,1.043,46,0.098,47,0.067,48,0.007,49,0.007,62,2.392,67,0.478,77,0.941,85,1.618,86,1.395,87,0.729,91,1.399,92,1.183,97,1.927,98,3.267,115,1.395,116,1.234,128,3.811,149,0.963,150,1.484,151,0.796,157,1.278,158,0.834,161,1.28,166,0.834,170,1.484,171,2.191,172,2.392,173,3.468,175,2.602,176,1.013,177,0.963,180,1.215,187,1.373,233,2.912,243,0.834,252,2.55,261,0.641,275,2.55,279,1.641,297,1.373,304,1.519,346,3.377,348,2.912,350,2.55,351,2.912,401,1.069,402,2.37,403,1.069,404,1.811,405,1.484,406,3.609,407,2.891,408,2.095,409,2.095,410,2.095,411,5.038,412,1.811,413,1.811,414,2.891,415,2.891,416,4.12,417,4.12,418,2.095,419,5.233,420,1.811,421,3.123,422,2.095,423,2.191,424,3.695,425,2.736,426,2.095,427,1.811,428,3.123,429,1.811,430,2.891,431,2.095,432,1.811,433,2.891,434,1.811,435,1.373,436,1.624,437,1.28,438,1.811,439,1.811,440,2.253,441,1.811,442,1.811,443,1.811,444,2.891,445,2.891,446,2.593,447,1.484,448,1.811,449,2.095,450,2.37,451,2.095,452,1.811,453,1.811,454,3.413,455,3.695,456,3.123,457,1.373,458,1.624,459,3.377,460,1.811,461,2.37,462,2.191,463,3.344,464,2.958,465,1.624,466,2.095,467,2.095,468,1.811,469,1.624,470,1.624,471,1.811,472,3.146,473,2.891,474,2.736,475,1.811,476,2.958,477,3.609,478,2.095,479,2.095,480,1.811,481,2.095,482,3.609,483,3.236,484,2.958,485,3.236,486,2.736,487,3.609,488,2.958,489,1.811,490,1.624,491,1.624,492,2.095,493,2.095,494,2.736,495,2.095,496,2.095,497,1.811,498,1.811,499,2.736,500,2.736,501,2.891,502,3.236,503,2.095,504,2.891,505,2.891,506,2.891,507,1.811,508,2.891,509,1.811,510,1.811,511,1.811,512,2.736,513,1.624,514,2.095,515,2.891,516,1.811,517,1.811]],["title/interfaces/DictionaryCreated.html",[95,2.206,518,1.965]],["body/interfaces/DictionaryCreated.html",[3,0.209,4,0.233,5,0.186,7,0.388,8,1.047,12,0.604,13,0.016,24,2.549,27,3.049,46,0.333,48,0.013,49,0.013,95,3.892,100,3.57,103,3.57,231,1.407,486,4.662,494,4.894,499,3.27,500,3.27,512,3.27,518,3.466,519,3.27,520,3.27,521,3.27,522,3.536]],["title/interfaces/DictionaryDeleted.html",[100,2.206,518,1.965]],["body/interfaces/DictionaryDeleted.html",[3,0.209,4,0.233,5,0.186,7,0.388,8,1.047,12,0.604,13,0.016,24,2.549,27,3.049,46,0.333,48,0.013,49,0.013,95,3.57,100,3.892,103,3.57,231,1.407,486,3.27,494,4.894,499,3.27,500,3.27,512,4.662,518,3.466,519,3.27,520,3.27,521,3.27,522,3.536]],["title/modules/DictionaryModule.html",[50,1.039,197,2.206]],["body/modules/DictionaryModule.html",[3,0.19,4,0.212,5,0.168,13,0.016,35,0.526,46,0.212,47,0.144,48,0.012,49,0.012,50,1.752,51,3.931,52,1.802,53,1.98,54,2.31,55,2.31,56,2.08,57,3.312,58,3.312,63,2.988,64,2.31,65,2.31,67,1.033,69,2.966,70,2.08,72,2.988,151,1.078,197,4.349,207,3.207,297,2.966,402,4.6,403,2.988,440,4.185,441,3.913,523,3.913,524,4.527,525,3.913,526,3.913,527,4.527,528,4.527,529,4.527]],["title/injectables/DictionaryService.html",[74,1.23,440,2.078]],["body/injectables/DictionaryService.html",[3,0.123,4,0.137,5,0.109,7,0.228,11,1.651,12,0.585,13,0.017,18,0.87,24,2.215,31,0.98,35,0.46,36,1.351,45,1.439,46,0.137,47,0.094,48,0.009,49,0.009,67,0.671,70,1.351,74,1.387,75,1.422,77,1.222,85,1.422,86,1.81,87,1.023,89,3.481,91,1.932,92,1.634,97,1.791,113,1.926,115,1.226,116,1.647,151,1.228,155,2.668,156,1.926,157,1.948,158,1.17,176,2.94,177,2.923,178,1.58,180,0.949,187,3.734,231,1.421,278,2.099,279,1.974,297,1.926,350,2.652,358,3.381,440,2.343,530,2.541,531,3.752,532,3.752,533,3.752,534,3.752,535,2.94,536,2.94,537,3.752,538,2.94,539,3.752,540,2.94,541,3.752,542,2.94,543,3.752,544,2.94,545,4.34,546,4.926,547,4.926,548,2.94,549,2.541,550,3.752,551,2.94,552,4.34,553,2.94,554,2.94,555,3.752,556,4.34,557,2.541,558,2.541,559,2.94,560,2.94,561,2.94,562,2.541,563,2.94,564,2.94,565,5.16,566,2.541]],["title/interfaces/DictionaryUpdated.html",[103,2.206,518,1.965]],["body/interfaces/DictionaryUpdated.html",[3,0.205,4,0.228,5,0.181,7,0.379,8,1.033,12,0.627,13,0.016,24,2.533,27,2.982,46,0.33,48,0.013,49,0.013,95,3.521,100,3.521,103,3.853,231,1.398,486,3.198,494,4.866,499,4.625,500,4.625,512,3.198,518,3.432,519,3.198,520,3.198,521,3.198,522,4.765]],["title/classes/EntityException.html",[47,0.123,567,2.728]],["body/classes/EntityException.html",[3,0.152,4,0.169,5,0.135,7,0.281,8,0.847,12,0.586,13,0.016,18,0.829,24,1.755,35,0.262,45,1.103,46,0.236,47,0.115,48,0.01,49,0.01,67,0.827,77,1.419,85,2.805,87,1.261,91,1.48,92,1.557,97,1.02,115,2.846,116,0.938,126,2.317,142,1.955,175,1.511,180,0.792,228,0.978,230,3.911,231,0.969,244,2.743,252,3.831,274,2.076,435,3.304,472,3.385,567,3.572,568,2.808,569,4.861,570,5.042,571,5.042,572,6.053,573,5.042,574,4.359,575,3.622,576,6.271,577,5.042,578,5.042,579,6.271,580,5.042,581,4.861,582,5.042,583,5.042,584,3.622,585,3.622,586,3.622,587,3.131,588,3.131,589,3.622,590,3.622,591,3.622,592,3.622,593,3.622,594,5.042,595,3.622,596,3.622,597,6.271,598,2.808,599,5.8,600,3.622,601,5.042,602,2.567,603,3.622]],["title/classes/Env.html",[47,0.123,149,1.77]],["body/classes/Env.html",[3,0.176,4,0.196,5,0.156,7,0.325,13,0.016,18,0.942,35,0.303,46,0.196,47,0.133,48,0.011,49,0.011,78,4.911,116,1.795,133,4.313,149,3.186,169,4.718,175,2.32,228,1.13,280,3.742,304,1.523,474,2.743,604,3.619,605,6.287,606,6.249,607,6.249,608,6.249,609,6.249,610,4.186,611,4.186,612,4.186,613,4.186,614,4.186,615,4.186,616,4.186,617,4.186,618,4.313,619,5.162,620,4.186,621,4.186,622,3.942,623,4.186,624,4.186,625,4.186,626,4.186,627,6.249,628,3.619,629,3.619,630,4.186,631,4.186,632,4.186]],["title/classes/ErrorResponse.html",[47,0.123,633,2.728]],["body/classes/ErrorResponse.html",[3,0.165,4,0.184,5,0.147,7,0.306,8,0.898,12,0.67,13,0.016,15,1.443,18,0.898,24,2.263,35,0.285,45,1.169,46,0.184,47,0.126,48,0.011,49,0.011,77,1.504,87,1.373,91,1.569,92,1.327,97,1.11,116,1.021,157,1.636,176,2.585,177,2.786,180,1.326,228,1.064,230,4.175,231,1.249,240,2.229,244,2.338,247,2.205,253,2.338,260,2.472,261,1.207,274,3.062,280,3.272,303,2.409,304,1.434,472,2.885,569,5.266,581,5.266,602,3.787,633,4.605,634,3.409,635,4.7,636,5.344,637,5.344,638,5.344,639,3.943,640,4.62,641,3.943,642,5.344,643,3.943,644,3.943]],["title/injectables/ExceptionInterceptor.html",[74,1.23,645,2.728]],["body/injectables/ExceptionInterceptor.html",[3,0.179,4,0.199,5,0.159,7,0.331,12,0.501,13,0.016,18,0.745,35,0.485,45,1.233,46,0.199,47,0.136,48,0.012,49,0.012,67,0.974,74,1.8,75,2.064,77,1.586,85,3.051,91,1.654,92,1.399,97,1.586,116,1.633,149,1.961,150,3.023,175,1.779,230,3.228,274,2.445,392,2.445,474,2.796,645,3.992,646,5.453,647,3.688,648,5.634,649,4.87,650,5.634,651,4.267,652,4.87,653,5.201,654,5.453,655,5.8,656,4.267,657,3.688,658,5.453,659,4.87,660,4.267,661,3.307,662,3.307,663,3.688,664,2.796,665,3.688,666,4.267,667,4.267,668,4.267,669,4.267,670,4.267,671,3.307,672,4.87,673,4.267]],["title/classes/FetchDictionaryRequestParam.html",[47,0.123,421,2.523]],["body/classes/FetchDictionaryRequestParam.html",[3,0.217,4,0.242,5,0.192,7,0.402,8,1.071,11,2.423,12,0.46,13,0.016,15,1.231,18,0.684,31,1.725,35,0.46,46,0.242,47,0.203,48,0.013,49,0.013,151,1.517,180,1.131,228,1.396,231,1.224,235,2.964,240,2.657,247,1.882,260,2.423,261,1.584,268,2.263,279,1.943,314,2.964,318,2.964,319,3.16,421,4.174,674,5.507,675,5.172]],["title/classes/FetchDictionaryResponse.html",[47,0.123,425,2.523]],["body/classes/FetchDictionaryResponse.html",[3,0.12,4,0.237,5,0.106,7,0.222,8,0.714,10,1.951,11,1.615,12,0.658,13,0.016,15,1.658,18,0.964,20,1.771,24,0.993,31,0.951,35,0.455,45,1.229,46,0.133,47,0.161,48,0.009,49,0.009,77,1.195,86,1.19,87,0.993,91,1.649,92,1.394,97,1.195,116,1.099,126,1.951,140,4.564,142,2.292,151,1.011,155,2.136,157,1.552,176,1.38,177,3.323,178,1.3,179,1.635,180,1.377,228,0.77,231,1.154,236,2.587,237,1.54,238,1.54,239,1.54,243,1.136,244,1.248,247,1.038,256,1.54,257,1.54,260,1.615,261,0.874,268,1.248,269,1.311,275,4.418,277,2.212,278,2.054,279,1.427,280,3.693,281,2.782,283,3.668,286,2.467,290,1.635,291,2.905,292,1.635,294,3.67,295,3.68,297,1.87,298,1.743,303,1.743,304,1.038,358,3.323,425,4.123,450,2.022,676,5.19,677,4.253,678,2.854,679,2.854,680,2.854,681,2.854,682,2.854,683,2.854,684,2.854,685,2.854,686,2.854,687,2.854,688,2.854,689,2.854,690,2.854,691,2.854,692,3.67,693,2.854,694,4.246,695,2.854,696,2.467,697,2.467,698,2.854,699,2.854]],["title/classes/FetchTranslationResponse.html",[47,0.123,700,2.728]],["body/classes/FetchTranslationResponse.html",[3,0.127,4,0.245,5,0.112,7,0.235,8,0.745,10,2.037,11,1.686,12,0.65,13,0.016,15,1.681,18,0.975,20,1.849,24,1.053,35,0.379,45,1.264,46,0.141,47,0.096,48,0.009,49,0.009,77,1.248,86,1.262,87,1.053,91,1.696,92,1.434,97,1.248,116,1.148,126,2.037,140,4.691,142,2.393,151,1.464,152,2.143,153,1.1,155,2.197,157,1.606,176,1.463,177,3.36,178,1.357,179,1.733,180,1.406,228,0.817,231,1.182,236,2.677,237,1.633,238,1.633,239,1.633,243,1.204,244,1.323,247,1.1,256,1.633,257,1.633,269,1.39,278,2.144,279,1.477,280,3.75,281,2.905,283,3.926,290,1.733,291,3.006,292,1.733,295,3.786,303,1.848,304,1.1,321,5.225,323,2.345,333,2.615,335,1.848,692,3.832,696,2.615,697,2.615,700,4.553,701,4.994,702,3.025,703,3.025,704,3.025,705,3.025,706,3.025,707,3.025,708,3.025,709,3.025,710,3.025,711,3.025,712,3.025,713,3.025,714,3.025,715,2.615,716,3.025,717,3.025]],["title/controllers/HealthController.html",[401,1.965,718,2.728]],["body/controllers/HealthController.html",[3,0.194,4,0.217,5,0.172,7,0.36,8,0.779,12,0.528,13,0.016,15,1.103,18,0.612,35,0.43,46,0.217,47,0.148,48,0.012,49,0.012,67,1.058,77,1.674,78,4.651,97,1.304,116,1.2,157,2.12,180,1.014,231,1.143,243,1.845,261,1.419,269,2.732,401,3.034,403,2.365,447,3.283,488,3.283,602,3.283,718,4.212,719,4.006,720,6.925,721,4.634,722,5.675,723,5.14,724,5.14,725,4.634,726,4.609,727,4.634,728,4.634,729,3.592,730,6.565]],["title/modules/HealthModule.html",[50,1.039,198,2.523]],["body/modules/HealthModule.html",[3,0.236,4,0.264,5,0.21,13,0.016,35,0.485,46,0.264,47,0.18,48,0.014,49,0.014,50,1.812,52,2.245,67,1.287,198,4.399,403,3.426,718,5.079,731,5.64,732,5.64]],["title/classes/HttpExceptionsFilter.html",[47,0.123,733,2.985]],["body/classes/HttpExceptionsFilter.html",[3,0.148,4,0.165,5,0.131,7,0.274,12,0.44,13,0.017,18,0.654,35,0.472,45,1.082,46,0.165,47,0.158,48,0.01,49,0.01,67,0.804,77,1.392,87,1.722,91,1.452,92,1.228,97,1.392,115,1.47,116,0.912,142,1.902,171,3.745,172,2.019,175,2.898,227,3.504,228,0.951,230,3.274,268,1.542,274,2.019,304,1.282,392,2.834,435,2.309,437,2.153,484,2.497,567,3.504,574,5.356,581,2.732,587,3.047,598,4.43,633,3.504,635,2.732,733,3.834,734,3.047,735,5.715,736,4.803,737,3.524,738,6.766,739,3.524,740,4.946,741,4.94,742,6.196,743,3.524,744,4.946,745,2.732,746,3.524,747,3.524,748,3.524,749,2.497,750,3.524,751,3.524,752,4.946,753,3.047,754,3.524,755,3.524,756,2.732,757,3.524,758,3.047,759,3.524,760,3.047,761,3.524,762,3.524,763,3.524,764,4.946,765,3.524,766,4.946,767,3.524,768,3.524,769,3.524,770,3.524,771,4.946,772,3.047,773,4.946,774,3.524,775,4.946,776,5.715,777,3.524,778,4.946,779,4.946,780,3.524]],["title/injectables/RequestInterceptor.html",[74,1.23,781,2.728]],["body/injectables/RequestInterceptor.html",[3,0.137,4,0.152,5,0.121,7,0.253,12,0.29,13,0.017,18,0.431,35,0.477,45,0.713,46,0.152,47,0.104,48,0.01,49,0.01,67,0.744,74,1.495,75,1.576,77,1.317,91,0.957,92,0.809,97,0.917,116,0.844,149,2.15,175,3.153,176,2.263,244,2.047,304,1.702,342,2.526,360,2.526,392,1.867,437,3.655,635,2.526,649,4.045,652,4.045,653,4.637,654,4.732,655,5.171,657,2.817,658,4.732,659,4.045,661,2.526,662,2.526,663,2.817,664,3.587,665,2.817,671,3.627,722,2.817,753,4.732,760,4.045,781,3.315,782,2.817,783,3.259,784,2.859,785,3.259,786,4.679,787,3.259,788,3.259,789,3.259,790,2.817,791,3.259,792,4.637,793,4.679,794,3.259,795,3.259,796,2.817,797,2.526,798,2.817,799,5.171,800,3.259,801,3.259,802,4.679,803,3.259,804,3.259,805,3.259,806,3.259,807,3.259,808,3.259,809,3.259,810,3.259,811,3.259,812,3.259,813,3.259,814,3.259,815,3.259,816,3.259,817,4.679,818,3.259,819,3.259,820,3.259,821,5.474,822,5.474,823,4.243,824,3.259,825,2.817,826,3.259,827,4.679,828,3.259,829,3.259,830,3.259,831,3.259,832,3.259,833,3.259,834,3.259,835,3.259]],["title/modules/RequestModule.html",[50,1.039,836,2.523]],["body/modules/RequestModule.html",[3,0.203,4,0.227,5,0.18,13,0.016,35,0.485,46,0.227,47,0.154,48,0.013,49,0.013,50,1.81,52,1.931,53,2.122,54,2.475,55,2.475,56,2.229,57,3.123,58,3.422,63,3.123,64,2.475,65,2.475,67,1.107,304,1.764,342,3.76,343,4.193,664,4.394,745,3.76,784,4.653,790,4.193,836,4.758,837,4.193,838,4.193,839,4.851,840,6.121,841,6.121,842,4.851,843,4.851,844,4.851]],["title/injectables/RequestService.html",[74,1.23,784,2.352]],["body/injectables/RequestService.html",[3,0.145,4,0.162,5,0.129,7,0.269,8,0.821,12,0.503,13,0.016,18,0.914,35,0.469,45,1.238,46,0.162,47,0.11,48,0.01,49,0.01,67,0.79,74,1.56,75,1.674,77,1.375,78,4.898,85,3.472,87,1.205,91,1.661,92,1.405,97,1.73,115,2.883,116,1.591,166,1.944,171,3.2,175,1.444,178,1.495,211,4.892,231,1.246,253,1.514,279,0.974,280,4.095,664,4.941,749,2.453,784,2.984,845,2.992,846,5.659,847,6.147,848,6.147,849,4.884,850,4.884,851,3.462,852,4.884,853,3.462,854,3.462,855,4.884,856,3.462,857,4.884,858,4.884,859,3.462,860,4.884,861,3.462,862,4.884,863,4.222,864,2.992,865,3.462,866,4.884,867,2.992,868,3.462,869,4.884,870,3.462,871,3.462,872,3.462,873,3.462,874,3.462]],["title/controllers/SearchController.html",[401,1.965,875,2.728]],["body/controllers/SearchController.html",[3,0.175,4,0.195,5,0.155,7,0.324,12,0.555,13,0.016,15,0.994,18,0.552,31,1.852,35,0.515,45,0.913,46,0.195,47,0.133,48,0.011,49,0.011,67,0.953,77,1.563,91,1.226,92,1.037,97,1.757,98,2.998,115,1.741,116,1.081,128,3.576,157,1.278,173,2.392,175,1.741,180,1.215,243,1.662,261,1.278,351,2.551,401,2.13,403,2.13,405,2.958,423,3.639,424,4.305,425,4.089,435,2.736,436,3.237,440,3.369,446,4.305,447,2.958,450,2.958,454,3.639,455,3.237,456,2.736,457,2.736,458,3.237,469,3.237,470,3.237,534,4.801,562,3.609,749,2.958,875,3.935,876,3.609,877,4.175,878,4.713,879,4.175,880,5.554,881,4.175,882,5.395,883,4.175,884,3.609,885,4.175,886,4.175,887,4.175,888,4.175,889,3.609,890,4.175,891,4.175,892,4.175,893,4.175,894,4.175]],["title/classes/SearchDictionaryRequestParam.html",[47,0.123,878,2.728]],["body/classes/SearchDictionaryRequestParam.html",[3,0.15,4,0.167,5,0.133,7,0.278,8,0.839,12,0.62,13,0.016,15,1.484,17,2.295,18,0.824,24,2.366,31,1.919,35,0.451,46,0.167,47,0.183,48,0.01,49,0.01,155,2.75,156,2.341,166,2.705,172,3.571,178,1.529,180,1.487,228,0.964,231,0.96,235,2.047,240,2.834,247,1.817,253,2.727,259,3.088,260,2.495,261,1.094,262,1.928,263,3.538,264,3.107,266,2.531,267,2.531,268,1.563,270,2.531,273,2.531,298,2.183,366,4.832,546,4.977,547,5.388,549,5.67,878,3.538,889,5.388,895,5.67,896,5.388,897,3.573,898,3.573,899,3.573,900,4.994,901,3.573,902,3.573,903,4.994,904,5.757,905,3.573,906,3.573,907,4.994,908,4.994,909,3.573,910,3.573,911,3.573,912,3.573,913,3.573,914,3.573]],["title/modules/SearchModule.html",[50,1.039,199,2.523]],["body/modules/SearchModule.html",[3,0.205,4,0.228,5,0.181,13,0.016,35,0.51,46,0.228,47,0.155,48,0.013,49,0.013,50,1.815,51,4.009,52,1.943,53,2.135,54,2.49,55,2.49,56,2.243,57,2.49,58,2.49,63,3.135,64,2.49,65,2.49,67,1.114,72,3.135,197,4.255,199,4.997,206,3.784,207,3.458,403,3.135,875,4.765,915,4.881,916,4.881,917,4.881,918,4.881]],["title/entities/Seed.html",[0,1.965,147,2.206]],["body/entities/Seed.html",[0,3.028,2,2.647,3,0.194,4,0.216,5,0.172,7,0.359,8,0.997,11,2.493,12,0.636,13,0.016,15,1.561,16,3.274,18,0.866,20,2.734,21,3.274,22,4.688,24,2.066,25,4.645,35,0.474,36,2.123,40,3.625,41,3.274,42,3.4,43,3.028,44,3.028,45,1.513,46,0.216,47,0.147,48,0.012,49,0.012,127,2.823,147,3.4,231,1.141,364,4.6,365,4.6,919,3.994,920,4.621,921,5.934,922,4.621,923,4.621]],["title/modules/SeederModule.html",[50,1.039,924,2.523]],["body/modules/SeederModule.html",[3,0.189,4,0.211,5,0.168,13,0.016,35,0.535,46,0.211,47,0.144,48,0.012,49,0.012,50,1.75,52,1.797,53,1.974,54,2.303,55,2.303,56,2.074,57,3.308,58,3.308,63,2.983,64,2.303,65,2.303,67,1.03,69,2.958,70,2.074,72,2.303,124,4.446,147,2.586,148,3.499,151,1.392,152,3.198,153,2.126,154,3.902,924,4.971,925,3.902,926,3.902,927,3.902,928,5.079,929,4.514,930,4.514,931,3.902,932,4.514]],["title/injectables/SeederService.html",[74,1.23,928,2.523]],["body/injectables/SeederService.html",[3,0.163,4,0.182,5,0.145,7,0.303,8,0.891,12,0.346,13,0.016,18,0.855,35,0.435,45,0.852,46,0.182,47,0.124,48,0.011,49,0.011,67,0.889,74,1.693,75,1.883,77,1.492,85,2.914,87,1.356,91,1.143,92,0.967,97,1.492,115,2.696,116,1.008,124,3.95,127,3.95,128,3.998,130,2.759,142,2.86,147,3.998,159,3.366,165,3.018,166,1.55,173,3.451,175,2.512,178,1.192,230,3.705,304,2.191,392,2.231,437,3.95,598,3.018,672,3.366,736,3.018,749,2.759,756,3.018,772,3.366,928,3.472,931,3.366,933,3.366,934,6.978,935,3.894,936,5.299,937,5.299,938,3.894,939,3.894,940,5.299,941,3.894,942,3.894,943,3.894,944,5.299,945,3.018,946,3.894,947,5.299,948,3.894,949,5.299,950,3.894,951,3.894,952,3.894]],["title/injectables/Seeds.html",[74,1.23,127,2.352]],["body/injectables/Seeds.html",[3,0.175,4,0.195,5,0.155,7,0.324,12,0.37,13,0.016,18,0.914,35,0.48,36,1.914,45,1.557,46,0.195,47,0.133,48,0.011,49,0.011,67,0.95,70,1.914,74,1.771,75,2.014,77,1.561,87,1.45,89,4.06,91,1.222,92,1.034,97,1.754,98,3.841,113,2.729,115,1.736,116,1.078,127,3.387,128,4.077,130,4.708,131,5.744,132,5.744,133,4.298,134,3.6,138,4.793,145,3.6,147,2.386,148,3.228,161,3.808,172,2.386,173,3.177,231,0.8,588,4.793,953,3.6,954,5.982,955,4.164,956,4.164,957,4.164,958,4.164,959,4.164,960,4.164,961,4.164,962,4.164]],["title/modules/SetupModule.html",[50,1.039,200,2.523]],["body/modules/SetupModule.html",[3,0.194,4,0.217,5,0.172,13,0.016,35,0.518,46,0.217,47,0.148,48,0.012,49,0.012,50,1.772,52,1.845,53,2.027,54,2.365,55,2.365,56,2.13,57,2.365,58,2.365,63,3.034,64,2.365,65,2.365,67,1.058,72,3.034,200,5.098,209,4.802,337,4.802,836,4.802,924,4.802,963,4.006,964,4.006,965,4.634,966,4.634,967,4.634,968,4.634,969,4.634]],["title/classes/TimestampsEntity.html",[47,0.123,970,2.985]],["body/classes/TimestampsEntity.html",[3,0.189,4,0.211,5,0.168,7,0.351,8,0.982,10,2.979,12,0.609,13,0.016,15,1.392,18,0.772,20,3.034,22,4.493,35,0.496,42,3.349,43,2.958,44,3.83,46,0.211,47,0.144,48,0.012,49,0.012,228,1.218,236,2.983,260,2.466,261,1.382,269,2.686,278,3.136,386,3.961,388,3.83,389,3.499,392,3.349,954,3.902,970,4.531,971,3.902,972,5.845,973,5.845,974,4.514,975,4.514,976,5.845,977,5.845,978,4.514,979,4.514,980,4.514,981,4.514,982,4.514]],["title/interfaces/TimestampsInterface.html",[386,2.352,518,1.965]],["body/interfaces/TimestampsInterface.html",[3,0.231,4,0.258,5,0.205,7,0.429,8,1.114,10,3.386,12,0.589,13,0.016,20,3.191,46,0.258,48,0.014,49,0.014,278,3.563,386,4.049,518,2.817,519,3.617,983,4.772]],["title/entities/Translation.html",[0,1.965,153,1.401]],["body/entities/Translation.html",[0,2.169,2,1.638,3,0.12,4,0.263,5,0.106,7,0.33,8,0.715,10,2.333,11,2.285,12,0.666,13,0.016,15,1.659,16,4.257,17,3.079,18,0.921,20,2.626,21,2.025,22,3.683,24,1.48,25,3.596,30,4.881,31,2.003,35,0.484,36,1.314,40,3.984,41,2.025,42,2.436,43,1.873,44,2.786,45,0.93,46,0.134,47,0.091,48,0.009,49,0.009,151,1.63,153,1.547,155,2.548,157,2.051,158,1.138,166,1.692,178,1.554,180,1.11,231,1.288,243,1.138,253,1.251,278,2.455,279,1.691,315,1.873,358,1.873,360,3.296,364,4.357,365,4.357,366,3.296,373,3.675,375,2.471,377,2.471,379,3.675,381,2.216,382,3.675,386,2.597,387,2.471,388,2.786,389,2.216,390,2.471,391,2.471,392,1.638,393,2.471,394,2.471,395,2.471,396,2.471,398,2.471,399,2.471,400,2.471,984,2.471,985,2.859,986,2.859,987,2.859,988,4.252,989,2.859,990,4.252,991,2.859,992,2.859,993,2.859,994,2.859,995,2.859,996,2.859,997,2.859,998,2.859,999,4.252,1000,2.471,1001,2.859]],["title/controllers/TranslationController.html",[401,1.965,1002,2.728]],["body/controllers/TranslationController.html",[3,0.082,4,0.092,5,0.073,7,0.152,11,1.517,12,0.504,13,0.016,15,1.091,18,0.606,35,0.499,45,1.003,46,0.092,47,0.062,48,0.006,49,0.006,62,2.286,67,0.447,77,0.892,85,1.93,86,1.664,87,0.682,91,1.346,92,1.138,97,2.009,98,2.908,115,1.664,116,1.187,128,3.742,142,1.057,149,0.9,150,1.387,151,1.091,153,1.451,157,1.222,158,0.779,161,1.196,166,0.779,170,1.387,171,2.076,172,2.286,173,3.495,175,2.613,176,0.947,177,0.9,180,1.371,187,1.283,243,0.779,252,2.437,261,0.599,275,2.437,279,1.804,304,1.668,306,2.627,317,3.004,335,1.196,350,1.935,351,1.196,352,3.248,354,2.801,356,2.827,401,0.999,403,0.999,405,1.387,406,3.449,407,2.738,411,5.104,412,1.693,413,1.693,414,2.738,415,2.738,416,4.657,417,4.352,419,5.416,420,1.693,421,3.004,423,2.076,424,4.176,427,1.693,429,1.693,430,2.738,432,1.693,433,3.449,434,1.693,435,1.283,436,1.518,437,1.196,438,1.693,439,1.693,440,2.153,442,1.693,443,1.693,444,2.738,445,2.738,446,2.456,447,1.387,448,1.693,450,1.387,452,1.693,453,1.693,454,3.299,455,2.456,456,2.076,457,1.283,458,1.518,459,3.248,460,1.693,461,2.244,462,2.076,464,3.248,468,1.693,469,1.518,470,1.518,471,1.693,472,3.382,473,1.693,474,3.004,475,1.693,476,3.817,477,4.657,480,1.693,482,3.449,483,3.093,484,2.827,485,3.093,486,2.614,487,3.449,488,2.827,489,1.693,490,1.518,491,1.518,494,2.614,497,1.693,498,1.693,499,2.614,500,2.614,501,3.449,502,3.093,504,2.738,505,2.738,506,2.738,507,1.693,508,2.738,509,1.693,510,1.693,511,1.693,512,2.614,513,1.518,515,2.738,516,1.693,517,1.693,700,2.827,715,1.693,884,1.693,1002,2.244,1003,1.693,1004,1.958,1005,1.958,1006,1.958,1007,1.958,1008,1.958,1009,1.958,1010,3.168,1011,1.958,1012,1.958,1013,3.004,1014,1.958,1015,1.935,1016,1.693,1017,2.456,1018,1.958,1019,1.958,1020,1.958,1021,1.958,1022,1.958,1023,3.168,1024,1.958,1025,1.958,1026,1.958,1027,1.958,1028,1.958,1029,1.958,1030,1.958,1031,1.958,1032,1.958]],["title/modules/TranslationModule.html",[50,1.039,201,2.523]],["body/modules/TranslationModule.html",[3,0.189,4,0.21,5,0.167,13,0.016,35,0.535,46,0.21,47,0.143,48,0.012,49,0.012,50,1.748,51,3.925,52,1.791,53,1.969,54,2.296,55,2.296,56,2.068,57,3.303,58,2.296,63,2.977,64,2.296,65,2.296,67,1.027,69,2.949,70,2.068,72,2.977,153,1.637,197,4.166,201,5.011,206,3.489,207,3.189,335,2.75,403,2.977,1002,4.587,1015,4.442,1016,3.891,1033,3.891,1034,4.501,1035,3.891,1036,4.501,1037,4.501,1038,4.501]],["title/classes/TranslationProperty.html",[47,0.123,677,2.728]],["body/classes/TranslationProperty.html",[3,0.13,4,0.273,5,0.115,7,0.241,8,0.758,10,2.444,11,2.023,12,0.639,13,0.016,15,1.664,18,0.951,20,2.436,24,1.57,35,0.449,45,0.987,46,0.145,47,0.144,48,0.009,49,0.009,77,1.269,87,1.078,91,1.324,92,1.12,97,0.872,116,0.802,153,1.935,155,2.607,157,1.984,158,1.233,177,3.212,178,1.628,179,2.584,180,1.591,184,1.775,228,0.836,231,1.365,236,2.714,237,2.434,238,2.434,239,2.434,243,1.233,244,1.973,247,1.127,256,2.434,257,2.434,260,2.362,261,0.948,269,2.853,278,2.572,279,1.748,280,2.871,281,2.955,283,4.396,290,2.584,291,3.713,292,2.584,295,2.955,298,1.892,303,1.892,304,1.127,315,2.029,335,1.892,677,3.768,1039,2.677,1040,4.51,1041,3.097,1042,3.097,1043,3.097,1044,3.097,1045,3.097,1046,3.097,1047,3.097,1048,3.097,1049,3.097,1050,3.097]],["title/injectables/TranslationService.html",[74,1.23,1015,2.352]],["body/injectables/TranslationService.html",[3,0.139,4,0.155,5,0.124,7,0.258,10,1.526,11,1.263,12,0.59,13,0.017,18,0.877,35,0.48,36,1.526,45,1.452,46,0.155,47,0.106,48,0.01,49,0.01,67,0.758,70,1.526,74,1.515,75,1.607,77,1.335,85,1.607,86,1.978,87,1.156,89,3.687,91,1.948,92,1.648,97,1.796,113,2.176,115,1.385,116,1.652,151,1.663,153,2.012,155,1.263,157,1.848,158,1.322,175,1.385,176,3.21,177,3.05,178,1.017,180,0.727,187,3.108,231,1.417,279,2.001,335,2.029,350,2.898,531,4.1,532,4.1,533,4.1,537,4.1,539,4.1,541,4.1,543,4.1,550,4.1,555,2.871,557,2.871,558,2.871,566,2.871,1000,2.871,1015,2.898,1051,2.871,1052,3.322,1053,3.322,1054,3.322,1055,3.322,1056,3.322,1057,3.322,1058,3.322,1059,3.322,1060,3.322,1061,3.322,1062,3.322,1063,3.322,1064,5.532]],["title/classes/UpdateDictionaryRequest.html",[47,0.123,428,2.523]],["body/classes/UpdateDictionaryRequest.html",[3,0.191,4,0.213,5,0.17,7,0.355,8,0.99,12,0.406,13,0.016,15,1.087,17,2.707,18,0.603,31,1.523,35,0.498,46,0.275,47,0.208,48,0.012,49,0.012,86,1.904,92,1.462,126,2.707,151,1.087,157,2.347,158,1.818,180,1.288,228,1.233,231,0.878,233,2.79,235,2.616,240,2.719,247,1.661,253,1.998,260,2.48,261,1.398,262,2.465,264,3.179,268,1.998,279,1.658,314,2.616,318,2.616,348,2.79,351,2.79,428,3.859,472,3.179,1065,4.565,1066,5.091,1067,3.948,1068,4.566,1069,3.235,1070,3.235]],["title/classes/UpdateDictionaryRequestParam.html",[47,0.123,348,2.352]],["body/classes/UpdateDictionaryRequestParam.html",[3,0.195,4,0.217,5,0.173,7,0.361,8,1.001,12,0.413,13,0.016,15,1.107,17,2.136,18,0.614,31,1.55,35,0.501,46,0.278,47,0.209,48,0.012,49,0.012,86,1.938,126,2.136,151,1.418,157,2.195,158,1.85,180,1.303,228,1.255,231,1.145,233,2.84,235,2.663,240,2.741,247,1.691,253,2.033,260,2.5,261,1.423,262,2.509,264,3.215,268,2.033,279,2.018,314,2.663,318,2.663,319,2.84,348,3.639,351,2.84,428,3.046,472,2.509,1065,4.618,1066,4.018,1069,3.293,1070,3.293,1071,4.648]],["title/classes/UpdateTranslationRequest.html",[47,0.123,1013,2.523]],["body/classes/UpdateTranslationRequest.html",[3,0.191,4,0.213,5,0.17,7,0.355,8,0.99,12,0.406,13,0.016,15,1.087,17,2.707,18,0.603,31,1.523,35,0.498,46,0.275,47,0.208,48,0.012,49,0.012,86,1.904,92,1.462,126,2.707,151,1.087,157,2.347,158,1.818,180,1.288,228,1.233,231,0.878,240,2.719,247,1.661,253,1.998,260,2.48,261,1.398,262,2.465,264,3.179,268,1.998,279,1.658,306,2.616,308,2.79,314,2.616,318,2.616,354,2.79,356,3.235,472,3.179,1013,3.859,1067,3.948,1069,3.235,1070,3.235,1072,4.565,1073,5.091,1074,4.566]],["title/classes/UpdateTranslationRequestParam.html",[47,0.123,354,2.352]],["body/classes/UpdateTranslationRequestParam.html",[3,0.195,4,0.217,5,0.173,7,0.361,8,1.001,12,0.413,13,0.016,15,1.107,17,2.136,18,0.614,31,1.55,35,0.501,46,0.278,47,0.209,48,0.012,49,0.012,86,1.938,126,2.136,151,1.418,157,2.195,158,1.85,180,1.303,228,1.255,231,1.145,240,2.741,247,1.691,253,2.033,260,2.5,261,1.423,262,2.509,264,3.215,268,2.033,279,2.018,306,2.663,308,2.84,314,2.663,318,2.663,319,2.84,354,3.639,356,3.293,472,2.509,1013,3.046,1069,3.293,1070,3.293,1072,4.618,1073,4.018,1075,4.648]],["title/coverage.html",[1076,4.077]],["body/coverage.html",[0,2.356,1,1.299,5,0.074,6,1.714,12,0.176,13,0.016,20,1.335,40,1.211,42,1.136,47,0.233,48,0.007,49,0.007,56,0.911,62,1.136,74,1.957,76,1.714,95,1.136,100,1.136,103,1.136,124,1.211,125,1.714,127,1.211,147,1.136,149,0.911,151,0.762,153,1.164,161,1.211,168,1.299,172,4.555,212,1.537,227,1.405,229,1.714,233,1.211,234,1.714,235,3.105,275,1.211,276,1.714,277,2.481,304,0.721,306,1.136,307,2.481,308,3.096,317,1.299,321,1.405,322,1.714,323,2.481,346,1.405,347,1.714,348,1.211,352,1.405,353,1.714,354,1.211,357,2.767,386,1.211,388,1.299,401,2.356,402,1.405,404,1.714,421,1.299,423,1.299,425,1.299,428,1.299,440,1.07,454,1.299,456,3.887,457,1.299,459,1.405,461,1.405,462,1.299,464,1.405,465,1.537,476,1.405,518,2.356,520,2.637,521,2.637,530,1.714,567,1.405,568,1.537,604,1.714,633,1.405,634,1.714,645,1.405,646,1.714,647,1.714,674,1.714,676,1.714,677,1.405,700,1.405,701,1.714,718,1.405,719,1.714,726,1.537,733,1.537,734,1.714,781,1.405,782,1.714,784,1.211,823,1.537,845,1.714,875,1.405,876,1.714,878,1.405,895,1.714,919,1.714,928,1.299,933,1.714,953,1.714,970,1.537,971,1.714,983,1.714,984,2.767,1002,1.405,1003,1.714,1013,1.299,1015,1.211,1017,1.537,1039,1.714,1051,1.714,1065,2.481,1072,2.481,1076,1.537,1077,1.983,1078,1.983,1079,1.983,1080,7.601,1081,1.983,1082,5.418,1083,1.983,1084,1.714,1085,5.979,1086,1.714,1087,1.714,1088,1.714,1089,1.714,1090,1.714,1091,2.767,1092,1.714,1093,1.714,1094,1.714,1095,1.714,1096,1.714,1097,6.984,1098,1.714,1099,4.38,1100,1.714,1101,1.714,1102,1.714,1103,3.478,1104,3.478,1105,1.714,1106,4.024,1107,4.024,1108,1.714,1109,1.714,1110,5.128,1111,1.714,1112,1.714,1113,4.684,1114,1.714,1115,1.714,1116,1.714,1117,1.714,1118,1.714,1119,1.714,1120,1.714,1121,6.554,1122,1.983,1123,1.983,1124,3.2,1125,1.714,1126,1.714,1127,4.684,1128,1.714,1129,1.714,1130,1.714,1131,1.405,1132,1.714,1133,3.2,1134,5.7,1135,3.58,1136,3.478,1137,1.714,1138,1.714,1139,1.714,1140,3.2,1141,3.2,1142,3.2,1143,1.983,1144,1.983,1145,1.983,1146,1.714]],["title/dependencies.html",[53,2.026,1147,2.778]],["body/dependencies.html",[13,0.017,36,2.086,47,0.187,48,0.012,49,0.012,53,1.986,67,1.036,70,2.086,149,2.086,226,5.072,261,1.39,268,1.986,279,1.278,298,2.774,340,3.925,661,3.519,745,3.519,797,3.519,798,3.925,863,3.925,864,5.072,1148,4.54,1149,5.867,1150,4.54,1151,6.501,1152,4.54,1153,4.54,1154,4.54,1155,4.54,1156,4.54,1157,4.54,1158,4.54,1159,4.54,1160,4.54,1161,4.54,1162,4.54,1163,4.54,1164,4.54,1165,4.54,1166,4.54,1167,4.54,1168,4.54,1169,4.54,1170,4.54,1171,4.54,1172,4.54,1173,4.54,1174,4.54,1175,4.54,1176,4.54,1177,4.54,1178,4.54,1179,4.54,1180,4.54,1181,4.54,1182,4.54,1183,4.54,1184,4.54,1185,4.54,1186,4.54,1187,4.54,1188,4.54,1189,4.54]],["title/miscellaneous/enumerations.html",[1190,1.735,1191,4.004]],["body/miscellaneous/enumerations.html",[7,0.332,11,1.627,13,0.016,14,4.375,33,4.375,48,0.012,49,0.012,151,1.344,153,2.053,155,2.147,157,1.728,168,3.699,178,2.435,462,3.699,491,4.375,502,4.375,513,5.207,605,4.879,622,3.031,664,2.803,867,4.879,1131,3.999,1190,2.309,1191,3.698,1192,5.644,1193,4.278,1194,3.698,1195,4.278,1196,4.278,1197,4.278,1198,4.278,1199,5.644,1200,5.644,1201,5.644,1202,5.644,1203,3.698,1204,4.879,1205,4.278,1206,5.644,1207,4.278,1208,4.278,1209,4.278,1210,4.278,1211,5.644,1212,5.644,1213,5.644,1214,5.644]],["title/miscellaneous/functions.html",[1190,1.735,1215,4.004]],["body/miscellaneous/functions.html",[7,0.207,12,0.656,13,0.016,20,2.264,24,1.891,36,1.226,40,3.563,42,2.313,45,1.603,48,0.008,49,0.008,91,2.151,92,1.819,97,1.528,98,1.44,116,1.045,161,2.466,166,2.612,169,1.89,178,2.057,243,1.062,388,2.645,423,2.645,454,2.645,456,4.801,457,2.645,459,3.45,461,2.86,462,2.645,464,2.86,465,3.129,476,2.86,726,3.129,1017,3.129,1096,2.306,1098,2.306,1099,5.673,1103,2.306,1104,5.042,1105,3.49,1108,3.49,1109,3.49,1110,5.673,1111,3.49,1112,3.49,1113,6.097,1114,3.49,1115,3.49,1116,3.49,1117,3.49,1118,2.306,1135,2.068,1136,5.304,1190,1.44,1215,2.306,1216,6.563,1217,2.668,1218,2.668,1219,4.21,1220,4.87,1221,2.668,1222,2.668,1223,7.207,1224,6.373,1225,2.668,1226,2.668,1227,2.668,1228,2.668,1229,2.668,1230,2.668,1231,2.668,1232,7.053,1233,2.668,1234,2.668,1235,4.87,1236,2.306,1237,2.668,1238,2.668,1239,2.668,1240,2.668,1241,2.668,1242,2.668,1243,2.668,1244,2.306,1245,4.87,1246,2.668,1247,4.037,1248,3.49,1249,4.037,1250,4.037,1251,4.037,1252,2.668,1253,2.668,1254,4.87,1255,2.668]],["title/index.html",[7,0.25,792,2.491,1256,3.214]],["body/index.html",[2,2.966,3,0.124,13,0.016,31,1.453,45,1.25,48,0.009,49,0.009,53,1.293,86,2.159,89,1.806,130,5.311,149,2.003,165,2.292,168,2.856,180,0.647,217,4.013,219,3.088,240,1.818,244,1.293,269,2.929,304,2.398,344,2.556,358,1.937,381,2.292,483,3.379,485,2.292,490,2.292,569,2.292,618,2.292,619,3.379,622,2.095,723,2.556,724,4.939,729,2.292,882,2.556,896,4.475,945,2.292,1076,2.292,1085,2.556,1131,2.095,1146,2.556,1204,4.475,1244,2.556,1257,2.956,1258,2.292,1259,2.956,1260,2.956,1261,2.956,1262,2.956,1263,2.956,1264,2.956,1265,2.956,1266,7.451,1267,2.956,1268,2.956,1269,2.956,1270,4.939,1271,2.956,1272,2.956,1273,2.956,1274,2.956,1275,2.956,1276,2.956,1277,2.556,1278,2.556,1279,2.956,1280,6.093,1281,6.374,1282,5.177,1283,2.956,1284,2.956,1285,2.956,1286,4.359,1287,5.177,1288,5.714,1289,5.177,1290,5.714,1291,2.956,1292,4.359,1293,2.956,1294,2.956,1295,2.956,1296,5.714,1297,2.956,1298,2.956,1299,2.956,1300,2.956,1301,2.956,1302,2.556,1303,2.956,1304,2.956,1305,4.359,1306,4.359,1307,2.956,1308,2.956,1309,2.956,1310,2.956,1311,2.956,1312,2.556,1313,2.956,1314,2.956,1315,2.956,1316,2.956,1317,4.359,1318,2.956,1319,3.768,1320,2.956,1321,2.956,1322,2.956,1323,4.359,1324,2.956,1325,2.956,1326,2.956,1327,4.359,1328,3.768,1329,2.956,1330,2.956,1331,2.956,1332,2.956,1333,2.956,1334,4.359,1335,3.768,1336,2.956,1337,2.956,1338,2.956,1339,2.956,1340,2.956,1341,4.359,1342,2.956,1343,2.956,1344,2.956,1345,2.956,1346,2.956,1347,2.956,1348,2.956,1349,2.956,1350,2.956,1351,2.956,1352,2.956,1353,2.556,1354,2.956,1355,2.956,1356,2.956,1357,2.956,1358,4.359,1359,2.956,1360,2.956,1361,2.956,1362,4.359,1363,2.956,1364,2.956]],["title/modules.html",[52,2.093]],["body/modules.html",[13,0.013,48,0.013,49,0.013,51,2.773,52,2.045,194,3.64,197,2.944,198,3.367,199,3.367,200,3.367,201,3.367,209,3.367,337,3.367,484,4.877,836,3.367,924,3.367,1353,6.657,1365,7.701,1366,7.701,1367,7.853,1368,6.883]],["title/overview.html",[1369,4.546]],["body/overview.html",[2,2.09,13,0.016,48,0.01,49,0.01,50,0.985,51,3.921,52,1.452,53,1.596,54,1.861,55,1.861,56,1.676,57,1.861,58,1.861,59,3.153,60,3.153,61,3.153,62,4.02,63,2.585,64,1.861,65,1.861,75,1.764,124,3.557,194,5.385,195,3.153,196,3.153,197,4.214,198,3.815,199,4.597,200,4.87,201,4.76,209,3.815,228,0.985,337,3.815,403,1.861,440,3.787,519,2.39,523,3.153,525,3.153,526,3.153,784,3.843,836,4.122,837,3.153,838,3.153,924,4.687,925,3.153,926,3.153,927,3.153,928,4.597,963,3.153,964,3.153,1015,3.557,1033,3.153,1035,3.153,1369,3.153,1370,3.648,1371,5.821,1372,3.648,1373,3.648]],["title/properties.html",[8,0.779,1147,2.778]],["body/properties.html",[8,0.987,13,0.016,48,0.014,49,0.014,180,1.285,219,4.162,729,4.553,1258,4.553,1374,5.874,1375,5.078,1376,5.874,1377,5.874,1378,5.874,1379,5.874]],["title/miscellaneous/typealiases.html",[1190,1.735,1380,4.632]],["body/miscellaneous/typealiases.html",[7,0.44,12,0.598,13,0.015,27,4.11,48,0.014,49,0.014,95,3.243,100,3.243,103,3.243,520,3.709,521,4.409,568,4.388,572,5.816,662,5.215,1190,3.055,1194,4.893,1203,4.893,1381,5.66,1382,5.66,1383,5.66,1384,5.66]],["title/miscellaneous/variables.html",[1190,1.735,1385,4.004]],["body/miscellaneous/variables.html",[2,1.79,5,0.072,7,0.149,12,0.566,13,0.017,31,2.021,45,0.421,48,0.006,49,0.006,56,2.587,77,0.542,86,0.802,98,1.686,116,1.65,128,1.79,142,1.686,149,1.435,153,0.7,166,2.735,168,2.583,169,1.363,170,2.213,173,2.259,175,2.833,178,2.104,180,0.421,212,2.421,217,3.056,219,2.793,230,3.361,231,0.6,253,1.366,283,1.175,304,2.205,339,1.663,405,1.363,437,2.409,474,1.261,488,2.213,522,1.363,602,1.363,618,1.491,619,2.421,622,1.363,628,1.663,629,2.7,640,1.663,645,1.363,653,2.421,671,1.491,736,1.491,741,1.663,756,1.491,758,2.7,781,1.363,792,2.421,796,1.663,797,1.491,799,2.7,823,2.421,825,1.663,945,1.491,1084,1.663,1086,1.663,1087,2.7,1088,3.408,1089,1.663,1090,2.7,1091,2.7,1092,2.7,1093,3.408,1094,2.7,1095,2.7,1100,1.663,1101,2.7,1102,3.408,1119,1.663,1120,2.7,1125,1.663,1126,3.408,1127,1.663,1128,4.313,1129,3.922,1130,2.7,1131,2.793,1132,3.408,1135,1.491,1137,2.7,1138,1.663,1139,2.7,1190,1.039,1219,1.663,1236,1.663,1248,1.663,1258,3.056,1270,1.663,1277,1.663,1278,1.663,1302,1.663,1312,1.663,1319,1.663,1328,1.663,1335,1.663,1375,1.663,1385,1.663,1386,1.924,1387,5.344,1388,1.924,1389,1.924,1390,1.924,1391,3.123,1392,1.924,1393,1.924,1394,1.924,1395,3.123,1396,1.924,1397,3.123,1398,1.924,1399,1.924,1400,1.924,1401,1.924,1402,1.924,1403,1.924,1404,1.924,1405,3.123,1406,3.123,1407,1.924,1408,1.924,1409,1.924,1410,1.924,1411,1.924,1412,1.924,1413,1.924,1414,1.924,1415,1.924,1416,1.924,1417,1.924,1418,1.924,1419,1.924,1420,1.924,1421,1.924,1422,1.924,1423,1.924,1424,1.924,1425,1.924,1426,1.924,1427,1.924,1428,3.942,1429,1.924,1430,1.924,1431,1.924,1432,1.924,1433,1.924,1434,1.924,1435,1.924,1436,1.924,1437,1.924,1438,1.924,1439,1.924,1440,1.924,1441,3.942,1442,1.924,1443,1.924,1444,1.924,1445,1.924,1446,1.924,1447,1.924,1448,1.924,1449,1.924,1450,1.924,1451,4.537,1452,1.924,1453,1.924,1454,1.924,1455,1.924,1456,1.924,1457,1.924,1458,1.924,1459,3.123,1460,3.942,1461,3.123,1462,1.924,1463,1.924,1464,1.924,1465,3.942,1466,1.924,1467,1.924,1468,3.123,1469,1.924,1470,3.123,1471,1.924,1472,3.123,1473,1.924,1474,3.123,1475,1.924,1476,1.924,1477,1.924,1478,1.924,1479,1.924,1480,3.123,1481,1.924,1482,1.924,1483,1.924,1484,1.924,1485,3.123,1486,1.924,1487,1.924,1488,1.924,1489,3.123,1490,1.924,1491,1.924,1492,1.924,1493,1.924,1494,1.924,1495,1.924,1496,1.924,1497,1.924,1498,1.924,1499,1.924,1500,1.924,1501,1.924,1502,1.924,1503,1.924,1504,3.942,1505,1.924,1506,1.924,1507,1.924,1508,1.924,1509,3.123,1510,3.123,1511,1.924,1512,3.942,1513,1.924,1514,1.924,1515,1.924,1516,1.924,1517,1.924,1518,1.924,1519,1.924,1520,1.924,1521,3.942,1522,1.924,1523,1.924,1524,1.924,1525,1.924,1526,1.924,1527,1.924,1528,1.924,1529,1.924,1530,1.924]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":172,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"classes/HttpExceptionsFilter.html":{},"classes/SearchDictionaryRequestParam.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["0.0.0.0",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.0.3",{"_index":1374,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["0.2.37",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1080,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1140,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1141,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1143,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1082,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1134,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1124,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1144,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1081,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":973,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["01t00:00:00.000z",{"_index":981,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["01t00:00:00.000z'})@createdatecolumn({type",{"_index":974,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["04",{"_index":977,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["1",{"_index":488,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/HealthController.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["1/1",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1123,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["10.2.7",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["11",{"_index":1370,"title":{},"body":{"overview.html":{}}}],["1234",{"_index":291,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["12345678",{"_index":290,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["123456789012",{"_index":292,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["128",{"_index":921,"title":{},"body":{"entities/Seed.html":{}}}],["16.3.1",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["17.11.0",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["1st",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":673,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["2.1.0",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["2.1.3",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1122,"title":{},"body":{"coverage.html":{}}}],["2020",{"_index":972,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["2022",{"_index":976,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["24",{"_index":1373,"title":{},"body":{"overview.html":{}}}],["25t08:34:33.315z",{"_index":982,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["25t08:34:33.315z'})@updatedatecolumn({type",{"_index":978,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["3.1.1",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["3.6.2",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["32",{"_index":366,"title":{},"body":{"entities/Dictionary.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Translation.html":{}}}],["4",{"_index":1371,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["5.0.5",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["5.2.4",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["512",{"_index":379,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["7.0.3",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["7.1.14",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1372,"title":{},"body":{"overview.html":{}}}],["9.0.1",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["9.0.2",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["abortearly",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1299,"title":{},"body":{"index.html":{}}}],["abstract",{"_index":954,"title":{},"body":{"injectables/Seeds.html":{},"classes/TimestampsEntity.html":{}}}],["accept",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accepted",{"_index":414,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["accessors",{"_index":133,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/Env.html":{},"injectables/Seeds.html":{}}}],["action",{"_index":9,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{}}}],["active",{"_index":1211,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["actively",{"_index":1305,"title":{},"body":{"index.html":{}}}],["activity",{"_index":1,"title":{"entities/Activity.html":{}},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"coverage.html":{}}}],["activity.entity",{"_index":71,"title":{},"body":{"modules/ActivityModule.html":{},"injectables/ActivityService.html":{}}}],["activity.enum",{"_index":37,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{}}}],["activity.interface",{"_index":39,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{}}}],["activity.interface.ts",{"_index":521,"title":{},"body":{"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["activity.service",{"_index":68,"title":{},"body":{"modules/ActivityModule.html":{}}}],["activity/activity.module",{"_index":207,"title":{},"body":{"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/SearchModule.html":{},"modules/TranslationModule.html":{}}}],["activity/activity.service",{"_index":453,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["activityaction",{"_index":14,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"miscellaneous/enumerations.html":{}}}],["activityaction.created",{"_index":120,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activityaction.deleted",{"_index":122,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activityaction.updated",{"_index":121,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activitymodule",{"_index":51,"title":{"modules/ActivityModule.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/SearchModule.html":{},"modules/TranslationModule.html":{},"modules.html":{},"overview.html":{}}}],["activityrepository",{"_index":93,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activityservice",{"_index":62,"title":{"injectables/ActivityService.html":{}},"body":{"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"overview.html":{}}}],["activitytype",{"_index":33,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"miscellaneous/enumerations.html":{}}}],["activitytype.dictionary",{"_index":119,"title":{},"body":{"injectables/ActivityService.html":{}}}],["activitytype.translation",{"_index":123,"title":{},"body":{"injectables/ActivityService.html":{}}}],["add",{"_index":165,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/SeederService.html":{},"index.html":{}}}],["addbearerauth",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adddefaultvaluesfordevelopment",{"_index":124,"title":{"injectables/AddDefaultValuesForDevelopment.html":{}},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["adddevelopmentvalues",{"_index":937,"title":{},"body":{"injectables/SeederService.html":{}}}],["adddictionarycreated",{"_index":79,"title":{},"body":{"injectables/ActivityService.html":{}}}],["adddictionarycreated(activity",{"_index":94,"title":{},"body":{"injectables/ActivityService.html":{}}}],["adddictionarydeleted",{"_index":80,"title":{},"body":{"injectables/ActivityService.html":{}}}],["adddictionarydeleted(activity",{"_index":99,"title":{},"body":{"injectables/ActivityService.html":{}}}],["adddictionaryupdated",{"_index":81,"title":{},"body":{"injectables/ActivityService.html":{}}}],["adddictionaryupdated(activity",{"_index":102,"title":{},"body":{"injectables/ActivityService.html":{}}}],["adding",{"_index":1306,"title":{},"body":{"index.html":{}}}],["addtranslationcreated",{"_index":82,"title":{},"body":{"injectables/ActivityService.html":{}}}],["addtranslationcreated(activity",{"_index":105,"title":{},"body":{"injectables/ActivityService.html":{}}}],["addtranslationdeleted",{"_index":83,"title":{},"body":{"injectables/ActivityService.html":{}}}],["addtranslationdeleted(activity",{"_index":107,"title":{},"body":{"injectables/ActivityService.html":{}}}],["addtranslationupdated",{"_index":84,"title":{},"body":{"injectables/ActivityService.html":{}}}],["addtranslationupdated(activity",{"_index":109,"title":{},"body":{"injectables/ActivityService.html":{}}}],["affected",{"_index":505,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["agent",{"_index":825,"title":{},"body":{"injectables/RequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["agent.decorator.ts",{"_index":1120,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":1381,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alive",{"_index":730,"title":{},"body":{"controllers/HealthController.html":{}}}],["allowed",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowedheaders",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowunknown",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alter",{"_index":1331,"title":{},"body":{"index.html":{}}}],["always",{"_index":1317,"title":{},"body":{"index.html":{}}}],["api",{"_index":456,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiacceptedresponse",{"_index":444,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["apibadrequestresponse",{"_index":454,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apibadrequestresponse()@httpcode(httpstatus.ok)@get('find/:uuid')@apinotfoundresponse({description",{"_index":1009,"title":{},"body":{"controllers/TranslationController.html":{}}}],["apibadrequestresponse(options",{"_index":1222,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiconflictresponse",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiconflictresponse(options",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apicreatedresponse",{"_index":461,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apicreatedresponse(options",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apinocontentresponse",{"_index":445,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["apinotfoundresponse",{"_index":1017,"title":{},"body":{"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apinotfoundresponse(options",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiokresponse",{"_index":726,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiokresponse(options",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiproperty",{"_index":260,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/TimestampsEntity.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["apiproperty({description",{"_index":247,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["apiproperty({example",{"_index":236,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TimestampsEntity.html":{},"classes/TranslationProperty.html":{}}}],["apiproperty({required",{"_index":900,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["apiproperty({type",{"_index":678,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["apiprotected",{"_index":459,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiprotected()@apibadrequestresponse()@httpcode(httpstatus.accepted)@delete('delete/:uuid')@apiacceptedresponse({description",{"_index":413,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["apiprotected()@apibadrequestresponse()@httpcode(httpstatus.no_content)@patch('update/:uuid')@apinocontentresponse({description",{"_index":429,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["apiprotected()@apibadrequestresponse()@post('create')@httpcode(httpstatus.created)@apicreatedresponse({type",{"_index":409,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["apiprotected()@apibadrequestresponse()@post('create/:uuid')@httpcode(httpstatus.created)@apiunprocessableentityresponse({description",{"_index":1005,"title":{},"body":{"controllers/TranslationController.html":{}}}],["apiresponse",{"_index":446,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["apiresponseoptions",{"_index":1223,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apitags",{"_index":447,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["apitags('dictionary",{"_index":466,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["apitags('health",{"_index":727,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('search",{"_index":886,"title":{},"body":{"controllers/SearchController.html":{}}}],["apitags('translation",{"_index":1020,"title":{},"body":{"controllers/TranslationController.html":{}}}],["apiunauthorizedresponse",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiunauthorizedresponse(options",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["apiunprocessableentityresponse",{"_index":464,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["apiunprocessableentityresponse(options",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["app",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enablecors",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.enableversioning",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.get(configservice",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.gethttpadapter().getinstance().disable('x",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.geturl",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.listen(appport",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.setglobalprefix('/api",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalinterceptors",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.useglobalpipes",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.uselogger(loggerservice",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":1375,"title":{},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":194,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appport",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["argumentshost",{"_index":742,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["array",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(payload",{"_index":697,"title":{},"body":{"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{}}}],["array.length",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array[math.floor(math.random",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":128,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1277,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":1378,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":484,"title":{},"body":{"controllers/DictionaryController.html":{},"classes/HttpExceptionsFilter.html":{},"controllers/TranslationController.html":{},"modules.html":{}}}],["await",{"_index":173,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":1258,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["bad",{"_index":457,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["bcrypt",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bearerformat",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bgcyan(env.nodeenv",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bidirectional",{"_index":395,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["body",{"_index":433,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["boilerplate",{"_index":1260,"title":{},"body":{"index.html":{}}}],["bold",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":857,"title":{},"body":{"injectables/RequestService.html":{}}}],["bootstrap",{"_index":56,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["browse",{"_index":1367,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1365,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1335,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["cache",{"_index":226,"title":{},"body":{"modules/ConfigModule.html":{},"dependencies.html":{}}}],["callback",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["callback(new",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callhandler",{"_index":655,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["case",{"_index":560,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["cases",{"_index":1286,"title":{},"body":{"index.html":{}}}],["catch",{"_index":736,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"injectables/SeederService.html":{},"miscellaneous/variables.html":{}}}],["catch(exception",{"_index":740,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["catcherror",{"_index":660,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["catcherror((error",{"_index":667,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["cause",{"_index":1300,"title":{},"body":{"index.html":{}}}],["certain",{"_index":750,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["chalk",{"_index":786,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.blue.underline",{"_index":807,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.cyan.underline",{"_index":809,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.gray.underline",{"_index":811,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.green.underline",{"_index":805,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.magenta.underline",{"_index":808,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.underline",{"_index":804,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.white.underline",{"_index":810,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["chalk.yellow.underline",{"_index":806,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["change",{"_index":485,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"index.html":{}}}],["changes",{"_index":1296,"title":{},"body":{"index.html":{}}}],["check",{"_index":723,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["class",{"_index":47,"title":{"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/TimestampsEntity.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":228,"title":{},"body":{"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/TimestampsEntity.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"overview.html":{}}}],["classserializerinterceptor(app.get(reflector",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_activitymodule",{"_index":59,"title":{},"body":{"modules/ActivityModule.html":{},"overview.html":{}}}],["cluster_activitymodule_exports",{"_index":61,"title":{},"body":{"modules/ActivityModule.html":{},"overview.html":{}}}],["cluster_activitymodule_providers",{"_index":60,"title":{},"body":{"modules/ActivityModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dictionarymodule",{"_index":523,"title":{},"body":{"modules/DictionaryModule.html":{},"overview.html":{}}}],["cluster_dictionarymodule_exports",{"_index":525,"title":{},"body":{"modules/DictionaryModule.html":{},"overview.html":{}}}],["cluster_dictionarymodule_imports",{"_index":524,"title":{},"body":{"modules/DictionaryModule.html":{}}}],["cluster_dictionarymodule_providers",{"_index":526,"title":{},"body":{"modules/DictionaryModule.html":{},"overview.html":{}}}],["cluster_requestmodule",{"_index":837,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_requestmodule_exports",{"_index":838,"title":{},"body":{"modules/RequestModule.html":{},"overview.html":{}}}],["cluster_searchmodule",{"_index":915,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_searchmodule_imports",{"_index":916,"title":{},"body":{"modules/SearchModule.html":{}}}],["cluster_seedermodule",{"_index":925,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_exports",{"_index":926,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_seedermodule_providers",{"_index":927,"title":{},"body":{"modules/SeederModule.html":{},"overview.html":{}}}],["cluster_setupmodule",{"_index":963,"title":{},"body":{"modules/SetupModule.html":{},"overview.html":{}}}],["cluster_setupmodule_imports",{"_index":964,"title":{},"body":{"modules/SetupModule.html":{},"overview.html":{}}}],["cluster_translationmodule",{"_index":1033,"title":{},"body":{"modules/TranslationModule.html":{},"overview.html":{}}}],["cluster_translationmodule_imports",{"_index":1034,"title":{},"body":{"modules/TranslationModule.html":{}}}],["cluster_translationmodule_providers",{"_index":1035,"title":{},"body":{"modules/TranslationModule.html":{},"overview.html":{}}}],["code",{"_index":244,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"injectables/RequestInterceptor.html":{},"classes/TranslationProperty.html":{},"index.html":{}}}],["column",{"_index":40,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["column(columnoptions",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["column({type",{"_index":16,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}}}],["column.decorator",{"_index":44,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{}}}],["column.decorator.ts",{"_index":1099,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["columnoptions",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["columntype",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["command",{"_index":1297,"title":{},"body":{"index.html":{}}}],["common",{"_index":1285,"title":{},"body":{"index.html":{}}}],["common/decorators/column.decorator",{"_index":41,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}}}],["common/decorators/create",{"_index":43,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{}}}],["common/decorators/open",{"_index":455,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["common/decorators/update",{"_index":389,"title":{},"body":{"entities/Dictionary.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{}}}],["common/enums/status.enum",{"_index":158,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["common/env",{"_index":150,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"injectables/ExceptionInterceptor.html":{},"controllers/TranslationController.html":{}}}],["common/exceptions/entity.exception",{"_index":747,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["common/exceptions/error.response",{"_index":748,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["common/interfaces/timestamps.interface",{"_index":387,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["common/setup/seeder/abstract/baseseed",{"_index":159,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/SeederService.html":{}}}],["common/setup/setup.module",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["common/types",{"_index":663,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["commonconfiguration",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["compatible",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completed",{"_index":802,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["compose",{"_index":1276,"title":{},"body":{"index.html":{}}}],["config",{"_index":344,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["config.get('database",{"_index":345,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["config.ts",{"_index":1092,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/config.module",{"_index":967,"title":{},"body":{"modules/SetupModule.html":{}}}],["configmodule",{"_index":209,"title":{"modules/ConfigModule.html":{}},"body":{"modules/ConfigModule.html":{},"modules/SetupModule.html":{},"modules.html":{},"overview.html":{}}}],["configservice",{"_index":339,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["configureorigin",{"_index":1088,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["conflict",{"_index":1112,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["console.log(devtext",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":175,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"injectables/ExceptionInterceptor.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestService.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{}}}],["constructor(@injectrepository(activity",{"_index":114,"title":{},"body":{"injectables/ActivityService.html":{}}}],["constructor(@injectrepository(dictionary",{"_index":553,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["constructor(@injectrepository(seed",{"_index":960,"title":{},"body":{"injectables/Seeds.html":{}}}],["constructor(@injectrepository(translation",{"_index":1059,"title":{},"body":{"injectables/TranslationService.html":{}}}],["constructor(activityrepository",{"_index":88,"title":{},"body":{"injectables/ActivityService.html":{}}}],["constructor(adddevelopmentvalues",{"_index":935,"title":{},"body":{"injectables/SeederService.html":{}}}],["constructor(dictionary",{"_index":535,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["constructor(exception",{"_index":571,"title":{},"body":{"classes/EntityException.html":{}}}],["constructor(httpadapterhost",{"_index":737,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["constructor(partial",{"_index":281,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["constructor(payload",{"_index":637,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["constructor(private",{"_index":749,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{}}}],["constructor(request",{"_index":851,"title":{},"body":{"injectables/RequestService.html":{}}}],["constructor(seedrepository",{"_index":134,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/Seeds.html":{}}}],["constructor(translation",{"_index":1052,"title":{},"body":{"injectables/TranslationService.html":{}}}],["contains",{"_index":1350,"title":{},"body":{"index.html":{}}}],["content",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["context",{"_index":657,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":665,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["context.switchtohttp().getresponse",{"_index":789,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["continue",{"_index":944,"title":{},"body":{"injectables/SeederService.html":{}}}],["contributed",{"_index":251,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["contributor",{"_index":186,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["controller",{"_index":401,"title":{"controllers/DictionaryController.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}},"body":{"controllers/DictionaryController.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["controller('dictionary",{"_index":467,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["controller('search",{"_index":887,"title":{},"body":{"controllers/SearchController.html":{}}}],["controller('translation",{"_index":1021,"title":{},"body":{"controllers/TranslationController.html":{}}}],["controllers",{"_index":403,"title":{},"body":{"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/SearchController.html":{},"modules/SearchModule.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["convenient",{"_index":1322,"title":{},"body":{"index.html":{}}}],["correctness",{"_index":1343,"title":{},"body":{"index.html":{}}}],["cors",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corsallowed",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corsexception",{"_index":227,"title":{"classes/CorsException.html":{}},"body":{"classes/CorsException.html":{},"classes/HttpExceptionsFilter.html":{},"coverage.html":{}}}],["corsexception(`origin",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corswhitelist",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["corswhitelist.indexof(requestorigin",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1076,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":86,"title":{},"body":{"injectables/ActivityService.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":481,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["create(activity",{"_index":111,"title":{},"body":{"injectables/ActivityService.html":{}}}],["create(param",{"_index":1004,"title":{},"body":{"controllers/TranslationController.html":{}}}],["create(payload",{"_index":537,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["create(requestbody",{"_index":408,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["created",{"_index":462,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["created.uuid",{"_index":495,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["created/synced",{"_index":1329,"title":{},"body":{"index.html":{}}}],["createdat",{"_index":10,"title":{},"body":{"entities/Activity.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{}}}],["createdatecolumn",{"_index":42,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdatecolumn(columnoptions",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdatecolumn({type",{"_index":21,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}}}],["createdby",{"_index":486,"title":{},"body":{"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"controllers/TranslationController.html":{}}}],["createdictionaryrequest",{"_index":233,"title":{"classes/CreateDictionaryRequest.html":{}},"body":{"classes/CreateDictionaryRequest.html":{},"controllers/DictionaryController.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"coverage.html":{}}}],["createdictionaryresponse",{"_index":275,"title":{"classes/CreateDictionaryResponse.html":{}},"body":{"classes/CreateDictionaryResponse.html":{},"controllers/DictionaryController.html":{},"classes/FetchDictionaryResponse.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["createdictionaryresponse(partial",{"_index":305,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["createdictionaryresponse.from(created",{"_index":496,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["createdictionaryresponse:12",{"_index":689,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:15",{"_index":682,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:18",{"_index":684,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:19",{"_index":690,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:21",{"_index":683,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:24",{"_index":685,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:27",{"_index":686,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:30",{"_index":681,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:33",{"_index":687,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createdictionaryresponse:9",{"_index":688,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["createparamdecorator((data",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":1320,"title":{},"body":{"index.html":{}}}],["createtranslationrequest",{"_index":306,"title":{"classes/CreateTranslationRequest.html":{}},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"controllers/TranslationController.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{}}}],["createtranslationrequestparam",{"_index":317,"title":{"classes/CreateTranslationRequestParam.html":{}},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["createtranslationresponse",{"_index":321,"title":{"classes/CreateTranslationResponse.html":{}},"body":{"classes/CreateTranslationResponse.html":{},"classes/FetchTranslationResponse.html":{},"coverage.html":{}}}],["createtranslationresponse(partial",{"_index":336,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["createtranslationresponse:10",{"_index":711,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:11",{"_index":713,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:13",{"_index":712,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:16",{"_index":704,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:19",{"_index":707,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:22",{"_index":706,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:25",{"_index":708,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:28",{"_index":709,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:31",{"_index":705,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:34",{"_index":703,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["createtranslationresponse:37",{"_index":710,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["creating",{"_index":1292,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":1166,"title":{},"body":{"dependencies.html":{}}}],["ctx",{"_index":758,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":761,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["ctx.switchtohttp().getrequest().get('user",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().logger",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctxlogger",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":1349,"title":{},"body":{"index.html":{}}}],["customorigin",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":483,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"index.html":{}}}],["database",{"_index":217,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["database.config",{"_index":218,"title":{},"body":{"modules/ConfigModule.html":{}}}],["database/database.module",{"_index":968,"title":{},"body":{"modules/SetupModule.html":{}}}],["databasemodule",{"_index":337,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/SetupModule.html":{},"modules.html":{},"overview.html":{}}}],["date",{"_index":20,"title":{},"body":{"entities/Activity.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"entities/Seed.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["date.now",{"_index":793,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["db",{"_index":1361,"title":{},"body":{"index.html":{}}}],["debug",{"_index":1206,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["declarations",{"_index":55,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["decorator",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"entities/Activity.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["default",{"_index":166,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/RequestService.html":{},"classes/SearchDictionaryRequestParam.html":{},"injectables/SeederService.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":1252,"title":{},"body":{"miscellaneous/functions.html":{}}}],["defaultversion",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":18,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["delay",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["delay(...args",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay(callback",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delay(ttd",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["delete",{"_index":406,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["delete('delete/:uuid",{"_index":510,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["delete(@param",{"_index":511,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["delete(param",{"_index":412,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["deleted",{"_index":513,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"miscellaneous/enumerations.html":{}}}],["deleted.affected",{"_index":515,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["deletedby",{"_index":512,"title":{},"body":{"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"controllers/TranslationController.html":{}}}],["deletedictionaryrequestparam",{"_index":346,"title":{"classes/DeleteDictionaryRequestParam.html":{}},"body":{"classes/DeleteDictionaryRequestParam.html":{},"controllers/DictionaryController.html":{},"coverage.html":{}}}],["deletetranslationrequestparam",{"_index":352,"title":{"classes/DeleteTranslationRequestParam.html":{}},"body":{"classes/DeleteTranslationRequestParam.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["delta",{"_index":828,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["delta}ms",{"_index":830,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["deployment",{"_index":1360,"title":{},"body":{"index.html":{}}}],["desc",{"_index":558,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["description",{"_index":180,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["details",{"_index":569,"title":{},"body":{"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"index.html":{}}}],["detect",{"_index":1326,"title":{},"body":{"index.html":{}}}],["development",{"_index":168,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devtext",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diagram",{"_index":1364,"title":{},"body":{"index.html":{}}}],["dictionary",{"_index":151,"title":{"entities/Dictionary.html":{}},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"modules/SeederModule.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["dictionary.controller",{"_index":528,"title":{},"body":{"modules/DictionaryModule.html":{}}}],["dictionary.entity",{"_index":297,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryResponse.html":{}}}],["dictionary.request",{"_index":351,"title":{},"body":{"classes/DeleteDictionaryRequestParam.html":{},"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{}}}],["dictionary.request.ts",{"_index":235,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"coverage.html":{}}}],["dictionary.request.ts:10",{"_index":1068,"title":{},"body":{"classes/UpdateDictionaryRequest.html":{}}}],["dictionary.request.ts:11",{"_index":259,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["dictionary.request.ts:15",{"_index":899,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["dictionary.request.ts:16",{"_index":1071,"title":{},"body":{"classes/UpdateDictionaryRequestParam.html":{}}}],["dictionary.request.ts:21",{"_index":242,"title":{},"body":{"classes/CreateDictionaryRequest.html":{}}}],["dictionary.request.ts:22",{"_index":906,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["dictionary.request.ts:25",{"_index":246,"title":{},"body":{"classes/CreateDictionaryRequest.html":{}}}],["dictionary.request.ts:30",{"_index":902,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["dictionary.request.ts:34",{"_index":255,"title":{},"body":{"classes/CreateDictionaryRequest.html":{}}}],["dictionary.request.ts:7",{"_index":675,"title":{},"body":{"classes/FetchDictionaryRequestParam.html":{}}}],["dictionary.response",{"_index":450,"title":{},"body":{"controllers/DictionaryController.html":{},"classes/FetchDictionaryResponse.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["dictionary.response.ts",{"_index":277,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/FetchDictionaryResponse.html":{},"coverage.html":{}}}],["dictionary.response.ts:12",{"_index":294,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/FetchDictionaryResponse.html":{}}}],["dictionary.response.ts:15",{"_index":285,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:18",{"_index":287,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:20",{"_index":691,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["dictionary.response.ts:21",{"_index":286,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/FetchDictionaryResponse.html":{}}}],["dictionary.response.ts:24",{"_index":288,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:27",{"_index":289,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:30",{"_index":284,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:33",{"_index":282,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:39",{"_index":296,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.response.ts:9",{"_index":293,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dictionary.service",{"_index":441,"title":{},"body":{"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{}}}],["dictionary.translations",{"_index":988,"title":{},"body":{"entities/Translation.html":{}}}],["dictionary/dictionary.entity",{"_index":1000,"title":{},"body":{"entities/Translation.html":{},"injectables/TranslationService.html":{}}}],["dictionary/dictionary.module",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"modules/SearchModule.html":{},"modules/TranslationModule.html":{}}}],["dictionary/dictionary.service",{"_index":884,"title":{},"body":{"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["dictionary/request/fetch",{"_index":1019,"title":{},"body":{"controllers/TranslationController.html":{}}}],["dictionary/response/create",{"_index":1018,"title":{},"body":{"controllers/TranslationController.html":{}}}],["dictionary/response/fetch",{"_index":883,"title":{},"body":{"controllers/SearchController.html":{}}}],["dictionaryactivitytype",{"_index":27,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"miscellaneous/typealiases.html":{}}}],["dictionarycontroller",{"_index":402,"title":{"controllers/DictionaryController.html":{}},"body":{"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"coverage.html":{}}}],["dictionarycreated",{"_index":95,"title":{"interfaces/DictionaryCreated.html":{}},"body":{"injectables/ActivityService.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dictionarydeleted",{"_index":100,"title":{"interfaces/DictionaryDeleted.html":{}},"body":{"injectables/ActivityService.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dictionaryentity",{"_index":1001,"title":{},"body":{"entities/Translation.html":{}}}],["dictionaryid",{"_index":990,"title":{},"body":{"entities/Translation.html":{}}}],["dictionarymodule",{"_index":197,"title":{"modules/DictionaryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/SearchModule.html":{},"modules/TranslationModule.html":{},"modules.html":{},"overview.html":{}}}],["dictionaryrepository",{"_index":135,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["dictionaryservice",{"_index":440,"title":{"injectables/DictionaryService.html":{}},"body":{"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"overview.html":{}}}],["dictionaryupdated",{"_index":103,"title":{"interfaces/DictionaryUpdated.html":{}},"body":{"injectables/ActivityService.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dictionaryuuid",{"_index":494,"title":{},"body":{"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"controllers/TranslationController.html":{}}}],["different",{"_index":1358,"title":{},"body":{"index.html":{}}}],["dist/src/**/*.entity.js",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docker",{"_index":1275,"title":{},"body":{"index.html":{}}}],["docs",{"_index":796,"title":{},"body":{"injectables/RequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dotenv",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["driver",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drops",{"_index":301,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["dynamic",{"_index":1351,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":622,"title":{},"body":{"classes/Env.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":695,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["empty",{"_index":596,"title":{},"body":{"classes/EntityException.html":{}}}],["en",{"_index":1199,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enabled",{"_index":1324,"title":{},"body":{"index.html":{}}}],["end2end",{"_index":1205,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ended",{"_index":827,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["enter",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities",{"_index":2,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":0,"title":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{},"coverage.html":{}}}],["entity/seeder.entity",{"_index":148,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"modules/SeederModule.html":{},"injectables/Seeds.html":{}}}],["entityexception",{"_index":567,"title":{"classes/EntityException.html":{}},"body":{"classes/EntityException.html":{},"classes/HttpExceptionsFilter.html":{},"coverage.html":{}}}],["enum",{"_index":17,"title":{},"body":{"entities/Activity.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"entities/Dictionary.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Translation.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["enumerations",{"_index":1191,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":149,"title":{"classes/Env.html":{}},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"classes/Env.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["env.${process.env.node_env",{"_index":223,"title":{},"body":{"modules/ConfigModule.html":{}}}],["env.isdev",{"_index":170,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["env.ise2e",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.isprod",{"_index":671,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["env.istest",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.nodeenv",{"_index":627,"title":{},"body":{"classes/Env.html":{}}}],["env:test",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["envfilepath",{"_index":222,"title":{},"body":{"modules/ConfigModule.html":{}}}],["environment",{"_index":169,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/Env.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["envs",{"_index":1359,"title":{},"body":{"index.html":{}}}],["envspecificdecoratorvalue",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["envspecificdecoratorvalue(columnoptions",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errmessage",{"_index":947,"title":{},"body":{"injectables/SeederService.html":{}}}],["error",{"_index":230,"title":{},"body":{"classes/CorsException.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/SeederService.html":{},"miscellaneous/variables.html":{}}}],["error('unknown",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.capturestacktrace(this",{"_index":592,"title":{},"body":{"classes/EntityException.html":{}}}],["error.error",{"_index":774,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["error.message",{"_index":772,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"injectables/SeederService.html":{}}}],["error.stack",{"_index":670,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["errordetails",{"_index":771,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["errormessage",{"_index":773,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["errorpayloadtype",{"_index":572,"title":{},"body":{"classes/EntityException.html":{},"miscellaneous/typealiases.html":{}}}],["errorresponse",{"_index":633,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ErrorResponse.html":{},"classes/HttpExceptionsFilter.html":{},"coverage.html":{}}}],["errorresponse(error",{"_index":644,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["exactly",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["example",{"_index":269,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/TimestampsEntity.html":{},"classes/TranslationProperty.html":{},"index.html":{}}}],["examples",{"_index":239,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["exception",{"_index":574,"title":{},"body":{"classes/EntityException.html":{},"classes/HttpExceptionsFilter.html":{}}}],["exception.code",{"_index":587,"title":{},"body":{"classes/EntityException.html":{},"classes/HttpExceptionsFilter.html":{}}}],["exception.details",{"_index":780,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exception.error",{"_index":597,"title":{},"body":{"classes/EntityException.html":{}}}],["exception.error.message",{"_index":600,"title":{},"body":{"classes/EntityException.html":{}}}],["exception.filter(cors",{"_index":763,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exception.getresponse",{"_index":770,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":777,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exception.message",{"_index":775,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":735,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exceptioninterceptor",{"_index":645,"title":{"injectables/ExceptionInterceptor.html":{}},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exceptions/cors.exception",{"_index":746,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["exclude",{"_index":283,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{},"miscellaneous/variables.html":{}}}],["excludes",{"_index":299,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["executioncontext",{"_index":653,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":1346,"title":{},"body":{"index.html":{}}}],["explanation",{"_index":237,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["export",{"_index":46,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["exports",{"_index":58,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["exposed",{"_index":579,"title":{},"body":{"classes/EntityException.html":{}}}],["exposedheaders",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express",{"_index":864,"title":{},"body":{"injectables/RequestService.html":{},"dependencies.html":{}}}],["expression",{"_index":181,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["expressrequest",{"_index":662,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":126,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/EntityException.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["extractdetails",{"_index":570,"title":{},"body":{"classes/EntityException.html":{}}}],["extractdetails(exception",{"_index":583,"title":{},"body":{"classes/EntityException.html":{}}}],["extracted",{"_index":594,"title":{},"body":{"classes/EntityException.html":{}}}],["extracted.error",{"_index":599,"title":{},"body":{"classes/EntityException.html":{}}}],["failed",{"_index":950,"title":{},"body":{"injectables/SeederService.html":{}}}],["false",{"_index":253,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/ErrorResponse.html":{},"injectables/RequestService.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Translation.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"miscellaneous/variables.html":{}}}],["false})@isenum(status)@isoptional",{"_index":1067,"title":{},"body":{"classes/UpdateDictionaryRequest.html":{},"classes/UpdateTranslationRequest.html":{}}}],["false})@isstring()@isoptional()@maxlength(1024",{"_index":241,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{}}}],["false})@joincolumn({name",{"_index":989,"title":{},"body":{"entities/Translation.html":{}}}],["faster",{"_index":1308,"title":{},"body":{"index.html":{}}}],["fetchdictionaryrequestparam",{"_index":421,"title":{"classes/FetchDictionaryRequestParam.html":{}},"body":{"controllers/DictionaryController.html":{},"classes/FetchDictionaryRequestParam.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["fetchdictionaryresponse",{"_index":425,"title":{"classes/FetchDictionaryResponse.html":{}},"body":{"controllers/DictionaryController.html":{},"classes/FetchDictionaryResponse.html":{},"controllers/SearchController.html":{},"coverage.html":{}}}],["fetchdictionaryresponse(payload",{"_index":698,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["fetchdictionaryresponse.from(record",{"_index":478,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["fetchdictionaryresponse.from(records",{"_index":894,"title":{},"body":{"controllers/SearchController.html":{}}}],["fetchtranslationresponse",{"_index":700,"title":{"classes/FetchTranslationResponse.html":{}},"body":{"classes/FetchTranslationResponse.html":{},"controllers/TranslationController.html":{},"coverage.html":{}}}],["fetchtranslationresponse(payload",{"_index":716,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["fetchtranslationresponse.from(record",{"_index":1024,"title":{},"body":{"controllers/TranslationController.html":{}}}],["fetchtranslationresponse.from(translation",{"_index":1029,"title":{},"body":{"controllers/TranslationController.html":{}}}],["file",{"_index":5,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["findoneby",{"_index":531,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["findoneby(uuid",{"_index":539,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["findonebyuuid",{"_index":407,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["findonebyuuid(@param",{"_index":471,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["findonebyuuid(param",{"_index":420,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["following",{"_index":1311,"title":{},"body":{"index.html":{}}}],["forbidnonwhitelisted",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["force",{"_index":1314,"title":{},"body":{"index.html":{}}}],["forgereqid",{"_index":847,"title":{},"body":{"injectables/RequestService.html":{}}}],["formaterror",{"_index":648,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["formaterror(error",{"_index":650,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["found",{"_index":476,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["from(partial",{"_index":295,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["from(payload",{"_index":692,"title":{},"body":{"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{}}}],["fromerror",{"_index":636,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["fromerror(error",{"_index":642,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["fs.writefilesync('./docs/swagger.yaml",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":1097,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1215,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":1290,"title":{},"body":{"index.html":{}}}],["generated",{"_index":381,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{},"index.html":{}}}],["generated('uuid",{"_index":393,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["generated('uuid')@column({type",{"_index":377,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["generating/creating",{"_index":1355,"title":{},"body":{"index.html":{}}}],["gesture",{"_index":182,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["get('find/:uuid",{"_index":468,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["get('find/:uuid')@apibadrequestresponse()@httpcode(httpstatus.ok)@apiresponse({status",{"_index":422,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["get()@apibadrequestresponse()@httpcode(httpstatus.ok)@apiresponse({status",{"_index":879,"title":{},"body":{"controllers/SearchController.html":{}}}],["get()@apiokresponse({description",{"_index":721,"title":{},"body":{"controllers/HealthController.html":{}}}],["get,post,put,patch,delete,options",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getconfig",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gethealth",{"_index":720,"title":{},"body":{"controllers/HealthController.html":{}}}],["getisdev",{"_index":612,"title":{},"body":{"classes/Env.html":{}}}],["getise2e",{"_index":620,"title":{},"body":{"classes/Env.html":{}}}],["getisprod",{"_index":614,"title":{},"body":{"classes/Env.html":{}}}],["getistest",{"_index":616,"title":{},"body":{"classes/Env.html":{}}}],["getname",{"_index":145,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/Seeds.html":{}}}],["getnodeenv",{"_index":610,"title":{},"body":{"classes/Env.html":{}}}],["getrequestid",{"_index":848,"title":{},"body":{"injectables/RequestService.html":{}}}],["getting",{"_index":1256,"title":{"index.html":{}},"body":{}}],["given",{"_index":477,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["global",{"_index":840,"title":{},"body":{"modules/RequestModule.html":{}}}],["graph",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["greeting",{"_index":183,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["hand",{"_index":580,"title":{},"body":{"classes/EntityException.html":{}}}],["handler.interceptor.ts",{"_index":647,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["handler.interceptor.ts:20",{"_index":651,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["handler.interceptor.ts:8",{"_index":656,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["hasrequestid",{"_index":849,"title":{},"body":{"injectables/RequestService.html":{}}}],["hasrequestid(request",{"_index":855,"title":{},"body":{"injectables/RequestService.html":{}}}],["hasrun",{"_index":131,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/Seeds.html":{}}}],["header",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["health",{"_index":722,"title":{},"body":{"controllers/HealthController.html":{},"injectables/RequestInterceptor.html":{}}}],["health.controller",{"_index":732,"title":{},"body":{"modules/HealthModule.html":{}}}],["health/health.module",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["healthcontroller",{"_index":718,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":198,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":179,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["here",{"_index":756,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"injectables/SeederService.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":1214,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["high",{"_index":1315,"title":{},"body":{"index.html":{}}}],["host",{"_index":741,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":759,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["http",{"_index":640,"title":{},"body":{"classes/ErrorResponse.html":{},"miscellaneous/variables.html":{}}}],["httpadapter",{"_index":752,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["httpadapter.reply(response",{"_index":764,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["httpadapterhost",{"_index":738,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["httpcode",{"_index":436,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["httpcode(httpstatus.accepted",{"_index":509,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["httpcode(httpstatus.created",{"_index":480,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":497,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["httpcode(httpstatus.ok",{"_index":469,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["httpexception",{"_index":744,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["httpexceptionsfilter",{"_index":733,"title":{"classes/HttpExceptionsFilter.html":{}},"body":{"classes/HttpExceptionsFilter.html":{},"coverage.html":{}}}],["httpstatus",{"_index":435,"title":{},"body":{"controllers/DictionaryController.html":{},"classes/EntityException.html":{},"classes/HttpExceptionsFilter.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["httpstatus.internal_server_error",{"_index":767,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["httpstatus.no_content",{"_index":765,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["httpstatus.ok",{"_index":470,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["husky",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":11,"title":{},"body":{"entities/Activity.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"entities/Seed.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/enumerations.html":{}}}],["identifier",{"_index":1078,"title":{},"body":{"coverage.html":{}}}],["ilike",{"_index":552,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["ilike(`${keyword",{"_index":563,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["implementation",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["implements",{"_index":392,"title":{},"body":{"entities/Dictionary.html":{},"injectables/ExceptionInterceptor.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/SeederService.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{}}}],["import",{"_index":35,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["important",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/DictionaryModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{}}}],["inactive",{"_index":1212,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(['uuid",{"_index":390,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["individual",{"_index":185,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["individually",{"_index":250,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["info",{"_index":3,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"index.html":{}}}],["inherited",{"_index":140,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{}}}],["initial",{"_index":1294,"title":{},"body":{"index.html":{}}}],["inject",{"_index":342,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{}}}],["injectable",{"_index":74,"title":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/DictionaryService.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"injectables/TranslationService.html":{}},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/DictionaryService.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"injectables/TranslationService.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/DictionaryService.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"injectables/TranslationService.html":{},"overview.html":{}}}],["injected",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectrepository",{"_index":113,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/DictionaryService.html":{},"injectables/Seeds.html":{},"injectables/TranslationService.html":{}}}],["injectrepository(dictionary",{"_index":162,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["injectrepository(seed",{"_index":160,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["injectrepository(translation",{"_index":163,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["injectrequestid",{"_index":850,"title":{},"body":{"injectables/RequestService.html":{}}}],["injectrequestid(request",{"_index":858,"title":{},"body":{"injectables/RequestService.html":{}}}],["insensitive",{"_index":561,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["insertvalues",{"_index":129,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["install",{"_index":1265,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1261,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1267,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":598,"title":{},"body":{"classes/EntityException.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/SeederService.html":{}}}],["intercept",{"_index":649,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["intercept(context",{"_index":652,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["interface",{"_index":518,"title":{"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"interfaces/TimestampsInterface.html":{}},"body":{"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"interfaces/TimestampsInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":519,"title":{},"body":{"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"interfaces/TimestampsInterface.html":{},"overview.html":{}}}],["interfaces/dictionary",{"_index":38,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{}}}],["interfaces/timestamps.interface",{"_index":980,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["internal",{"_index":768,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["internally",{"_index":578,"title":{},"body":{"classes/EntityException.html":{}}}],["inverse",{"_index":399,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["ip",{"_index":821,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["isarray",{"_index":880,"title":{},"body":{"controllers/SearchController.html":{}}}],["isdev",{"_index":606,"title":{},"body":{"classes/Env.html":{}}}],["ise2e",{"_index":609,"title":{},"body":{"classes/Env.html":{}}}],["isenum",{"_index":262,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["isenum(language",{"_index":273,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["isenum(status",{"_index":1070,"title":{},"body":{"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["isglobal",{"_index":225,"title":{},"body":{"modules/ConfigModule.html":{}}}],["islocalhost",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismegrulad",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":263,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["isnumber",{"_index":907,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["isoptional",{"_index":264,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["ispositive",{"_index":908,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["isprod",{"_index":607,"title":{},"body":{"classes/Env.html":{}}}],["isstring",{"_index":265,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["istest",{"_index":608,"title":{},"body":{"classes/Env.html":{}}}],["isuuid",{"_index":314,"title":{},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["isuuid('4",{"_index":318,"title":{},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["iswhitelisted",{"_index":799,"title":{},"body":{"injectables/RequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["it's",{"_index":249,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["joi",{"_index":863,"title":{},"body":{"injectables/RequestService.html":{},"dependencies.html":{}}}],["joi.string().min(16).max(64",{"_index":862,"title":{},"body":{"injectables/RequestService.html":{}}}],["joincolumn",{"_index":382,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["json",{"_index":29,"title":{},"body":{"entities/Activity.html":{}}}],["json.stringify(error",{"_index":672,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/SeederService.html":{}}}],["json.stringify(exception.error",{"_index":603,"title":{},"body":{"classes/EntityException.html":{}}}],["json.stringify(request.body",{"_index":834,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["jsonwebtoken",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ka",{"_index":1201,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["keyword",{"_index":549,"title":{},"body":{"injectables/DictionaryService.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["language",{"_index":155,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/enumerations.html":{}}}],["language.en",{"_index":184,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["language.me",{"_index":191,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["language})@isenum(language",{"_index":898,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["legend",{"_index":54,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["length",{"_index":365,"title":{},"body":{"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}}}],["library",{"_index":1352,"title":{},"body":{"index.html":{}}}],["license",{"_index":1376,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":1384,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["load",{"_index":224,"title":{},"body":{"modules/ConfigModule.html":{}}}],["locally",{"_index":1279,"title":{},"body":{"index.html":{}}}],["located",{"_index":1283,"title":{},"body":{"index.html":{}}}],["logged",{"_index":577,"title":{},"body":{"classes/EntityException.html":{}}}],["logger",{"_index":437,"title":{},"body":{"controllers/DictionaryController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/SeederService.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["logger('bootstrap",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger('seederservice",{"_index":940,"title":{},"body":{"injectables/SeederService.html":{}}}],["logger(requestservice.getrequestid",{"_index":791,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["logger.decorator.ts",{"_index":1101,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.error(`error",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.error(`unhandled",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log(`${text.payload",{"_index":833,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["logger.log(`${text.started",{"_index":832,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["logger.log(`retrieved",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger.log(`the",{"_index":504,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["logger.log(logtext",{"_index":831,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["logger.warn(exception.message",{"_index":762,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["loggerservice",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggerservice.log(`application",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logtext",{"_index":829,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["loss",{"_index":1316,"title":{},"body":{"index.html":{}}}],["lost",{"_index":1301,"title":{},"body":{"index.html":{}}}],["make",{"_index":1302,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["makes",{"_index":1327,"title":{},"body":{"index.html":{}}}],["manager",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["manually",{"_index":1337,"title":{},"body":{"index.html":{}}}],["many",{"_index":903,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["manytoone",{"_index":999,"title":{},"body":{"entities/Translation.html":{}}}],["manytoone(undefined",{"_index":987,"title":{},"body":{"entities/Translation.html":{}}}],["markasactive",{"_index":532,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["markasactive(uuid",{"_index":541,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["markasdeleted",{"_index":533,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["markasdeleted(uuid",{"_index":543,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["markasrun",{"_index":132,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/Seeds.html":{}}}],["matching",{"_index":49,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":904,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["max(128",{"_index":912,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["max(256",{"_index":914,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["maxlength",{"_index":266,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["maxlength(1024",{"_index":272,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["maxlength(128",{"_index":271,"title":{},"body":{"classes/CreateDictionaryRequest.html":{}}}],["maxlength(32",{"_index":910,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["maxlength(512",{"_index":316,"title":{},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["meant",{"_index":576,"title":{},"body":{"classes/EntityException.html":{}}}],["memory",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mentioned",{"_index":1298,"title":{},"body":{"index.html":{}}}],["message",{"_index":581,"title":{},"body":{"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/HttpExceptionsFilter.html":{}}}],["metadata",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":753,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{}}}],["methods",{"_index":77,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/variables.html":{}}}],["migration",{"_index":1281,"title":{},"body":{"index.html":{}}}],["migration:create",{"_index":1338,"title":{},"body":{"index.html":{}}}],["migration:generate",{"_index":1288,"title":{},"body":{"index.html":{}}}],["migrations",{"_index":1280,"title":{},"body":{"index.html":{}}}],["migrations/add",{"_index":1339,"title":{},"body":{"index.html":{}}}],["migrations/migration",{"_index":1289,"title":{},"body":{"index.html":{}}}],["migrations/some",{"_index":1332,"title":{},"body":{"index.html":{}}}],["min",{"_index":909,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["min(0",{"_index":913,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["minlength",{"_index":267,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["minlength(1",{"_index":270,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["miscellaneous",{"_index":1190,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1270,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1309,"title":{},"body":{"index.html":{}}}],["module",{"_index":50,"title":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/DictionaryModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/DictionaryModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/DictionaryModule.html":{},"modules/HealthModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1362,"title":{},"body":{"index.html":{}}}],["ms",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["mysql",{"_index":1278,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["n",{"_index":669,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["n1md7",{"_index":1379,"title":{},"body":{"properties.html":{}}}],["name",{"_index":45,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"entities/Seed.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.ts",{"_index":1293,"title":{},"body":{"index.html":{}}}],["namep.s",{"_index":1336,"title":{},"body":{"index.html":{}}}],["need",{"_index":1287,"title":{},"body":{"index.html":{}}}],["nestconfigmodule",{"_index":215,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestconfigmodule.forroot",{"_index":221,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestfactory.create(appmodule",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":659,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["nestjs/cache",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":67,"title":{},"body":{"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"controllers/DictionaryController.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"injectables/ExceptionInterceptor.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":340,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["nestjs/config/dist/config.module",{"_index":216,"title":{},"body":{"modules/ConfigModule.html":{}}}],["nestjs/core",{"_index":745,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"modules/RequestModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":261,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/TimestampsEntity.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":70,"title":{},"body":{"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/DatabaseModule.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"modules/SeederModule.html":{},"injectables/Seeds.html":{},"modules/TranslationModule.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["new",{"_index":304,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/SeederService.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":654,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["next.handle",{"_index":835,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["next.handle().pipe",{"_index":666,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["no_content",{"_index":430,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["node",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["nodeenv",{"_index":605,"title":{},"body":{"classes/Env.html":{},"miscellaneous/enumerations.html":{}}}],["nodeenv.development",{"_index":628,"title":{},"body":{"classes/Env.html":{},"miscellaneous/variables.html":{}}}],["nodeenv.e2e",{"_index":632,"title":{},"body":{"classes/Env.html":{}}}],["nodeenv.production",{"_index":629,"title":{},"body":{"classes/Env.html":{},"miscellaneous/variables.html":{}}}],["nodeenv.test",{"_index":630,"title":{},"body":{"classes/Env.html":{}}}],["nodeenv.trim",{"_index":625,"title":{},"body":{"classes/Env.html":{}}}],["nodejs",{"_index":1263,"title":{},"body":{"index.html":{}}}],["nodejs.signals",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nodejs.timeout",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["not_found",{"_index":1010,"title":{},"body":{"controllers/TranslationController.html":{}}}],["note",{"_index":1348,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":438,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["notfoundexception('no",{"_index":475,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["npm",{"_index":1266,"title":{},"body":{"index.html":{}}}],["null",{"_index":274,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/HttpExceptionsFilter.html":{}}}],["nullable",{"_index":30,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["number",{"_index":24,"title":{},"body":{"entities/Activity.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"miscellaneous/functions.html":{}}}],["number(process.env.db_port",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nvm",{"_index":1264,"title":{},"body":{"index.html":{}}}],["object",{"_index":602,"title":{},"body":{"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":303,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["observable",{"_index":658,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{}}}],["ok",{"_index":423,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["oldvalue",{"_index":500,"title":{},"body":{"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"controllers/TranslationController.html":{}}}],["onapplicationbootstrap",{"_index":934,"title":{},"body":{"injectables/SeederService.html":{}}}],["one",{"_index":1303,"title":{},"body":{"index.html":{}}}],["ones",{"_index":1321,"title":{},"body":{"index.html":{}}}],["onetomany",{"_index":383,"title":{},"body":{"entities/Dictionary.html":{}}}],["onetomany(undefined",{"_index":369,"title":{},"body":{"entities/Dictionary.html":{}}}],["openapiobject",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operation",{"_index":949,"title":{},"body":{"injectables/SeederService.html":{}}}],["optional",{"_index":92,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateTranslationRequest.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["order",{"_index":557,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["origin",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin.ts",{"_index":1087,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["original",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["originalurl",{"_index":822,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["originnotdefined",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["orm.config.ts",{"_index":1310,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":489,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["overview",{"_index":1369,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1147,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":1284,"title":{},"body":{"index.html":{}}}],["param",{"_index":419,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["param.uuid",{"_index":508,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["parseint(configservice.get('port",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":177,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{}}}],["partialtype",{"_index":1069,"title":{},"body":{"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["partialtype(createdictionaryrequest",{"_index":1066,"title":{},"body":{"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{}}}],["partialtype(createtranslationrequest",{"_index":1073,"title":{},"body":{"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["password",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":434,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["patch('update/:uuid",{"_index":498,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["path",{"_index":728,"title":{},"body":{"controllers/HealthController.html":{}}}],["payload",{"_index":176,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"injectables/RequestInterceptor.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{}}}],["payload.map(fetchdictionaryresponse.from",{"_index":699,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["payload.map(fetchtranslationresponse.from",{"_index":717,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["payloadtranslation",{"_index":190,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["payloadtranslation.dictionary",{"_index":192,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["pending",{"_index":491,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"miscellaneous/enumerations.html":{}}}],["persistauthorization",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pid",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":432,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["post('create",{"_index":479,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["post('create/:uuid",{"_index":1025,"title":{},"body":{"controllers/TranslationController.html":{}}}],["powered",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":405,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["present",{"_index":302,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["primarygeneratedcolumn",{"_index":25,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}}}],["private",{"_index":85,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"injectables/ExceptionInterceptor.html":{},"injectables/RequestService.html":{},"injectables/SeederService.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{}}}],["process.env.db_database",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_host",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_password",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.db_username",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.e2e",{"_index":631,"title":{},"body":{"classes/Env.html":{}}}],["process.env.node_env",{"_index":624,"title":{},"body":{"classes/Env.html":{}}}],["process.env.origin.split",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.exit(0",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.exit(1",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.on('uncaughtexception",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.on('unhandledrejection",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.on(signalname",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.pid",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":98,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["promise.catch((error",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proper",{"_index":1357,"title":{},"body":{"index.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"injectables/RequestService.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"injectables/SeederService.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"properties.html":{}}}],["property",{"_index":582,"title":{},"body":{"classes/EntityException.html":{}}}],["protected",{"_index":161,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["provide",{"_index":843,"title":{},"body":{"modules/RequestModule.html":{}}}],["providers",{"_index":57,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["public",{"_index":78,"title":{},"body":{"injectables/ActivityService.html":{},"classes/Env.html":{},"controllers/HealthController.html":{},"injectables/RequestService.html":{}}}],["query",{"_index":882,"title":{},"body":{"controllers/SearchController.html":{},"index.html":{}}}],["query.language",{"_index":891,"title":{},"body":{"controllers/SearchController.html":{}}}],["query.skip",{"_index":893,"title":{},"body":{"controllers/SearchController.html":{}}}],["query.take",{"_index":892,"title":{},"body":{"controllers/SearchController.html":{}}}],["randomcolor",{"_index":812,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomcolor(text.completed",{"_index":818,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomcolor(text.payload",{"_index":820,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomcolor(text.started",{"_index":816,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomcolors",{"_index":803,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomcolors.length",{"_index":814,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomcolors[math.floor(math.random",{"_index":813,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["randomfromarray",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":115,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{}}}],["reason",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recommended",{"_index":1330,"title":{},"body":{"index.html":{}}}],["record",{"_index":472,"title":{},"body":{"controllers/DictionaryController.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"controllers/TranslationController.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["records",{"_index":889,"title":{},"body":{"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["referencedcolumnname",{"_index":373,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["reflect",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["regexp(/^https?:\\/\\/(.*)\\.megrulad\\.ge/).test(requestorigin",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regexp(/^https?:\\/\\/(localhost|127.0.0.1)/).test(requestorigin",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rejected",{"_index":1213,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rejection",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["relations",{"_index":556,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["relationship",{"_index":396,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["removed",{"_index":516,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["removes",{"_index":1318,"title":{},"body":{"index.html":{}}}],["replace",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repository",{"_index":89,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/DictionaryService.html":{},"injectables/Seeds.html":{},"injectables/TranslationService.html":{},"index.html":{}}}],["reqid",{"_index":869,"title":{},"body":{"injectables/RequestService.html":{}}}],["request",{"_index":664,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["request.decorator",{"_index":458,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["request.decorator.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["request.enum",{"_index":868,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.get('user",{"_index":824,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["request.get(requestservice.request_id_header",{"_index":870,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.headers[requestservice.request_id_header",{"_index":872,"title":{},"body":{"injectables/RequestService.html":{}}}],["request.logger",{"_index":794,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["request.logger.error(this.formaterror(error",{"_index":668,"title":{},"body":{"injectables/ExceptionInterceptor.html":{}}}],["request.service",{"_index":842,"title":{},"body":{"modules/RequestModule.html":{}}}],["request.url.includes(path",{"_index":801,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["request/create",{"_index":442,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["request/fetch",{"_index":451,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["request/remove",{"_index":448,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["request/request.module",{"_index":966,"title":{},"body":{"modules/SetupModule.html":{}}}],["request/search",{"_index":885,"title":{},"body":{"controllers/SearchController.html":{}}}],["request/update",{"_index":443,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["request_id_header",{"_index":846,"title":{},"body":{"injectables/RequestService.html":{}}}],["requestbody",{"_index":411,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["requestheader",{"_index":867,"title":{},"body":{"injectables/RequestService.html":{},"miscellaneous/enumerations.html":{}}}],["requestheader.requestid",{"_index":860,"title":{},"body":{"injectables/RequestService.html":{}}}],["requestid",{"_index":1208,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["requestinterceptor",{"_index":781,"title":{"injectables/RequestInterceptor.html":{}},"body":{"injectables/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestmodule",{"_index":836,"title":{"modules/RequestModule.html":{}},"body":{"modules/RequestModule.html":{},"modules/SetupModule.html":{},"modules.html":{},"overview.html":{}}}],["requestorigin",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestservice",{"_index":784,"title":{"injectables/RequestService.html":{}},"body":{"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"coverage.html":{},"overview.html":{}}}],["requestservice(request",{"_index":790,"title":{},"body":{"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{}}}],["requestservice.forgereqid",{"_index":873,"title":{},"body":{"injectables/RequestService.html":{}}}],["requestservice.hasrequestid(request",{"_index":787,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["requestservice.injectrequestid(request",{"_index":788,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["requestservice.validationschema.validate(reqid).error",{"_index":871,"title":{},"body":{"injectables/RequestService.html":{}}}],["require",{"_index":1333,"title":{},"body":{"index.html":{}}}],["required",{"_index":240,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"index.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}],["resolve",{"_index":755,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["resolvedefault",{"_index":1108,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvedefault(defaultvalue",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolveentitypath",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["resolvetype",{"_index":1109,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolvetype(type",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["response",{"_index":760,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{}}}],["response.decorator",{"_index":463,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["response.decorator.ts",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["response.on('finish",{"_index":826,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["response/create",{"_index":449,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["response/fetch",{"_index":452,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["responsebody",{"_index":766,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["responsebody.details",{"_index":779,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["responsebody.message",{"_index":778,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["responsebody.statuscode",{"_index":776,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["responses",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsible",{"_index":1342,"title":{},"body":{"index.html":{}}}],["result",{"_index":1291,"title":{},"body":{"index.html":{}}}],["results",{"_index":48,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":911,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["retrieve'})@type(undefined)@max(128)@ispositive()@isoptional",{"_index":905,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["return",{"_index":116,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":97,"title":{},"body":{"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1345,"title":{},"body":{"index.html":{}}}],["right",{"_index":1262,"title":{},"body":{"index.html":{}}}],["rimraf",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["route.decorator",{"_index":460,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["route.decorator.ts",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rows",{"_index":506,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["ru",{"_index":1200,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":130,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"index.html":{}}}],["running",{"_index":1334,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":661,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"injectables/RequestInterceptor.html":{},"dependencies.html":{}}}],["same",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["save.ts",{"_index":1094,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["saveddictionary",{"_index":188,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["saveswaggerdocument",{"_index":1095,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["saveswaggerdocument(document",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":724,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{}}}],["schemas/entities",{"_index":1347,"title":{},"body":{"index.html":{}}}],["scheme",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":841,"title":{},"body":{"modules/RequestModule.html":{}}}],["scope.request",{"_index":844,"title":{},"body":{"modules/RequestModule.html":{}}}],["script",{"_index":1344,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1282,"title":{},"body":{"index.html":{}}}],["search",{"_index":562,"title":{},"body":{"injectables/DictionaryService.html":{},"controllers/SearchController.html":{}}}],["search.controller",{"_index":918,"title":{},"body":{"modules/SearchModule.html":{}}}],["search/search.module",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["searchbykeyword",{"_index":534,"title":{},"body":{"injectables/DictionaryService.html":{},"controllers/SearchController.html":{}}}],["searchbykeyword(@query",{"_index":888,"title":{},"body":{"controllers/SearchController.html":{}}}],["searchbykeyword(keyword",{"_index":545,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["searchbykeyword(query",{"_index":877,"title":{},"body":{"controllers/SearchController.html":{}}}],["searchcontroller",{"_index":875,"title":{"controllers/SearchController.html":{}},"body":{"controllers/SearchController.html":{},"modules/SearchModule.html":{},"coverage.html":{}}}],["searchdictionaryrequestparam",{"_index":878,"title":{"classes/SearchDictionaryRequestParam.html":{}},"body":{"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"coverage.html":{}}}],["searchmodule",{"_index":199,"title":{"modules/SearchModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SearchModule.html":{},"modules.html":{},"overview.html":{}}}],["seed",{"_index":147,"title":{"entities/Seed.html":{}},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"coverage.html":{}}}],["seed.hasrun",{"_index":943,"title":{},"body":{"injectables/SeederService.html":{}}}],["seed.markasrun",{"_index":951,"title":{},"body":{"injectables/SeederService.html":{}}}],["seed.run",{"_index":946,"title":{},"body":{"injectables/SeederService.html":{}}}],["seeder/seeder.module",{"_index":969,"title":{},"body":{"modules/SetupModule.html":{}}}],["seedermodule",{"_index":924,"title":{"modules/SeederModule.html":{}},"body":{"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules.html":{},"overview.html":{}}}],["seederservice",{"_index":928,"title":{"injectables/SeederService.html":{}},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{},"coverage.html":{},"overview.html":{}}}],["seedrepository",{"_index":138,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"injectables/Seeds.html":{}}}],["seeds",{"_index":127,"title":{"injectables/Seeds.html":{}},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"entities/Seed.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"coverage.html":{}}}],["seeds/adddefaultvaluesfordevelopment",{"_index":931,"title":{},"body":{"modules/SeederModule.html":{},"injectables/SeederService.html":{}}}],["seeds:14",{"_index":144,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["seeds:18",{"_index":143,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["seeds:26",{"_index":141,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["select",{"_index":555,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["sentence",{"_index":257,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["server",{"_index":769,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["service",{"_index":219,"title":{},"body":{"modules/ConfigModule.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["service.config",{"_index":220,"title":{},"body":{"modules/ConfigModule.html":{}}}],["service/seeder.service",{"_index":930,"title":{},"body":{"modules/SeederModule.html":{}}}],["services",{"_index":1259,"title":{},"body":{"index.html":{}}}],["set",{"_index":490,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"index.html":{}}}],["setdescription('main",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settitle('megrulad.ge",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setup",{"_index":1295,"title":{},"body":{"index.html":{}}}],["setup/request",{"_index":785,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["setupmodule",{"_index":200,"title":{"modules/SetupModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SetupModule.html":{},"modules.html":{},"overview.html":{}}}],["setversion(packagejson.version",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":400,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["sighup",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sigint",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signalsnames",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signalsnames.foreach((signalname",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sigterm",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["simple",{"_index":28,"title":{},"body":{"entities/Activity.html":{}}}],["situations",{"_index":751,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["skip",{"_index":547,"title":{},"body":{"injectables/DictionaryService.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["skip'})@type(undefined)@isnumber()@min(0)@max(256)@isoptional",{"_index":901,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["skipinvalid",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"entities/Activity.html":{},"modules/ActivityModule.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"modules/AppModule.html":{},"modules/ConfigModule.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"modules/DatabaseModule.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"modules/DictionaryModule.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"modules/RequestModule.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"modules/SearchModule.html":{},"entities/Seed.html":{},"modules/SeederModule.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"modules/SetupModule.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["specific",{"_index":1104,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["specifying",{"_index":398,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["sqlite",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/**/*.entity.ts",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../activity.enum.ts",{"_index":1192,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../bootstrap.ts",{"_index":1386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../column.decorator.ts",{"_index":1217,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.utils.ts",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../configure",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../create",{"_index":1218,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ctx",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../dictionary",{"_index":1382,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../entity.exception.ts",{"_index":1383,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../env",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment",{"_index":1220,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":1194,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../open",{"_index":1216,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../orm.config.ts",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../request.enum.ts",{"_index":1195,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../signals.ts",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.enum.ts",{"_index":1196,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../swagger",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translation.enum.ts",{"_index":1193,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../update",{"_index":1221,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../utils.ts",{"_index":1219,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/activity/activity.entity.ts",{"_index":6,"title":{},"body":{"entities/Activity.html":{},"coverage.html":{}}}],["src/activity/activity.entity.ts:10",{"_index":26,"title":{},"body":{"entities/Activity.html":{}}}],["src/activity/activity.entity.ts:13",{"_index":19,"title":{},"body":{"entities/Activity.html":{}}}],["src/activity/activity.entity.ts:16",{"_index":34,"title":{},"body":{"entities/Activity.html":{}}}],["src/activity/activity.entity.ts:19",{"_index":32,"title":{},"body":{"entities/Activity.html":{}}}],["src/activity/activity.entity.ts:22",{"_index":23,"title":{},"body":{"entities/Activity.html":{}}}],["src/activity/activity.enum.ts",{"_index":1197,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/activity/activity.module.ts",{"_index":66,"title":{},"body":{"modules/ActivityModule.html":{}}}],["src/activity/activity.service.ts",{"_index":76,"title":{},"body":{"injectables/ActivityService.html":{},"coverage.html":{}}}],["src/activity/activity.service.ts:14",{"_index":90,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:17",{"_index":112,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:25",{"_index":96,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:29",{"_index":104,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:33",{"_index":101,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:37",{"_index":106,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:41",{"_index":110,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/activity.service.ts:45",{"_index":108,"title":{},"body":{"injectables/ActivityService.html":{}}}],["src/activity/interfaces/dictionary",{"_index":520,"title":{},"body":{"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app.module.ts",{"_index":202,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/bootstrap/bootstrap.ts",{"_index":1084,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/bootstrap/configure",{"_index":1086,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/bootstrap/signals.ts",{"_index":1089,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/bootstrap/swagger",{"_index":1091,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/column.decorator.ts",{"_index":1096,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/create",{"_index":1098,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/ctx",{"_index":1100,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/environment",{"_index":1103,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/open",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/update",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/decorators/user",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/entities/timestamps.entity.ts",{"_index":971,"title":{},"body":{"classes/TimestampsEntity.html":{},"coverage.html":{}}}],["src/common/entities/timestamps.entity.ts:13",{"_index":979,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["src/common/entities/timestamps.entity.ts:9",{"_index":975,"title":{},"body":{"classes/TimestampsEntity.html":{}}}],["src/common/enums/status.enum.ts",{"_index":1210,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/env.ts",{"_index":604,"title":{},"body":{"classes/Env.html":{},"coverage.html":{}}}],["src/common/env.ts:12",{"_index":613,"title":{},"body":{"classes/Env.html":{}}}],["src/common/env.ts:16",{"_index":615,"title":{},"body":{"classes/Env.html":{}}}],["src/common/env.ts:23",{"_index":617,"title":{},"body":{"classes/Env.html":{}}}],["src/common/env.ts:30",{"_index":621,"title":{},"body":{"classes/Env.html":{}}}],["src/common/env.ts:4",{"_index":611,"title":{},"body":{"classes/Env.html":{}}}],["src/common/exceptions/cors.exception.ts",{"_index":229,"title":{},"body":{"classes/CorsException.html":{},"coverage.html":{}}}],["src/common/exceptions/cors.exception.ts:2",{"_index":232,"title":{},"body":{"classes/CorsException.html":{}}}],["src/common/exceptions/entity.exception.ts",{"_index":568,"title":{},"body":{"classes/EntityException.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/exceptions/entity.exception.ts:17",{"_index":575,"title":{},"body":{"classes/EntityException.html":{}}}],["src/common/exceptions/entity.exception.ts:18",{"_index":573,"title":{},"body":{"classes/EntityException.html":{}}}],["src/common/exceptions/entity.exception.ts:30",{"_index":584,"title":{},"body":{"classes/EntityException.html":{}}}],["src/common/exceptions/error.response.ts",{"_index":634,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["src/common/exceptions/error.response.ts:11",{"_index":638,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/common/exceptions/error.response.ts:17",{"_index":643,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/common/exceptions/error.response.ts:5",{"_index":641,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/common/exceptions/error.response.ts:8",{"_index":639,"title":{},"body":{"classes/ErrorResponse.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":734,"title":{},"body":{"classes/HttpExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:11",{"_index":743,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["src/common/filters/exception.filter.ts:8",{"_index":739,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["src/common/interceptors/exception",{"_index":646,"title":{},"body":{"injectables/ExceptionInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/request.interceptor.ts",{"_index":782,"title":{},"body":{"injectables/RequestInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/request.interceptor.ts:10",{"_index":783,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["src/common/interfaces/timestamps.interface.ts",{"_index":983,"title":{},"body":{"interfaces/TimestampsInterface.html":{},"coverage.html":{}}}],["src/common/setup/config/config.module.ts",{"_index":210,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/common/setup/config/config.utils.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/setup/config/orm.config.ts",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/setup/database/database.module.ts",{"_index":338,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/common/setup/request/request.enum.ts",{"_index":1207,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/common/setup/request/request.module.ts",{"_index":839,"title":{},"body":{"modules/RequestModule.html":{}}}],["src/common/setup/request/request.service.ts",{"_index":845,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/common/setup/request/request.service.ts:10",{"_index":852,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/setup/request/request.service.ts:14",{"_index":853,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/setup/request/request.service.ts:18",{"_index":856,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/setup/request/request.service.ts:26",{"_index":859,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/setup/request/request.service.ts:30",{"_index":854,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/setup/request/request.service.ts:9",{"_index":861,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/common/setup/seeder/abstract/baseseed.ts",{"_index":953,"title":{},"body":{"injectables/Seeds.html":{},"coverage.html":{}}}],["src/common/setup/seeder/abstract/baseseed.ts:10",{"_index":959,"title":{},"body":{"injectables/Seeds.html":{}}}],["src/common/setup/seeder/abstract/baseseed.ts:12",{"_index":958,"title":{},"body":{"injectables/Seeds.html":{}}}],["src/common/setup/seeder/abstract/baseseed.ts:14",{"_index":957,"title":{},"body":{"injectables/Seeds.html":{}}}],["src/common/setup/seeder/abstract/baseseed.ts:18",{"_index":956,"title":{},"body":{"injectables/Seeds.html":{}}}],["src/common/setup/seeder/abstract/baseseed.ts:7",{"_index":955,"title":{},"body":{"injectables/Seeds.html":{}}}],["src/common/setup/seeder/entity/seeder.entity.ts",{"_index":919,"title":{},"body":{"entities/Seed.html":{},"coverage.html":{}}}],["src/common/setup/seeder/entity/seeder.entity.ts:11",{"_index":922,"title":{},"body":{"entities/Seed.html":{}}}],["src/common/setup/seeder/entity/seeder.entity.ts:14",{"_index":923,"title":{},"body":{"entities/Seed.html":{}}}],["src/common/setup/seeder/entity/seeder.entity.ts:8",{"_index":920,"title":{},"body":{"entities/Seed.html":{}}}],["src/common/setup/seeder/seeder.module.ts",{"_index":929,"title":{},"body":{"modules/SeederModule.html":{}}}],["src/common/setup/seeder/seeds/adddefaultvaluesfordevelopment.ts",{"_index":125,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"coverage.html":{}}}],["src/common/setup/seeder/seeds/adddefaultvaluesfordevelopment.ts:13",{"_index":137,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["src/common/setup/seeder/seeds/adddefaultvaluesfordevelopment.ts:22",{"_index":146,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["src/common/setup/seeder/seeds/adddefaultvaluesfordevelopment.ts:33",{"_index":139,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["src/common/setup/seeder/service/seeder.service.ts",{"_index":933,"title":{},"body":{"injectables/SeederService.html":{},"coverage.html":{}}}],["src/common/setup/seeder/service/seeder.service.ts:11",{"_index":938,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/common/setup/seeder/service/seeder.service.ts:15",{"_index":939,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/common/setup/seeder/service/seeder.service.ts:7",{"_index":936,"title":{},"body":{"injectables/SeederService.html":{}}}],["src/common/setup/setup.module.ts",{"_index":965,"title":{},"body":{"modules/SetupModule.html":{}}}],["src/common/types/index.ts",{"_index":1203,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/common/utils/utils.ts",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/common/validations/env",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/dictionary/dictionary.controller.ts",{"_index":404,"title":{},"body":{"controllers/DictionaryController.html":{},"coverage.html":{}}}],["src/dictionary/dictionary.controller.ts:104",{"_index":418,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["src/dictionary/dictionary.controller.ts:44",{"_index":426,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["src/dictionary/dictionary.controller.ts:56",{"_index":410,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["src/dictionary/dictionary.controller.ts:76",{"_index":431,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["src/dictionary/dictionary.entity",{"_index":152,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchTranslationResponse.html":{},"modules/SeederModule.html":{}}}],["src/dictionary/dictionary.entity.ts",{"_index":357,"title":{},"body":{"entities/Dictionary.html":{},"coverage.html":{}}}],["src/dictionary/dictionary.entity.ts:14",{"_index":362,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:18",{"_index":378,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:21",{"_index":380,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:24",{"_index":361,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:27",{"_index":363,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:30",{"_index":367,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:33",{"_index":368,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:38",{"_index":374,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:41",{"_index":359,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.entity.ts:44",{"_index":376,"title":{},"body":{"entities/Dictionary.html":{}}}],["src/dictionary/dictionary.module.ts",{"_index":527,"title":{},"body":{"modules/DictionaryModule.html":{}}}],["src/dictionary/dictionary.service.ts",{"_index":530,"title":{},"body":{"injectables/DictionaryService.html":{},"coverage.html":{}}}],["src/dictionary/dictionary.service.ts:12",{"_index":540,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/dictionary.service.ts:21",{"_index":548,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/dictionary.service.ts:39",{"_index":538,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/dictionary.service.ts:43",{"_index":551,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/dictionary.service.ts:47",{"_index":544,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/dictionary.service.ts:51",{"_index":542,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/dictionary.service.ts:9",{"_index":536,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["src/dictionary/request/create",{"_index":234,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"coverage.html":{}}}],["src/dictionary/request/fetch",{"_index":674,"title":{},"body":{"classes/FetchDictionaryRequestParam.html":{},"coverage.html":{}}}],["src/dictionary/request/remove",{"_index":347,"title":{},"body":{"classes/DeleteDictionaryRequestParam.html":{},"coverage.html":{}}}],["src/dictionary/request/update",{"_index":1065,"title":{},"body":{"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"coverage.html":{}}}],["src/dictionary/response/create",{"_index":276,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"coverage.html":{}}}],["src/dictionary/response/fetch",{"_index":676,"title":{},"body":{"classes/FetchDictionaryResponse.html":{},"coverage.html":{}}}],["src/health/health.controller.ts",{"_index":719,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:26",{"_index":725,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":731,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/search/request/search",{"_index":895,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{},"coverage.html":{}}}],["src/search/search.controller.ts",{"_index":876,"title":{},"body":{"controllers/SearchController.html":{},"coverage.html":{}}}],["src/search/search.controller.ts:22",{"_index":881,"title":{},"body":{"controllers/SearchController.html":{}}}],["src/search/search.module.ts",{"_index":917,"title":{},"body":{"modules/SearchModule.html":{}}}],["src/translations/request/create",{"_index":307,"title":{},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"coverage.html":{}}}],["src/translations/request/remove",{"_index":353,"title":{},"body":{"classes/DeleteTranslationRequestParam.html":{},"coverage.html":{}}}],["src/translations/request/update",{"_index":1072,"title":{},"body":{"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{}}}],["src/translations/response/create",{"_index":322,"title":{},"body":{"classes/CreateTranslationResponse.html":{},"coverage.html":{}}}],["src/translations/response/fetch",{"_index":701,"title":{},"body":{"classes/FetchTranslationResponse.html":{},"coverage.html":{}}}],["src/translations/response/properties/translation.property",{"_index":693,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["src/translations/response/properties/translation.property.ts",{"_index":1039,"title":{},"body":{"classes/TranslationProperty.html":{},"coverage.html":{}}}],["src/translations/response/properties/translation.property.ts:12",{"_index":1048,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:15",{"_index":1042,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:18",{"_index":1044,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:21",{"_index":1043,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:24",{"_index":1045,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:27",{"_index":1046,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:30",{"_index":1041,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:33",{"_index":1040,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:39",{"_index":1049,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/response/properties/translation.property.ts:9",{"_index":1047,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["src/translations/translation.controller.ts",{"_index":1003,"title":{},"body":{"controllers/TranslationController.html":{},"coverage.html":{}}}],["src/translations/translation.controller.ts:117",{"_index":1008,"title":{},"body":{"controllers/TranslationController.html":{}}}],["src/translations/translation.controller.ts:53",{"_index":1012,"title":{},"body":{"controllers/TranslationController.html":{}}}],["src/translations/translation.controller.ts:66",{"_index":1007,"title":{},"body":{"controllers/TranslationController.html":{}}}],["src/translations/translation.controller.ts:92",{"_index":1014,"title":{},"body":{"controllers/TranslationController.html":{}}}],["src/translations/translation.entity",{"_index":154,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"modules/SeederModule.html":{}}}],["src/translations/translation.entity.ts",{"_index":984,"title":{},"body":{"entities/Translation.html":{},"coverage.html":{}}}],["src/translations/translation.entity.ts:14",{"_index":992,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:18",{"_index":997,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:21",{"_index":998,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:24",{"_index":986,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:27",{"_index":993,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:30",{"_index":994,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:33",{"_index":995,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:38",{"_index":991,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:41",{"_index":985,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.entity.ts:44",{"_index":996,"title":{},"body":{"entities/Translation.html":{}}}],["src/translations/translation.enum",{"_index":156,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"injectables/DictionaryService.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["src/translations/translation.enum.ts",{"_index":1198,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/translations/translation.module.ts",{"_index":1036,"title":{},"body":{"modules/TranslationModule.html":{}}}],["src/translations/translation.service.ts",{"_index":1051,"title":{},"body":{"injectables/TranslationService.html":{},"coverage.html":{}}}],["src/translations/translation.service.ts:12",{"_index":1055,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/translations/translation.service.ts:20",{"_index":1054,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/translations/translation.service.ts:26",{"_index":1058,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/translations/translation.service.ts:30",{"_index":1057,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/translations/translation.service.ts:34",{"_index":1056,"title":{},"body":{"injectables/TranslationService.html":{}}}],["src/translations/translation.service.ts:9",{"_index":1053,"title":{},"body":{"injectables/TranslationService.html":{}}}],["start",{"_index":1268,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1271,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1272,"title":{},"body":{"index.html":{}}}],["started",{"_index":792,"title":{"index.html":{}},"body":{"injectables/RequestInterceptor.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1079,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":280,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/Env.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"injectables/RequestService.html":{},"classes/TranslationProperty.html":{}}}],["status",{"_index":157,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"miscellaneous/enumerations.html":{}}}],["status.active",{"_index":187,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{}}}],["status.deleted",{"_index":566,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["status.pending",{"_index":394,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["statuscode",{"_index":635,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{}}}],["strategy",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":231,"title":{},"body":{"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"injectables/RequestService.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"injectables/Seeds.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"miscellaneous/variables.html":{}}}],["subscribenodesignals",{"_index":1090,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["subscribenodesignals(loggerservice",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["successful",{"_index":424,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/SearchController.html":{},"controllers/TranslationController.html":{}}}],["successful'})@apiunprocessableentityresponse({description",{"_index":415,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["such",{"_index":1341,"title":{},"body":{"index.html":{}}}],["super(exception.message",{"_index":585,"title":{},"body":{"classes/EntityException.html":{}}}],["super(partial",{"_index":696,"title":{},"body":{"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{}}}],["super(seedrepository",{"_index":164,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["support",{"_index":1353,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":1328,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["sv",{"_index":1202,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["svg",{"_index":1366,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":797,"title":{},"body":{"injectables/RequestInterceptor.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger.yaml",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":1093,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggermodule.createdocument(app",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggermodule.setup('docs",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeroptions",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["swaggeryaml",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":1323,"title":{},"body":{"index.html":{}}}],["synchronize",{"_index":1312,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["synchronizeoptions",{"_index":1313,"title":{},"body":{"index.html":{}}}],["t",{"_index":522,"title":{},"body":{"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1146,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tables",{"_index":1319,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1145,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":546,"title":{},"body":{"injectables/DictionaryService.html":{},"classes/SearchDictionaryRequestParam.html":{}}}],["template",{"_index":1257,"title":{},"body":{"index.html":{}}}],["terminated",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":1204,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["test:covdatabase",{"_index":1274,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1273,"title":{},"body":{"index.html":{}}}],["tests",{"_index":619,"title":{},"body":{"classes/Env.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["text",{"_index":360,"title":{},"body":{"entities/Dictionary.html":{},"injectables/RequestInterceptor.html":{},"entities/Translation.html":{}}}],["text.completed",{"_index":817,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["text.payload",{"_index":819,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["text.started",{"_index":815,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["thing",{"_index":1354,"title":{},"body":{"index.html":{}}}],["things",{"_index":1307,"title":{},"body":{"index.html":{}}}],["this.activityrepository.save",{"_index":117,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.activityservice.adddictionarycreated",{"_index":493,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["this.activityservice.adddictionarydeleted",{"_index":517,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["this.activityservice.adddictionaryupdated",{"_index":507,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["this.activityservice.addtranslationcreated",{"_index":1027,"title":{},"body":{"controllers/TranslationController.html":{}}}],["this.adddevelopmentvalues",{"_index":942,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.code",{"_index":586,"title":{},"body":{"classes/EntityException.html":{}}}],["this.constructor",{"_index":593,"title":{},"body":{"classes/EntityException.html":{}}}],["this.constructor.name",{"_index":589,"title":{},"body":{"classes/EntityException.html":{}}}],["this.create(activity",{"_index":118,"title":{},"body":{"injectables/ActivityService.html":{}}}],["this.details",{"_index":590,"title":{},"body":{"classes/EntityException.html":{}}}],["this.dictionary.find",{"_index":559,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionary.findone",{"_index":554,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionary.save(payload",{"_index":564,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionary.update",{"_index":565,"title":{},"body":{"injectables/DictionaryService.html":{}}}],["this.dictionaryrepository.save(payload",{"_index":189,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["this.dictionaryservice.create(payload",{"_index":492,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["this.dictionaryservice.findoneby(param.uuid",{"_index":473,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["this.dictionaryservice.markasdeleted(param.uuid",{"_index":514,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["this.dictionaryservice.searchbykeyword(query.keyword",{"_index":890,"title":{},"body":{"controllers/SearchController.html":{}}}],["this.dictionaryservice.update(param.uuid",{"_index":503,"title":{},"body":{"controllers/DictionaryController.html":{}}}],["this.extractdetails(exception",{"_index":591,"title":{},"body":{"classes/EntityException.html":{}}}],["this.httpadapterhost",{"_index":757,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["this.insertvalues",{"_index":174,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["this.logger.error(`[seed][${seed.name",{"_index":948,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.logger.log(`[seed][${seed.name",{"_index":952,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.message",{"_index":595,"title":{},"body":{"classes/EntityException.html":{}}}],["this.name",{"_index":588,"title":{},"body":{"classes/EntityException.html":{},"injectables/Seeds.html":{}}}],["this.request.headers[requestservice.request_id_header",{"_index":874,"title":{},"body":{"injectables/RequestService.html":{}}}],["this.seed",{"_index":941,"title":{},"body":{"injectables/SeederService.html":{}}}],["this.seedrepository.count",{"_index":962,"title":{},"body":{"injectables/Seeds.html":{}}}],["this.seedrepository.insert",{"_index":961,"title":{},"body":{"injectables/Seeds.html":{}}}],["this.translateservice.create(payload",{"_index":1026,"title":{},"body":{"controllers/TranslationController.html":{}}}],["this.translateservice.findoneby(param.uuid",{"_index":1023,"title":{},"body":{"controllers/TranslationController.html":{}}}],["this.translateservice.markasdeleted(param.uuid",{"_index":1032,"title":{},"body":{"controllers/TranslationController.html":{}}}],["this.translateservice.update(param.uuid",{"_index":1031,"title":{},"body":{"controllers/TranslationController.html":{}}}],["this.translation.create",{"_index":1062,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translation.findone",{"_index":1060,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translation.save(translationinstance",{"_index":1063,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translation.update",{"_index":1064,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translationrepository.save(payloadtranslation",{"_index":193,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["throw",{"_index":474,"title":{},"body":{"controllers/DictionaryController.html":{},"classes/Env.html":{},"injectables/ExceptionInterceptor.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["thus",{"_index":754,"title":{},"body":{"classes/HttpExceptionsFilter.html":{}}}],["timestamp",{"_index":22,"title":{},"body":{"entities/Activity.html":{},"entities/Dictionary.html":{},"entities/Seed.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{}}}],["timestampsentity",{"_index":970,"title":{"classes/TimestampsEntity.html":{}},"body":{"classes/TimestampsEntity.html":{},"coverage.html":{}}}],["timestampsinterface",{"_index":386,"title":{"interfaces/TimestampsInterface.html":{}},"body":{"entities/Dictionary.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"coverage.html":{}}}],["todo",{"_index":482,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["token",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transformer",{"_index":298,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/TranslationProperty.html":{},"dependencies.html":{}}}],["translateservice",{"_index":1022,"title":{},"body":{"controllers/TranslationController.html":{}}}],["translation",{"_index":153,"title":{"entities/Translation.html":{}},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"classes/FetchTranslationResponse.html":{},"modules/SeederModule.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["translation.controller",{"_index":1037,"title":{},"body":{"modules/TranslationModule.html":{}}}],["translation.dictionary",{"_index":370,"title":{},"body":{"entities/Dictionary.html":{}}}],["translation.entity",{"_index":335,"title":{},"body":{"classes/CreateTranslationResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{}}}],["translation.enum",{"_index":315,"title":{},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{}}}],["translation.request",{"_index":356,"title":{},"body":{"classes/DeleteTranslationRequestParam.html":{},"controllers/TranslationController.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["translation.request.ts",{"_index":308,"title":{},"body":{"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{}}}],["translation.request.ts:10",{"_index":1074,"title":{},"body":{"classes/UpdateTranslationRequest.html":{}}}],["translation.request.ts:11",{"_index":313,"title":{},"body":{"classes/CreateTranslationRequest.html":{}}}],["translation.request.ts:16",{"_index":1075,"title":{},"body":{"classes/UpdateTranslationRequestParam.html":{}}}],["translation.request.ts:21",{"_index":309,"title":{},"body":{"classes/CreateTranslationRequest.html":{}}}],["translation.request.ts:25",{"_index":310,"title":{},"body":{"classes/CreateTranslationRequest.html":{}}}],["translation.request.ts:34",{"_index":311,"title":{},"body":{"classes/CreateTranslationRequest.html":{}}}],["translation.request.ts:44",{"_index":320,"title":{},"body":{"classes/CreateTranslationRequestParam.html":{}}}],["translation.response",{"_index":715,"title":{},"body":{"classes/FetchTranslationResponse.html":{},"controllers/TranslationController.html":{}}}],["translation.response.ts",{"_index":323,"title":{},"body":{"classes/CreateTranslationResponse.html":{},"classes/FetchTranslationResponse.html":{},"coverage.html":{}}}],["translation.response.ts:10",{"_index":332,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:12",{"_index":714,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["translation.response.ts:13",{"_index":333,"title":{},"body":{"classes/CreateTranslationResponse.html":{},"classes/FetchTranslationResponse.html":{}}}],["translation.response.ts:16",{"_index":326,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:19",{"_index":329,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:22",{"_index":328,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:25",{"_index":330,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:28",{"_index":331,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:31",{"_index":327,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:34",{"_index":325,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:37",{"_index":324,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:43",{"_index":334,"title":{},"body":{"classes/CreateTranslationResponse.html":{}}}],["translation.response.ts:5",{"_index":702,"title":{},"body":{"classes/FetchTranslationResponse.html":{}}}],["translation.service",{"_index":1016,"title":{},"body":{"controllers/TranslationController.html":{},"modules/TranslationModule.html":{}}}],["translation.uuid",{"_index":1028,"title":{},"body":{"controllers/TranslationController.html":{}}}],["translationcontroller",{"_index":1002,"title":{"controllers/TranslationController.html":{}},"body":{"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"coverage.html":{}}}],["translationentity",{"_index":397,"title":{},"body":{"entities/Dictionary.html":{}}}],["translationid",{"_index":372,"title":{},"body":{"entities/Dictionary.html":{}}}],["translationinstance",{"_index":1061,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translationmodule",{"_index":201,"title":{"modules/TranslationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TranslationModule.html":{},"modules.html":{},"overview.html":{}}}],["translationproperty",{"_index":677,"title":{"classes/TranslationProperty.html":{}},"body":{"classes/FetchDictionaryResponse.html":{},"classes/TranslationProperty.html":{},"coverage.html":{}}}],["translationproperty(partial",{"_index":1050,"title":{},"body":{"classes/TranslationProperty.html":{}}}],["translationrepository",{"_index":136,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["translations",{"_index":358,"title":{},"body":{"entities/Dictionary.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryResponse.html":{},"entities/Translation.html":{},"index.html":{}}}],["translations/translation.entity",{"_index":385,"title":{},"body":{"entities/Dictionary.html":{}}}],["translations/translation.enum",{"_index":384,"title":{},"body":{"entities/Dictionary.html":{}}}],["translations/translation.module",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["translationservice",{"_index":1015,"title":{"injectables/TranslationService.html":{}},"body":{"controllers/TranslationController.html":{},"modules/TranslationModule.html":{},"injectables/TranslationService.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":31,"title":{},"body":{"entities/Activity.html":{},"modules/ConfigModule.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"entities/Dictionary.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Translation.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true})@isenum(language",{"_index":245,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{}}}],["true})@isnotempty()@minlength(1)@maxlength(32",{"_index":897,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{}}}],["true})@isstring()@isnotempty()@minlength(1)@maxlength(128",{"_index":258,"title":{},"body":{"classes/CreateDictionaryRequest.html":{}}}],["true})@isstring()@isnotempty()@minlength(1)@maxlength(512",{"_index":312,"title":{},"body":{"classes/CreateTranslationRequest.html":{}}}],["true})@isuuid('4",{"_index":319,"title":{},"body":{"classes/CreateTranslationRequestParam.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequestParam.html":{}}}],["true})@joincolumn({name",{"_index":371,"title":{},"body":{"entities/Dictionary.html":{}}}],["true})@type(undefined",{"_index":680,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["try",{"_index":945,"title":{},"body":{"injectables/SeederService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ttd",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":12,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"injectables/DictionaryService.html":{},"interfaces/DictionaryUpdated.html":{},"classes/EntityException.html":{},"classes/ErrorResponse.html":{},"injectables/ExceptionInterceptor.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestInterceptor.html":{},"injectables/RequestService.html":{},"controllers/SearchController.html":{},"classes/SearchDictionaryRequestParam.html":{},"entities/Seed.html":{},"injectables/SeederService.html":{},"injectables/Seeds.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1380,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeerror('node_env",{"_index":626,"title":{},"body":{"classes/Env.html":{}}}],["typeof",{"_index":601,"title":{},"body":{"classes/EntityException.html":{}}}],["typeorm",{"_index":36,"title":{},"body":{"entities/Activity.html":{},"injectables/ActivityService.html":{},"injectables/AddDefaultValuesForDevelopment.html":{},"entities/Dictionary.html":{},"injectables/DictionaryService.html":{},"entities/Seed.html":{},"injectables/Seeds.html":{},"entities/Translation.html":{},"injectables/TranslationService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["typeormmodule",{"_index":69,"title":{},"body":{"modules/ActivityModule.html":{},"modules/DatabaseModule.html":{},"modules/DictionaryModule.html":{},"modules/SeederModule.html":{},"modules/TranslationModule.html":{}}}],["typeormmodule.forfeature([activity",{"_index":73,"title":{},"body":{"modules/ActivityModule.html":{}}}],["typeormmodule.forfeature([dictionary",{"_index":529,"title":{},"body":{"modules/DictionaryModule.html":{}}}],["typeormmodule.forfeature([seed",{"_index":932,"title":{},"body":{"modules/SeederModule.html":{}}}],["typeormmodule.forfeature([translation",{"_index":1038,"title":{},"body":{"modules/TranslationModule.html":{}}}],["typeormmodule.forrootasync",{"_index":341,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["typeormmoduleoptions",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":623,"title":{},"body":{"classes/Env.html":{}}}],["types/passport",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":798,"title":{},"body":{"injectables/RequestInterceptor.html":{},"dependencies.html":{}}}],["uml",{"_index":1363,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["undefined",{"_index":243,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"controllers/HealthController.html":{},"controllers/SearchController.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"miscellaneous/functions.html":{}}}],["undefined})@isstring()@isoptional",{"_index":254,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{}}}],["undefined})@validatenested({each",{"_index":679,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["unique",{"_index":391,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["unit",{"_index":618,"title":{},"body":{"classes/Env.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unittest",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":142,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/EntityException.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/SeederService.html":{},"controllers/TranslationController.html":{},"miscellaneous/variables.html":{}}}],["unlicensed",{"_index":1377,"title":{},"body":{"properties.html":{}}}],["unprocessable",{"_index":465,"title":{},"body":{"controllers/DictionaryController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["unprocessable_entity",{"_index":416,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["unprocessableentityexception",{"_index":439,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["unprocessableentityexception('no",{"_index":501,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["update",{"_index":350,"title":{},"body":{"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"controllers/TranslationController.html":{},"injectables/TranslationService.html":{}}}],["update(@param",{"_index":1030,"title":{},"body":{"controllers/TranslationController.html":{}}}],["update(param",{"_index":427,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["update(uuid",{"_index":550,"title":{},"body":{"injectables/DictionaryService.html":{},"injectables/TranslationService.html":{}}}],["updated",{"_index":502,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{},"miscellaneous/enumerations.html":{}}}],["updatedat",{"_index":278,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TimestampsEntity.html":{},"interfaces/TimestampsInterface.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{}}}],["updatedatecolumn",{"_index":388,"title":{},"body":{"entities/Dictionary.html":{},"classes/TimestampsEntity.html":{},"entities/Translation.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["updatedatecolumn(columnoptions",{"_index":1255,"title":{},"body":{"miscellaneous/functions.html":{}}}],["updatedatecolumn({type",{"_index":375,"title":{},"body":{"entities/Dictionary.html":{},"entities/Translation.html":{}}}],["updatedby",{"_index":499,"title":{},"body":{"controllers/DictionaryController.html":{},"interfaces/DictionaryCreated.html":{},"interfaces/DictionaryDeleted.html":{},"interfaces/DictionaryUpdated.html":{},"controllers/TranslationController.html":{}}}],["updatedictionaryrequest",{"_index":428,"title":{"classes/UpdateDictionaryRequest.html":{}},"body":{"controllers/DictionaryController.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"coverage.html":{}}}],["updatedictionaryrequestparam",{"_index":348,"title":{"classes/UpdateDictionaryRequestParam.html":{}},"body":{"classes/DeleteDictionaryRequestParam.html":{},"controllers/DictionaryController.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"coverage.html":{}}}],["updatedictionaryrequestparam:16",{"_index":349,"title":{},"body":{"classes/DeleteDictionaryRequestParam.html":{}}}],["updatetranslationrequest",{"_index":1013,"title":{"classes/UpdateTranslationRequest.html":{}},"body":{"controllers/TranslationController.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{}}}],["updatetranslationrequestparam",{"_index":354,"title":{"classes/UpdateTranslationRequestParam.html":{}},"body":{"classes/DeleteTranslationRequestParam.html":{},"controllers/TranslationController.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"coverage.html":{}}}],["updatetranslationrequestparam:16",{"_index":355,"title":{},"body":{"classes/DeleteTranslationRequestParam.html":{}}}],["url",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url}/docs",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":896,"title":{},"body":{"classes/SearchDictionaryRequestParam.html":{},"index.html":{}}}],["usefactory",{"_index":343,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/RequestModule.html":{}}}],["user",{"_index":252,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"controllers/DictionaryController.html":{},"classes/EntityException.html":{},"controllers/TranslationController.html":{}}}],["user's",{"_index":487,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["useragent",{"_index":823,"title":{},"body":{"injectables/RequestInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["username",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users",{"_index":1340,"title":{},"body":{"index.html":{}}}],["using",{"_index":1356,"title":{},"body":{"index.html":{}}}],["utf8",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uuid",{"_index":279,"title":{},"body":{"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/DeleteDictionaryRequestParam.html":{},"classes/DeleteTranslationRequestParam.html":{},"entities/Dictionary.html":{},"controllers/DictionaryController.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"injectables/RequestService.html":{},"entities/Translation.html":{},"controllers/TranslationController.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"dependencies.html":{}}}],["uuid'})@apiresponse({status",{"_index":1011,"title":{},"body":{"controllers/TranslationController.html":{}}}],["uuidv4",{"_index":866,"title":{},"body":{"injectables/RequestService.html":{}}}],["v",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v4",{"_index":865,"title":{},"body":{"injectables/RequestService.html":{}}}],["validatenested",{"_index":694,"title":{},"body":{"classes/FetchDictionaryResponse.html":{}}}],["validation",{"_index":300,"title":{},"body":{"classes/CreateDictionaryResponse.html":{}}}],["validation.schema",{"_index":214,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validation.schema.ts",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationoptions",{"_index":212,"title":{},"body":{"modules/ConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validations/env",{"_index":213,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validationschema",{"_index":211,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/RequestService.html":{}}}],["validator",{"_index":268,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/FetchDictionaryRequestParam.html":{},"classes/FetchDictionaryResponse.html":{},"classes/HttpExceptionsFilter.html":{},"classes/SearchDictionaryRequestParam.html":{},"classes/UpdateDictionaryRequest.html":{},"classes/UpdateDictionaryRequestParam.html":{},"classes/UpdateTranslationRequest.html":{},"classes/UpdateTranslationRequestParam.html":{},"dependencies.html":{}}}],["value",{"_index":178,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"classes/CorsException.html":{},"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"entities/Dictionary.html":{},"injectables/DictionaryService.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"injectables/RequestService.html":{},"classes/SearchDictionaryRequestParam.html":{},"injectables/SeederService.html":{},"entities/Translation.html":{},"classes/TranslationProperty.html":{},"injectables/TranslationService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":167,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{}}}],["varchar",{"_index":364,"title":{},"body":{"entities/Dictionary.html":{},"entities/Seed.html":{},"entities/Translation.html":{}}}],["variable",{"_index":1085,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":1385,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":729,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"properties.html":{}}}],["versioningtype.uri",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":171,"title":{},"body":{"injectables/AddDefaultValuesForDevelopment.html":{},"controllers/DictionaryController.html":{},"classes/HttpExceptionsFilter.html":{},"injectables/RequestService.html":{},"controllers/TranslationController.html":{}}}],["watch",{"_index":1269,"title":{},"body":{"index.html":{}}}],["whether",{"_index":248,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{}}}],["whitelist",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whitelistedpaths",{"_index":795,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["whitelistedpaths.some((path",{"_index":800,"title":{},"body":{"injectables/RequestInterceptor.html":{}}}],["won't",{"_index":1325,"title":{},"body":{"index.html":{}}}],["word",{"_index":256,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["word/sentence",{"_index":238,"title":{},"body":{"classes/CreateDictionaryRequest.html":{},"classes/CreateDictionaryResponse.html":{},"classes/CreateTranslationRequest.html":{},"classes/CreateTranslationRequestParam.html":{},"classes/CreateTranslationResponse.html":{},"classes/FetchDictionaryResponse.html":{},"classes/FetchTranslationResponse.html":{},"classes/TranslationProperty.html":{}}}],["works",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["writing",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrong",{"_index":417,"title":{},"body":{"controllers/DictionaryController.html":{},"controllers/TranslationController.html":{}}}],["wrong'})@apicreatedresponse({type",{"_index":1006,"title":{},"body":{"controllers/TranslationController.html":{}}}],["x",{"_index":1209,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yaml.dump(document",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["you're",{"_index":1304,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/ActivityModule.html":{},"modules/AppModule.html":{},"modules/DictionaryModule.html":{},"modules/RequestModule.html":{},"modules/SearchModule.html":{},"modules/SeederModule.html":{},"modules/SetupModule.html":{},"modules/TranslationModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"entities/Activity.html":{"url":"entities/Activity.html","title":"entity - Activity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Activity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activity/activity.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                action\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                properties\n                            \n                            \n                                    \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        action\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityAction\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ActivityAction})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activity/activity.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activity/activity.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activity/activity.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        properties\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DictionaryActivityType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'simple-json', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activity/activity.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ActivityType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: ActivityType})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/activity/activity.entity.ts:16\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { ActivityAction, ActivityType } from './activity.enum';\nimport { DictionaryActivityType } from './interfaces/dictionary-activity.interface';\nimport { Column } from '/common/decorators/column.decorator';\nimport { CreateDateColumn } from '/common/decorators/create-date-column.decorator';\n\n@Entity({ name: 'Activity' })\nexport class Activity {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'enum', enum: ActivityAction })\n  action: ActivityAction;\n\n  @Column({ type: 'enum', enum: ActivityType })\n  type: ActivityType;\n\n  @Column({ type: 'simple-json', nullable: true })\n  properties: DictionaryActivityType;\n\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActivityModule.html":{"url":"modules/ActivityModule.html","title":"module - ActivityModule","body":"\n                   \n\n\n\n\n    Modules\n    ActivityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivityModule\n\n\n\ncluster_ActivityModule_providers\n\n\n\ncluster_ActivityModule_exports\n\n\n\n\nActivityService \n\nActivityService \n\n\n\nActivityModule\n\nActivityModule\n\nActivityService  -->\n\nActivityModule->ActivityService \n\n\n\n\n\nActivityService\n\nActivityService\n\nActivityModule -->\n\nActivityService->ActivityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/activity/activity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ActivityService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActivityService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ActivityService } from './activity.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Activity } from './activity.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Activity])],\n  providers: [ActivityService],\n  exports: [ActivityService],\n})\nexport class ActivityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ActivityService.html":{"url":"injectables/ActivityService.html","title":"injectable - ActivityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ActivityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activity/activity.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addDictionaryCreated\n                            \n                            \n                                    Public\n                                addDictionaryDeleted\n                            \n                            \n                                    Public\n                                addDictionaryUpdated\n                            \n                            \n                                    Public\n                                addTranslationCreated\n                            \n                            \n                                    Public\n                                addTranslationDeleted\n                            \n                            \n                                    Public\n                                addTranslationUpdated\n                            \n                            \n                                    Private\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(activityRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/activity/activity.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        activityRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addDictionaryCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDictionaryCreated(activity: DictionaryCreated)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryCreated\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addDictionaryDeleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDictionaryDeleted(activity: DictionaryDeleted)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryDeleted\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addDictionaryUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    addDictionaryUpdated(activity: DictionaryUpdated)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryUpdated\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addTranslationCreated\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTranslationCreated(activity: DictionaryCreated)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryCreated\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addTranslationDeleted\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTranslationDeleted(activity: DictionaryDeleted)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryDeleted\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        addTranslationUpdated\n                        \n                    \n                \n            \n            \n                \n                        \n                    addTranslationUpdated(activity: DictionaryUpdated)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryUpdated\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(activity: DictionaryActivityType, type: ActivityType, action: ActivityAction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/activity/activity.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                activity\n                                            \n                                                            DictionaryActivityType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            ActivityType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            ActivityAction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ActivityAction, ActivityType } from './activity.enum';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Activity } from './activity.entity';\nimport { Repository } from 'typeorm';\nimport {\n  DictionaryActivityType,\n  DictionaryCreated,\n  DictionaryDeleted,\n  DictionaryUpdated,\n} from './interfaces/dictionary-activity.interface';\n\n@Injectable()\nexport class ActivityService {\n  constructor(@InjectRepository(Activity) private readonly activityRepository: Repository) {}\n\n  private create(activity: DictionaryActivityType, type: ActivityType, action: ActivityAction): Promise {\n    return this.activityRepository.save({\n      type,\n      action,\n      properties: activity,\n    });\n  }\n\n  public addDictionaryCreated(activity: DictionaryCreated): Promise {\n    return this.create(activity, ActivityType.DICTIONARY, ActivityAction.CREATED);\n  }\n\n  public addDictionaryUpdated(activity: DictionaryUpdated): Promise {\n    return this.create(activity, ActivityType.DICTIONARY, ActivityAction.UPDATED);\n  }\n\n  public addDictionaryDeleted(activity: DictionaryDeleted): Promise {\n    return this.create(activity, ActivityType.DICTIONARY, ActivityAction.DELETED);\n  }\n\n  public addTranslationCreated(activity: DictionaryCreated): Promise {\n    return this.create(activity, ActivityType.TRANSLATION, ActivityAction.CREATED);\n  }\n\n  public addTranslationUpdated(activity: DictionaryUpdated): Promise {\n    return this.create(activity, ActivityType.TRANSLATION, ActivityAction.UPDATED);\n  }\n\n  public addTranslationDeleted(activity: DictionaryDeleted): Promise {\n    return this.create(activity, ActivityType.TRANSLATION, ActivityAction.DELETED);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddDefaultValuesForDevelopment.html":{"url":"injectables/AddDefaultValuesForDevelopment.html","title":"injectable - AddDefaultValuesForDevelopment","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddDefaultValuesForDevelopment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/setup/seeder/seeds/AddDefaultValuesForDevelopment.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Seeds\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                insertValues\n                            \n                            \n                                    Async\n                                run\n                            \n                            \n                                    Async\n                                hasRun\n                            \n                            \n                                    Async\n                                markAsRun\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(seedRepository: Repository, dictionaryRepository: Repository, translationRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/common/setup/seeder/seeds/AddDefaultValuesForDevelopment.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seedRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dictionaryRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        insertValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    insertValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/seeder/seeds/AddDefaultValuesForDevelopment.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Seeds\n\n                        \n                    \n                    \n                        \n                                Defined in         Seeds:26\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hasRun\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasRun()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Seeds\n\n                        \n                    \n                    \n                        \n                                Defined in         Seeds:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        markAsRun\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAsRun()\n                \n            \n\n\n                    \n                        \n                            Inherited from         Seeds\n\n                        \n                    \n                    \n                        \n                                Defined in         Seeds:14\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/common/setup/seeder/seeds/AddDefaultValuesForDevelopment.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Seed } from '../entity/seeder.entity';\nimport { Repository } from 'typeorm';\nimport { Env } from '/common/env';\nimport { Dictionary } from '/src/dictionary/dictionary.entity';\nimport { Translation } from '/src/translations/translation.entity';\nimport { Language } from '/src/translations/translation.enum';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Injectable } from '@nestjs/common';\nimport { Seeds } from '/common/setup/seeder/abstract/BaseSeed';\n\n@Injectable()\nexport class AddDefaultValuesForDevelopment extends Seeds {\n  constructor(\n    @InjectRepository(Seed) protected readonly seedRepository: Repository,\n    @InjectRepository(Dictionary) protected readonly dictionaryRepository: Repository,\n    @InjectRepository(Translation) protected readonly translationRepository: Repository,\n  ) {\n    super(seedRepository);\n  }\n\n  get name() {\n    return 'Add default values for development';\n  }\n\n  async run() {\n    // Only in Development environment\n    if (!Env.isDev) return void 0;\n\n    await this.insertValues();\n  }\n\n  private async insertValues() {\n    const payload: Partial = {\n      value: 'Hello',\n      description: 'An expression or gesture of greeting',\n      language: Language.EN,\n      source: 'Individual contributor',\n      status: STATUS.ACTIVE,\n    };\n    const savedDictionary = await this.dictionaryRepository.save(payload);\n    const payloadTranslation: Partial = {\n      value: 'გომორძგუა',\n      language: Language.ME,\n      status: STATUS.ACTIVE,\n    };\n    payloadTranslation.dictionary = savedDictionary;\n\n    await this.translationRepository.save(payloadTranslation);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nActivityModule\n\nActivityModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActivityModule->AppModule\n\n\n\n\n\nDictionaryModule\n\nDictionaryModule\n\nAppModule -->\n\nDictionaryModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nAppModule -->\n\nSearchModule->AppModule\n\n\n\n\n\nSetupModule\n\nSetupModule\n\nAppModule -->\n\nSetupModule->AppModule\n\n\n\n\n\nTranslationModule\n\nTranslationModule\n\nAppModule -->\n\nTranslationModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ActivityModule\n                        \n                        \n                            DictionaryModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            SearchModule\n                        \n                        \n                            SetupModule\n                        \n                        \n                            TranslationModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SetupModule } from '/common/setup/setup.module';\nimport { HealthModule } from './health/health.module';\nimport { TranslationModule } from './translations/translation.module';\nimport { DictionaryModule } from './dictionary/dictionary.module';\nimport { ActivityModule } from './activity/activity.module';\nimport { SearchModule } from './search/search.module';\n\n@Module({\n  imports: [SetupModule, HealthModule, TranslationModule, DictionaryModule, ActivityModule, SearchModule],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/setup/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import validationSchema, { validationOptions } from '../../validations/env-validation.schema';\nimport { ConfigModule as NestConfigModule } from '@nestjs/config/dist/config.module';\nimport { Module } from '@nestjs/common';\nimport database from './database.config';\nimport service from './service.config';\n\n@Module({\n  imports: [\n    NestConfigModule.forRoot({\n      envFilePath: `.env.${process.env.NODE_ENV}`,\n      load: [database, service],\n      validationOptions,\n      validationSchema,\n      isGlobal: true,\n      cache: true,\n    }),\n  ],\n})\nexport class ConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CorsException.html":{"url":"classes/CorsException.html","title":"class - CorsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CorsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/cors.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CorsException'\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/cors.exception.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CorsException extends Error {\n  readonly name = 'CorsException';\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDictionaryRequest.html":{"url":"classes/CreateDictionaryRequest.html","title":"class - CreateDictionaryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDictionaryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/request/create-dictionary.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                language\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                source\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Dictionary word/sentence description, with examples', required: false})@IsString()@IsOptional()@MaxLength(1024)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/create-dictionary.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code', enum: Language, required: true})@IsEnum(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/create-dictionary.request.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Source of the word/sentence, whether it's individually contributed by user, or from a dictionary', required: false, default: undefined})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/create-dictionary.request.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Hello there', description: 'Word or sentence', required: true})@IsString()@IsNotEmpty()@MinLength(1)@MaxLength(128)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/create-dictionary.request.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Language } from '/src/translations/translation.enum';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString, MaxLength, MinLength } from 'class-validator';\n\nexport class CreateDictionaryRequest {\n  @ApiProperty({ example: 'Hello there', description: 'Word or sentence', required: true })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(1)\n  @MaxLength(128)\n  value: string;\n\n  @ApiProperty({\n    example: 'Some explanation',\n    description: 'Dictionary word/sentence description, with examples',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @MaxLength(1024)\n  description?: string;\n\n  @ApiProperty({ example: Language.EN, description: 'Language code', enum: Language, required: true })\n  @IsEnum(Language)\n  language: Language;\n\n  @ApiProperty({\n    description: \"Source of the word/sentence, whether it's individually contributed by user, or from a dictionary\",\n    required: false,\n    default: null,\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateDictionaryResponse.html":{"url":"classes/CreateDictionaryResponse.html","title":"class - CreateDictionaryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateDictionaryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/response/create-dictionary.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                from\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/dictionary/response/create-dictionary.response.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Dictionary word/sentence description, with examples'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UUID string', example: '12345678-1234-1234-1234-123456789012'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Hello there', description: 'Word or sentence'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/create-dictionary.response.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/response/create-dictionary.response.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CreateDictionaryResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Dictionary } from '../dictionary.entity';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Language } from '/src/translations/translation.enum';\n\nexport class CreateDictionaryResponse {\n  @ApiProperty({ description: 'UUID string', example: '12345678-1234-1234-1234-123456789012' })\n  uuid: string;\n\n  @ApiProperty({ example: 'Hello there', description: 'Word or sentence' })\n  value: string;\n\n  @ApiProperty({ example: 'Some explanation', description: 'Dictionary word/sentence description, with examples' })\n  description: string;\n\n  @ApiProperty({ example: Language.EN, description: 'Language code' })\n  language: Language;\n\n  @Exclude() // Excludes from validation and drops it from payload if present\n  id: number;\n\n  @Exclude()\n  source: string;\n\n  @Exclude()\n  status: STATUS;\n\n  @Exclude()\n  createdAt: Date;\n\n  @Exclude()\n  updatedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  static from(partial: Partial) {\n    return new CreateDictionaryResponse(partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTranslationRequest.html":{"url":"classes/CreateTranslationRequest.html","title":"class - CreateTranslationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTranslationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/request/create-translation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                description\n                            \n                            \n                                    \n                                    \n                                language\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                source\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Translation word/sentence description, with examples', required: false})@IsString()@IsOptional()@MaxLength(1024)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/create-translation.request.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code', enum: Language, required: true})@IsEnum(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/create-translation.request.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Source of the word/sentence, whether it's individually contributed by user, or from a dictionary', required: false, default: undefined})@IsString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/create-translation.request.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Explanation', description: 'Word or sentence', required: true})@IsString()@IsNotEmpty()@MinLength(1)@MaxLength(512)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/create-translation.request.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString, IsUUID, MaxLength, MinLength } from 'class-validator';\nimport { Language } from '../translation.enum';\n\nexport class CreateTranslationRequest {\n  @ApiProperty({ example: 'Explanation', description: 'Word or sentence', required: true })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(1)\n  @MaxLength(512)\n  value: string;\n\n  @ApiProperty({\n    example: 'Some explanation',\n    description: 'Translation word/sentence description, with examples',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @MaxLength(1024)\n  description?: string;\n\n  @ApiProperty({ example: Language.EN, description: 'Language code', enum: Language, required: true })\n  @IsEnum(Language)\n  language: Language;\n\n  @ApiProperty({\n    description: \"Source of the word/sentence, whether it's individually contributed by user, or from a dictionary\",\n    required: false,\n    default: null,\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n}\n\nexport class CreateTranslationRequestParam {\n  @ApiProperty({\n    example: '12345678-1234-1234-1234-123456789012',\n    description: 'UUID of the dictionary',\n    required: true,\n  })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTranslationRequestParam.html":{"url":"classes/CreateTranslationRequestParam.html","title":"class - CreateTranslationRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTranslationRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/request/create-translation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '12345678-1234-1234-1234-123456789012', description: 'UUID of the dictionary', required: true})@IsUUID('4')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/create-translation.request.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsOptional, IsString, IsUUID, MaxLength, MinLength } from 'class-validator';\nimport { Language } from '../translation.enum';\n\nexport class CreateTranslationRequest {\n  @ApiProperty({ example: 'Explanation', description: 'Word or sentence', required: true })\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(1)\n  @MaxLength(512)\n  value: string;\n\n  @ApiProperty({\n    example: 'Some explanation',\n    description: 'Translation word/sentence description, with examples',\n    required: false,\n  })\n  @IsString()\n  @IsOptional()\n  @MaxLength(1024)\n  description?: string;\n\n  @ApiProperty({ example: Language.EN, description: 'Language code', enum: Language, required: true })\n  @IsEnum(Language)\n  language: Language;\n\n  @ApiProperty({\n    description: \"Source of the word/sentence, whether it's individually contributed by user, or from a dictionary\",\n    required: false,\n    default: null,\n  })\n  @IsString()\n  @IsOptional()\n  source?: string;\n}\n\nexport class CreateTranslationRequestParam {\n  @ApiProperty({\n    example: '12345678-1234-1234-1234-123456789012',\n    description: 'UUID of the dictionary',\n    required: true,\n  })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTranslationResponse.html":{"url":"classes/CreateTranslationResponse.html","title":"class - CreateTranslationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTranslationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/response/create-translation.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                dictionary\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                from\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/translations/response/create-translation.response.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Dictionary word/sentence description, with examples'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UUID string', example: '12345678-1234-1234-1234-123456789012'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Hello there', description: 'Word or sentence'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/create-translation.response.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/response/create-translation.response.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         CreateTranslationResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Translation } from '../translation.entity';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { Exclude } from 'class-transformer';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Language } from '../translation.enum';\nimport { Dictionary } from '/src/dictionary/dictionary.entity';\n\nexport class CreateTranslationResponse {\n  @ApiProperty({ description: 'UUID string', example: '12345678-1234-1234-1234-123456789012' })\n  uuid: string;\n\n  @ApiProperty({ example: 'Hello there', description: 'Word or sentence' })\n  value: string;\n\n  @ApiProperty({ example: 'Some explanation', description: 'Dictionary word/sentence description, with examples' })\n  description: string;\n\n  @ApiProperty({ example: Language.EN, description: 'Language code' })\n  language: Language;\n\n  @Exclude()\n  id: number;\n\n  @Exclude()\n  source: string;\n\n  @Exclude()\n  status: STATUS;\n\n  @Exclude()\n  dictionary: Dictionary;\n\n  @Exclude()\n  createdAt: Date;\n\n  @Exclude()\n  updatedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  static from(partial: Partial) {\n    return new CreateTranslationResponse(partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/setup/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => config.get('database'),\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteDictionaryRequestParam.html":{"url":"classes/DeleteDictionaryRequestParam.html","title":"class - DeleteDictionaryRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteDictionaryRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/request/remove-dictionary.request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateDictionaryRequestParam\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dictionary UUID', required: true})@IsUUID('4')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateDictionaryRequestParam\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateDictionaryRequestParam:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateDictionaryRequestParam } from './update-dictionary.request';\n\nexport class DeleteDictionaryRequestParam extends UpdateDictionaryRequestParam {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteTranslationRequestParam.html":{"url":"classes/DeleteTranslationRequestParam.html","title":"class - DeleteTranslationRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteTranslationRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/request/remove-translation.request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            UpdateTranslationRequestParam\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dictionary UUID', required: true})@IsUUID('4')\n                        \n                    \n                \n                        \n                            \n                                Inherited from         UpdateTranslationRequestParam\n\n                            \n                        \n                    \n                        \n                                Defined in         UpdateTranslationRequestParam:16\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UpdateTranslationRequestParam } from './update-translation.request';\n\nexport class DeleteTranslationRequestParam extends UpdateTranslationRequestParam {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Dictionary.html":{"url":"entities/Dictionary.html","title":"entity - Dictionary","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Dictionary\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/dictionary.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                translations\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Language})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true, length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: STATUS, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Translation[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, translation => translation.dictionary, {nullable: true})@JoinColumn({name: 'translationId', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Generated('uuid')@Column({type: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 512})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/dictionary.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Generated, PrimaryGeneratedColumn, JoinColumn, OneToMany, Index } from 'typeorm';\nimport { Language } from '../translations/translation.enum';\nimport { Translation } from '../translations/translation.entity';\nimport { TimestampsInterface } from '/common/interfaces/timestamps.interface';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Column } from '/common/decorators/column.decorator';\nimport { CreateDateColumn } from '/common/decorators/create-date-column.decorator';\nimport { UpdateDateColumn } from '/common/decorators/update-date-column.decorator';\n\n@Entity({ name: 'Dictionary' })\n@Index(['uuid'], { unique: true })\nexport class Dictionary implements TimestampsInterface {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Generated('uuid')\n  @Column({ type: 'uuid' })\n  uuid: string;\n\n  @Column({ type: 'varchar', length: 512 })\n  value: string;\n\n  @Column({ type: 'text', nullable: true })\n  description: string;\n\n  @Column({ type: 'enum', enum: Language })\n  language: Language;\n\n  @Column({ type: 'varchar', nullable: true, length: 32 })\n  source: string;\n\n  @Column({ type: 'enum', enum: STATUS, default: STATUS.PENDING })\n  status: STATUS;\n\n  // Bidirectional relationship with TranslationEntity by specifying inverse side\n  @OneToMany(() => Translation, (translation) => translation.dictionary, { nullable: true })\n  @JoinColumn({ name: 'translationId', referencedColumnName: 'id' })\n  translations: Translation[];\n\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: 'timestamp' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/DictionaryController.html":{"url":"controllers/DictionaryController.html","title":"controller - DictionaryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  DictionaryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/dictionary.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                dictionary\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOneByUUID\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(requestBody: CreateDictionaryRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiProtected()@ApiBadRequestResponse()@Post('create')@HttpCode(HttpStatus.CREATED)@ApiCreatedResponse({type: CreateDictionaryResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/dictionary/dictionary.controller.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                requestBody\n                                            \n                                                            CreateDictionaryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(param: DeleteDictionaryRequestParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiProtected()@ApiBadRequestResponse()@HttpCode(HttpStatus.ACCEPTED)@Delete('delete/:uuid')@ApiAcceptedResponse({description: 'Returns ACCEPTED when successful'})@ApiUnprocessableEntityResponse({description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong'})\n                \n            \n\n                    \n                        \n                            Defined in src/dictionary/dictionary.controller.ts:104\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            DeleteDictionaryRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        findOneByUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUUID(param: FetchDictionaryRequestParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('find/:uuid')@ApiBadRequestResponse()@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, description: 'Returns OK when successful', type: FetchDictionaryResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/dictionary/dictionary.controller.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            FetchDictionaryRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(param: UpdateDictionaryRequestParam, requestBody: UpdateDictionaryRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiProtected()@ApiBadRequestResponse()@HttpCode(HttpStatus.NO_CONTENT)@Patch('update/:uuid')@ApiNoContentResponse({description: 'Returns NO_CONTENT when successful'})@ApiUnprocessableEntityResponse({description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong'})\n                \n            \n\n                    \n                        \n                            Defined in src/dictionary/dictionary.controller.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            UpdateDictionaryRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestBody\n                                            \n                                                            UpdateDictionaryRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  HttpStatus,\n  HttpCode,\n  Logger,\n  NotFoundException,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { DictionaryService } from './dictionary.service';\nimport { CreateDictionaryRequest } from './request/create-dictionary.request';\nimport { UpdateDictionaryRequest, UpdateDictionaryRequestParam } from './request/update-dictionary.request';\nimport { ApiAcceptedResponse, ApiNoContentResponse, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { DeleteDictionaryRequestParam } from './request/remove-dictionary.request';\nimport { CreateDictionaryResponse } from './response/create-dictionary.response';\nimport { FetchDictionaryRequestParam } from './request/fetch-dictionary.request';\nimport { FetchDictionaryResponse } from './response/fetch-dictionary.response';\nimport { ActivityService } from '../activity/activity.service';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Dictionary } from './dictionary.entity';\nimport { Env } from '/common/env';\nimport { ApiBadRequestResponse } from '/common/decorators/open-api-bad-request.decorator';\nimport { ApiProtected } from '/common/decorators/open-api-protected-route.decorator';\nimport { ApiCreatedResponse } from '/common/decorators/open-api-created-response.decorator';\nimport { ApiUnprocessableEntityResponse } from '/common/decorators/open-api-unprocessable-response.decorator';\n\n@ApiTags('Dictionary')\n@Controller('dictionary')\nexport class DictionaryController {\n  constructor(\n    private readonly dictionaryService: DictionaryService,\n    private readonly activityService: ActivityService,\n  ) {}\n\n  @Get('find/:uuid')\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({ status: HttpStatus.OK, description: 'Returns OK when successful', type: FetchDictionaryResponse })\n  async findOneByUUID(@Param() param: FetchDictionaryRequestParam): Promise {\n    const record = await this.dictionaryService.findOneBy(param.uuid);\n    if (!record) throw new NotFoundException('No record found with the given uuid');\n\n    return FetchDictionaryResponse.from(record);\n  }\n\n  @ApiProtected()\n  @ApiBadRequestResponse()\n  @Post('create')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiCreatedResponse({ type: CreateDictionaryResponse })\n  async create(@Body() requestBody: CreateDictionaryRequest): Promise {\n    // TODO: when user data is available change the createdBy to the user's id\n    const createdBy = -1;\n    const payload: Partial = {\n      ...requestBody,\n      ...(Env.isDev && { status: STATUS.ACTIVE }), // otherwise it will be set to PENDING by default\n    };\n\n    const created = await this.dictionaryService.create(payload);\n    await this.activityService.addDictionaryCreated({ createdBy, dictionaryUUID: created.uuid });\n\n    return CreateDictionaryResponse.from(created);\n  }\n\n  @ApiProtected()\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch('update/:uuid')\n  @ApiNoContentResponse({ description: 'Returns NO_CONTENT when successful' })\n  @ApiUnprocessableEntityResponse({ description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong' })\n  async update(\n    @Param() param: UpdateDictionaryRequestParam,\n    @Body() requestBody: UpdateDictionaryRequest,\n  ): Promise {\n    // TODO: when user data is available change the updatedBy to the user's id\n    const updatedBy = -1;\n\n    const oldValue = await this.dictionaryService.findOneBy(param.uuid);\n    if (!oldValue) throw new UnprocessableEntityException('No record found with the given uuid');\n\n    const updated = await this.dictionaryService.update(param.uuid, requestBody);\n    Logger.log(`The record has been updated. Affected rows: ${updated}`);\n\n    await this.activityService.addDictionaryUpdated({\n      updatedBy,\n      oldValue,\n      dictionaryUUID: param.uuid,\n    });\n\n    return void 0;\n  }\n\n  @ApiProtected()\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.ACCEPTED)\n  @Delete('delete/:uuid')\n  @ApiAcceptedResponse({ description: 'Returns ACCEPTED when successful' })\n  @ApiUnprocessableEntityResponse({ description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong' })\n  async delete(@Param() param: DeleteDictionaryRequestParam): Promise {\n    // TODO: when user data is available change the deletedBy to the user's id\n    const deletedBy = -1;\n\n    const deleted = await this.dictionaryService.markAsDeleted(param.uuid);\n    if (deleted.affected === 0) throw new UnprocessableEntityException('No record found with the given uuid');\n\n    Logger.log(`The record has been removed. Affected rows: ${deleted.affected}`);\n\n    await this.activityService.addDictionaryDeleted({ deletedBy, dictionaryUUID: param.uuid });\n\n    return void 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DictionaryCreated.html":{"url":"interfaces/DictionaryCreated.html","title":"interface - DictionaryCreated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DictionaryCreated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activity/interfaces/dictionary-activity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                        \n                                            dictionaryUUID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dictionaryUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dictionaryUUID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DictionaryActivityType = DictionaryCreated | DictionaryUpdated | DictionaryDeleted;\n\nexport interface DictionaryCreated {\n  createdBy: number;\n  dictionaryUUID: string;\n}\n\nexport interface DictionaryUpdated {\n  updatedBy: number;\n  oldValue: T;\n  dictionaryUUID: string;\n}\n\nexport interface DictionaryDeleted {\n  deletedBy: number;\n  dictionaryUUID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DictionaryDeleted.html":{"url":"interfaces/DictionaryDeleted.html","title":"interface - DictionaryDeleted","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DictionaryDeleted\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activity/interfaces/dictionary-activity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            deletedBy\n                                        \n                                \n                                \n                                        \n                                            dictionaryUUID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deletedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deletedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dictionaryUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dictionaryUUID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DictionaryActivityType = DictionaryCreated | DictionaryUpdated | DictionaryDeleted;\n\nexport interface DictionaryCreated {\n  createdBy: number;\n  dictionaryUUID: string;\n}\n\nexport interface DictionaryUpdated {\n  updatedBy: number;\n  oldValue: T;\n  dictionaryUUID: string;\n}\n\nexport interface DictionaryDeleted {\n  deletedBy: number;\n  dictionaryUUID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DictionaryModule.html":{"url":"modules/DictionaryModule.html","title":"module - DictionaryModule","body":"\n                   \n\n\n\n\n    Modules\n    DictionaryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DictionaryModule\n\n\n\ncluster_DictionaryModule_imports\n\n\n\ncluster_DictionaryModule_exports\n\n\n\ncluster_DictionaryModule_providers\n\n\n\n\nActivityModule\n\nActivityModule\n\n\n\nDictionaryModule\n\nDictionaryModule\n\nDictionaryModule -->\n\nActivityModule->DictionaryModule\n\n\n\n\n\nDictionaryService \n\nDictionaryService \n\nDictionaryService  -->\n\nDictionaryModule->DictionaryService \n\n\n\n\n\nDictionaryService\n\nDictionaryService\n\nDictionaryModule -->\n\nDictionaryService->DictionaryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dictionary/dictionary.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DictionaryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            DictionaryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActivityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DictionaryService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DictionaryService } from './dictionary.service';\nimport { DictionaryController } from './dictionary.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Dictionary } from './dictionary.entity';\nimport { ActivityModule } from '../activity/activity.module';\n\n@Module({\n  imports: [ActivityModule, TypeOrmModule.forFeature([Dictionary])],\n  controllers: [DictionaryController],\n  providers: [DictionaryService],\n  exports: [DictionaryService],\n})\nexport class DictionaryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DictionaryService.html":{"url":"injectables/DictionaryService.html","title":"injectable - DictionaryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DictionaryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/dictionary.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOneBy\n                            \n                            \n                                markAsActive\n                            \n                            \n                                markAsDeleted\n                            \n                            \n                                searchByKeyword\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dictionary: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/dictionary/dictionary.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dictionary\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/dictionary.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/dictionary.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsActive\n                        \n                    \n                \n            \n            \n                \nmarkAsActive(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/dictionary.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsDeleted\n                        \n                    \n                \n            \n            \n                \nmarkAsDeleted(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/dictionary.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByKeyword\n                        \n                    \n                \n            \n            \n                \nsearchByKeyword(keyword: string, language: Language, take: number, skip: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/dictionary.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keyword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                language\n                                            \n                                                            Language\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                take\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                skip\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(uuid: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/dictionary.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Dictionary } from './dictionary.entity';\nimport { ILike, Repository } from 'typeorm';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Language } from '/src/translations/translation.enum';\n\n@Injectable()\nexport class DictionaryService {\n  constructor(@InjectRepository(Dictionary) private readonly dictionary: Repository) {}\n\n  findOneBy(uuid: string) {\n    return this.dictionary.findOne({\n      where: { uuid, status: STATUS.ACTIVE },\n      select: ['id', 'uuid', 'value', 'description', 'language', 'updatedAt'],\n      relations: { translations: true },\n      order: { updatedAt: 'DESC' },\n    });\n  }\n\n  searchByKeyword(keyword: string, language: Language, take: number, skip: number) {\n    return this.dictionary.find({\n      relations: ['translations'],\n      select: ['id', 'uuid', 'value', 'description', 'language'],\n      where: {\n        // ILike does case-insensitive search\n        value: ILike(`${keyword}%`),\n        status: STATUS.ACTIVE,\n        language,\n        translations: {\n          status: STATUS.ACTIVE,\n        },\n      },\n      take,\n      skip,\n    });\n  }\n\n  create(payload: Partial) {\n    return this.dictionary.save(payload);\n  }\n\n  update(uuid: string, payload: Partial) {\n    return this.dictionary.update({ uuid }, payload);\n  }\n\n  markAsDeleted(uuid: string) {\n    return this.dictionary.update({ uuid }, { status: STATUS.DELETED });\n  }\n\n  markAsActive(uuid: string) {\n    return this.dictionary.update({ uuid }, { status: STATUS.ACTIVE });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DictionaryUpdated.html":{"url":"interfaces/DictionaryUpdated.html","title":"interface - DictionaryUpdated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DictionaryUpdated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/activity/interfaces/dictionary-activity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            dictionaryUUID\n                                        \n                                \n                                \n                                        \n                                            oldValue\n                                        \n                                \n                                \n                                        \n                                            updatedBy\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dictionaryUUID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dictionaryUUID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldValue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oldValue:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedBy:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type DictionaryActivityType = DictionaryCreated | DictionaryUpdated | DictionaryDeleted;\n\nexport interface DictionaryCreated {\n  createdBy: number;\n  dictionaryUUID: string;\n}\n\nexport interface DictionaryUpdated {\n  updatedBy: number;\n  oldValue: T;\n  dictionaryUUID: string;\n}\n\nexport interface DictionaryDeleted {\n  deletedBy: number;\n  dictionaryUUID: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EntityException.html":{"url":"classes/EntityException.html","title":"class - EntityException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EntityException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/entity.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                code\n                            \n                            \n                                    Readonly\n                                details\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                extractDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(exception: ErrorPayloadType)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/entity.exception.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        exception\n                                                  \n                                                        \n                                                                        ErrorPayloadType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/entity.exception.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/entity.exception.ts:17\n                        \n                    \n\n            \n                \n                    It is meant to be logged internally, not to be exposed to the user.\nOn the other hand, the message property is meant to be exposed to the user.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractDetails\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractDetails(exception: ErrorPayloadType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/exceptions/entity.exception.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                            ErrorPayloadType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Record\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\n\nexport type ErrorPayloadType = {\n  message: string;\n  error?: unknown | null;\n  code?: HttpStatus;\n};\n\nexport class EntityException extends Error {\n  /**\n   * @description Error details\n   *\n   * It is meant to be logged internally, not to be exposed to the user.\n   *\n   * On the other hand, the `message` property is meant to be exposed to the user.\n   */\n  readonly details: Record;\n  readonly code?: number;\n\n  constructor(exception: ErrorPayloadType) {\n    super(exception.message);\n\n    this.code = exception.code;\n    this.name = this.constructor.name;\n    this.details = this.extractDetails(exception);\n\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n  private extractDetails(exception: ErrorPayloadType): Record {\n    const extracted = {\n      message: this.message,\n      error: 'Empty',\n    };\n    if (exception.error instanceof Error) extracted.error = exception.error.message;\n    else if (typeof exception.error === 'string') extracted.error = exception.error;\n    else if (typeof exception.error === 'object') extracted.error = JSON.stringify(exception.error);\n\n    return extracted;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Env.html":{"url":"classes/Env.html","title":"class - Env","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Env\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/env.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    NodeEnv\n                                \n                                \n                                    isDev\n                                \n                                \n                                    isProd\n                                \n                                \n                                    isTest\n                                \n                                \n                                    isE2E\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        NodeEnv\n                    \n                \n\n                \n                    \n                        getNodeEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/common/env.ts:4\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDev\n                    \n                \n\n                \n                    \n                        getisDev()\n                    \n                \n                            \n                                \n                                    Defined in src/common/env.ts:12\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isProd\n                    \n                \n\n                \n                    \n                        getisProd()\n                    \n                \n                            \n                                \n                                    Defined in src/common/env.ts:16\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTest\n                    \n                \n\n                \n                    \n                        getisTest()\n                    \n                \n                            \n                                \n                                    Defined in src/common/env.ts:23\n                                \n                            \n                    \n                        \n                                Environment for unit tests\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isE2E\n                    \n                \n\n                \n                    \n                        getisE2E()\n                    \n                \n                            \n                                \n                                    Defined in src/common/env.ts:30\n                                \n                            \n                    \n                        \n                                Environment for E2E tests\n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { NodeEnv } from './types';\n\nexport class Env {\n  public static get NodeEnv(): NodeEnv {\n    const nodeEnv = process.env.NODE_ENV || '';\n    const env = nodeEnv.trim() as NodeEnv;\n    if (!env) throw new TypeError('NODE_ENV is not defined');\n\n    return env;\n  }\n\n  public static get isDev() {\n    return Env.NodeEnv === NodeEnv.DEVELOPMENT;\n  }\n\n  public static get isProd() {\n    return Env.NodeEnv === NodeEnv.PRODUCTION;\n  }\n\n  /**\n   * Environment for unit tests\n   */\n  public static get isTest() {\n    return Env.NodeEnv === NodeEnv.TEST;\n  }\n\n  /**\n   * Environment for E2E tests\n   */\n  public static get isE2E() {\n    return process.env.E2E === NodeEnv.E2E;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/error.response.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                details\n                            \n                            \n                                    \n                                message\n                            \n                            \n                                    \n                                statusCode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                fromError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/common/exceptions/error.response.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        details\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Error details', type: Object, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/error.response.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Error message', type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/error.response.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'HTTP status code', type: Number})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/exceptions/error.response.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        fromError\n                        \n                    \n                \n            \n            \n                \n                        \n                    fromError(error: Error)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/exceptions/error.response.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ErrorResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class ErrorResponse {\n  @ApiProperty({ description: 'HTTP status code', type: Number })\n  statusCode: number;\n\n  @ApiProperty({ description: 'Error message', type: String })\n  message: string;\n\n  @ApiProperty({ description: 'Error details', type: Object, required: false })\n  details: Record | null;\n\n  constructor(payload: Partial) {\n    Object.assign(this, payload);\n  }\n\n  static fromError(error: Error): ErrorResponse {\n    return new ErrorResponse(error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionInterceptor.html":{"url":"injectables/ExceptionInterceptor.html","title":"injectable - ExceptionInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/exception-handler.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatError\n                            \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatError\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/exception-handler.interceptor.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/exception-handler.interceptor.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { catchError, Observable } from 'rxjs';\nimport { Env } from '/common/env';\nimport { ExpressRequest } from '/common/types';\n\n@Injectable()\nexport class ExceptionInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n\n    return next.handle().pipe(\n      catchError((error) => {\n        request.logger.error(this.formatError(error) + '\\n' + error.stack);\n\n        throw error;\n      }),\n    );\n  }\n\n  private formatError(error: any) {\n    if (Env.isProd) return JSON.stringify(error);\n\n    return JSON.stringify(error, null, 2);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchDictionaryRequestParam.html":{"url":"classes/FetchDictionaryRequestParam.html","title":"class - FetchDictionaryRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchDictionaryRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/request/fetch-dictionary.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dictionary id', required: true})@IsUUID('4')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/fetch-dictionary.request.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class FetchDictionaryRequestParam {\n  @ApiProperty({ description: 'Dictionary id', required: true })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchDictionaryResponse.html":{"url":"classes/FetchDictionaryResponse.html","title":"class - FetchDictionaryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchDictionaryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/response/fetch-dictionary.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateDictionaryResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                translations\n                            \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                from\n                            \n                            \n                                    Static\n                                from\n                            \n                            \n                                    Static\n                                from\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/dictionary/response/fetch-dictionary.response.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TranslationProperty[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined})@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/response/fetch-dictionary.response.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:30\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Dictionary word/sentence description, with examples'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:15\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:21\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:24\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:27\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:33\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UUID string', example: '12345678-1234-1234-1234-123456789012'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Hello there', description: 'Word or sentence'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateDictionaryResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateDictionaryResponse:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CreateDictionaryResponse\n\n                        \n                    \n                    \n                        \n                                Defined in         CreateDictionaryResponse:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FetchDictionaryResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/response/fetch-dictionary.response.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FetchDictionaryResponse[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/dictionary/response/fetch-dictionary.response.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Dictionary } from '../dictionary.entity';\nimport { CreateDictionaryResponse } from './create-dictionary.response';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { TranslationProperty } from '/src/translations/response/properties/translation.property';\nimport { ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class FetchDictionaryResponse extends CreateDictionaryResponse {\n  @ApiProperty({ type: [TranslationProperty] })\n  @ValidateNested({ each: true })\n  @Type(() => TranslationProperty)\n  translations: TranslationProperty[];\n\n  constructor(partial: Partial) {\n    super(partial);\n    Object.assign(this, partial);\n  }\n\n  static from(partial: Partial): FetchDictionaryResponse;\n  static from(partial: Partial[]): FetchDictionaryResponse[];\n  static from(payload: unknown): unknown {\n    if (!Array.isArray(payload)) return new FetchDictionaryResponse(payload);\n\n    return payload.map(FetchDictionaryResponse.from);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FetchTranslationResponse.html":{"url":"classes/FetchTranslationResponse.html","title":"class - FetchTranslationResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FetchTranslationResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/response/fetch-translation.response.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            CreateTranslationResponse\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                dictionary\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                from\n                            \n                            \n                                    Static\n                                from\n                            \n                            \n                                    Static\n                                from\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/translations/response/fetch-translation.response.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:34\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Dictionary word/sentence description, with examples'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        dictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:31\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:25\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:28\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:37\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UUID string', example: '12345678-1234-1234-1234-123456789012'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Hello there', description: 'Word or sentence'})\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CreateTranslationResponse\n\n                            \n                        \n                    \n                        \n                                Defined in         CreateTranslationResponse:13\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Inherited from         CreateTranslationResponse\n\n                        \n                    \n                    \n                        \n                                Defined in         CreateTranslationResponse:11\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FetchTranslationResponse\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/response/fetch-translation.response.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         FetchTranslationResponse[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(payload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/response/fetch-translation.response.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Translation } from '../translation.entity';\nimport { Dictionary } from '/src/dictionary/dictionary.entity';\nimport { CreateTranslationResponse } from './create-translation.response';\n\nexport class FetchTranslationResponse extends CreateTranslationResponse {\n  constructor(partial: Partial) {\n    super(partial);\n    Object.assign(this, partial);\n  }\n\n  static from(partial: Partial): FetchTranslationResponse;\n  static from(partial: Partial[]): FetchTranslationResponse[];\n  static from(payload: unknown): unknown {\n    if (!Array.isArray(payload)) return new FetchTranslationResponse(payload);\n\n    return payload.map(FetchTranslationResponse.from);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Public\n                                getHealth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        getHealth\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHealth()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOkResponse({description: 'Health check', schema: undefined})\n                \n            \n\n                    \n                        \n                            Defined in src/health/health.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { status: string; }\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Health')\n@Controller({\n  path: 'health',\n  version: '1',\n})\nexport class HealthController {\n  @Get()\n  @ApiOkResponse({\n    description: 'Health check',\n    schema: {\n      type: 'object',\n      example: {\n        status: 'alive',\n      },\n      properties: {\n        status: {\n          type: 'string',\n          example: 'alive',\n        },\n      },\n    },\n  })\n  public getHealth() {\n    return {\n      status: 'alive',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\n\n@Module({\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionsFilter.html":{"url":"classes/HttpExceptionsFilter.html","title":"class - HttpExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpAdapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exception.filter.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpAdapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exception.filter.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter, HttpException, HttpStatus, Logger } from '@nestjs/common';\nimport { HttpAdapterHost } from '@nestjs/core';\nimport { CorsException } from '../exceptions/cors.exception';\nimport { EntityException } from '/common/exceptions/entity.exception';\nimport { ErrorResponse } from '/common/exceptions/error.response';\n\n@Catch()\nexport class HttpExceptionsFilter implements ExceptionFilter {\n  constructor(private readonly httpAdapterHost: HttpAdapterHost) {}\n\n  catch(exception: unknown, host: ArgumentsHost): void {\n    // In certain situations `httpAdapter` might not be available in the\n    // constructor method, thus we should resolve it here.\n    const { httpAdapter } = this.httpAdapterHost;\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    if (exception instanceof CorsException) {\n      Logger.warn(exception.message, 'Exception.filter(CORS)');\n      return httpAdapter.reply(response, void 0, HttpStatus.NO_CONTENT);\n    }\n\n    const responseBody = new ErrorResponse({\n      statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n      message: 'Internal Server Error',\n    });\n\n    if (exception instanceof HttpException) {\n      const error = exception.getResponse() as any; // Returns class-validator error\n      const errorDetails = error.message || null;\n      const errorMessage = error.error || exception.message;\n      responseBody.statusCode = exception.getStatus();\n      responseBody.message = errorMessage;\n      responseBody.details = errorDetails;\n    }\n\n    if (exception instanceof EntityException) {\n      responseBody.message = exception.message;\n      responseBody.statusCode = exception.code;\n      responseBody.details = exception.details;\n    }\n\n    httpAdapter.reply(response, responseBody, responseBody.statusCode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestInterceptor.html":{"url":"injectables/RequestInterceptor.html","title":"injectable - RequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/request.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/request.interceptor.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, Logger, NestInterceptor } from '@nestjs/common';\nimport { RequestService } from '../setup/request';\nimport { Observable } from 'rxjs';\nimport { Env } from '../env';\nimport chalk from 'chalk';\nimport { ExpressRequest } from '/common/types';\n\n@Injectable()\nexport class RequestInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    const request = context.switchToHttp().getRequest();\n    if (!RequestService.hasRequestId(request)) {\n      RequestService.injectRequestId(request);\n    }\n\n    const response = context.switchToHttp().getResponse();\n    const requestService = new RequestService(request);\n    const logger = new Logger(requestService.getRequestId());\n    const started = Date.now();\n\n    // Inject logger into request\n    request.logger = logger;\n\n    const whiteListedPaths = ['health', 'docs', 'swagger-ui'];\n    const isWhiteListed = whiteListedPaths.some((path) => request.url.includes(path));\n\n    const text = {\n      started: 'Started',\n      completed: 'Completed',\n      payload: 'Payload',\n    };\n    if (!Env.isProd) {\n      const randomColors = [\n        chalk.underline,\n        chalk.green.underline,\n        chalk.yellow.underline,\n        chalk.blue.underline,\n        chalk.magenta.underline,\n        chalk.cyan.underline,\n        chalk.white.underline,\n        chalk.gray.underline,\n      ];\n\n      const randomColor = randomColors[Math.floor(Math.random() * randomColors.length)];\n      text.started = randomColor(text.started);\n      text.completed = randomColor(text.completed);\n      text.payload = randomColor(text.payload);\n    }\n\n    const { ip, method, originalUrl } = request;\n    const userAgent = (Env.isProd && request.get('user-agent')) || '';\n\n    response.on('finish', () => {\n      const ended = Date.now();\n      const delta = ended - started;\n      const { statusCode: code } = response;\n      const logText = `${text.completed} ${method} ${code} in ${delta}ms ${originalUrl} - ${userAgent} ${ip}`;\n      isWhiteListed || logger.log(logText);\n    });\n\n    isWhiteListed || logger.log(`${text.started} ${method} ${originalUrl} - ${userAgent} ${ip}`);\n    isWhiteListed || logger.log(`${text.payload} ${JSON.stringify(request.body)}`);\n\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RequestModule.html":{"url":"modules/RequestModule.html","title":"module - RequestModule","body":"\n                   \n\n\n\n\n    Modules\n    RequestModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_exports\n\n\n\n\nRequestService \n\nRequestService \n\n\n\nRequestModule\n\nRequestModule\n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/setup/request/request.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Exports\n                    \n                        \n                            RequestService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module, Scope } from '@nestjs/common';\nimport { RequestService } from './request.service';\nimport { REQUEST } from '@nestjs/core';\n\n@Global()\n@Module({\n  providers: [\n    {\n      provide: RequestService,\n      useFactory: (request) => new RequestService(request),\n      inject: [REQUEST],\n      scope: Scope.REQUEST,\n    },\n  ],\n  exports: [RequestService],\n})\nexport class RequestModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/setup/request/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                REQUEST_ID_HEADER\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                validationSchema\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                forgeReqId\n                            \n                            \n                                    Public\n                                getRequestId\n                            \n                            \n                                    Static\n                                hasRequestId\n                            \n                            \n                                    Static\n                                injectRequestId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: Request)\n                    \n                \n                        \n                            \n                                Defined in src/common/setup/request/request.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    Request\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        forgeReqId\n                        \n                    \n                \n            \n            \n                \n                        \n                    forgeReqId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/request/request.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getRequestId\n                        \n                    \n                \n            \n            \n                \n                        \n                    getRequestId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/request/request.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        hasRequestId\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasRequestId(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/request/request.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        injectRequestId\n                        \n                    \n                \n            \n            \n                \n                        \n                    injectRequestId(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/request/request.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        REQUEST_ID_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : RequestHeader.RequestId\n                    \n                \n                    \n                        \n                                Defined in src/common/setup/request/request.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        validationSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Joi.string().min(16).max(64)\n                    \n                \n                    \n                        \n                                Defined in src/common/setup/request/request.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import Joi from 'joi';\nimport { Request } from 'express';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Injectable } from '@nestjs/common';\nimport { RequestHeader } from './request.enum';\n\n@Injectable()\nexport class RequestService {\n  private static readonly REQUEST_ID_HEADER = RequestHeader.RequestId;\n  private static readonly validationSchema = Joi.string().min(16).max(64);\n\n  public constructor(private readonly request: Request) {}\n\n  private static forgeReqId(): string {\n    return uuidv4();\n  }\n\n  public static hasRequestId(request: Request): boolean {\n    const reqId = request.get(RequestService.REQUEST_ID_HEADER);\n\n    if (!reqId) return false;\n\n    return !RequestService.validationSchema.validate(reqId).error;\n  }\n\n  public static injectRequestId(request: Request): void {\n    request.headers[RequestService.REQUEST_ID_HEADER] = RequestService.forgeReqId();\n  }\n\n  public getRequestId(): string {\n    return this.request.headers[RequestService.REQUEST_ID_HEADER] as string;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SearchController.html":{"url":"controllers/SearchController.html","title":"controller - SearchController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SearchController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/search/search.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                search\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                searchByKeyword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        searchByKeyword\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchByKeyword(query: SearchDictionaryRequestParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiBadRequestResponse()@HttpCode(HttpStatus.OK)@ApiResponse({status: undefined, description: 'Returns OK when successful', type: FetchDictionaryResponse, isArray: true})\n                \n            \n\n                    \n                        \n                            Defined in src/search/search.controller.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                query\n                                            \n                                                            SearchDictionaryRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, HttpCode, HttpStatus, Query } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { FetchDictionaryResponse } from '../dictionary/response/fetch-dictionary.response';\nimport { DictionaryService } from '../dictionary/dictionary.service';\nimport { SearchDictionaryRequestParam } from './request/search-dictionary.request';\nimport { ApiBadRequestResponse } from '/common/decorators/open-api-bad-request.decorator';\n\n@ApiTags('Search')\n@Controller('search')\nexport class SearchController {\n  constructor(private readonly dictionaryService: DictionaryService) {}\n\n  @Get()\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.OK)\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: 'Returns OK when successful',\n    type: FetchDictionaryResponse,\n    isArray: true,\n  })\n  async searchByKeyword(@Query() query: SearchDictionaryRequestParam): Promise {\n    const records = await this.dictionaryService.searchByKeyword(query.keyword, query.language, query.take, query.skip);\n\n    return FetchDictionaryResponse.from(records);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchDictionaryRequestParam.html":{"url":"classes/SearchDictionaryRequestParam.html","title":"class - SearchDictionaryRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchDictionaryRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/search/request/search-dictionary.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                keyword\n                            \n                            \n                                    \n                                    \n                                language\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                skip\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                take\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        keyword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'What keyword to use', required: true})@IsNotEmpty()@MinLength(1)@MaxLength(32)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/search/request/search-dictionary.request.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'What language to use', required: true, enum: Language})@IsEnum(Language)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/search/request/search-dictionary.request.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                        skip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: 0, description: 'Records to skip'})@Type(undefined)@IsNumber()@Min(0)@Max(256)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/search/request/search-dictionary.request.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                        take\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 32\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: 32, description: 'How many MAX records to retrieve'})@Type(undefined)@Max(128)@IsPositive()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/search/request/search-dictionary.request.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEnum, IsNotEmpty, IsNumber, IsOptional, IsPositive, Max, MaxLength, Min, MinLength } from 'class-validator';\nimport { Language } from '/src/translations/translation.enum';\nimport { Type } from 'class-transformer';\n\nexport class SearchDictionaryRequestParam {\n  @ApiProperty({ description: 'What keyword to use', required: true })\n  @IsNotEmpty()\n  @MinLength(1)\n  @MaxLength(32)\n  keyword: string;\n\n  @ApiProperty({ description: 'What language to use', required: true, enum: Language })\n  @IsEnum(Language)\n  language: Language;\n\n  @ApiProperty({ required: false, default: 32, description: 'How many MAX records to retrieve' })\n  @Type(() => Number)\n  @Max(128)\n  @IsPositive()\n  @IsOptional()\n  take: number = 32;\n\n  @ApiProperty({ required: false, default: 0, description: 'Records to skip' })\n  @Type(() => Number)\n  @IsNumber()\n  @Min(0)\n  @Max(256)\n  @IsOptional()\n  skip: number = 0;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SearchModule.html":{"url":"modules/SearchModule.html","title":"module - SearchModule","body":"\n                   \n\n\n\n\n    Modules\n    SearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SearchModule\n\n\n\ncluster_SearchModule_imports\n\n\n\n\nActivityModule\n\nActivityModule\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nActivityModule->SearchModule\n\n\n\n\n\nDictionaryModule\n\nDictionaryModule\n\nSearchModule -->\n\nDictionaryModule->SearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/search/search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SearchController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActivityModule\n                        \n                        \n                            DictionaryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SearchController } from './search.controller';\nimport { ActivityModule } from '../activity/activity.module';\nimport { DictionaryModule } from '../dictionary/dictionary.module';\n\n@Module({\n  imports: [ActivityModule, DictionaryModule],\n  controllers: [SearchController],\n})\nexport class SearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Seed.html":{"url":"entities/Seed.html","title":"entity - Seed","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Seed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/setup/seeder/entity/seeder.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                timestamp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/setup/seeder/entity/seeder.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 128})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/setup/seeder/entity/seeder.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        timestamp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/setup/seeder/entity/seeder.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, PrimaryGeneratedColumn } from 'typeorm';\nimport { Column } from '/common/decorators/column.decorator';\nimport { CreateDateColumn } from '/common/decorators/create-date-column.decorator';\n\n@Entity({ name: 'Seeds' })\nexport class Seed {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ type: 'varchar', length: 128 })\n  name: string;\n\n  @CreateDateColumn({ type: 'timestamp' })\n  timestamp: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeederModule.html":{"url":"modules/SeederModule.html","title":"module - SeederModule","body":"\n                   \n\n\n\n\n    Modules\n    SeederModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\n\n\nAddDefaultValuesForDevelopment\n\nAddDefaultValuesForDevelopment\n\nSeederModule -->\n\nAddDefaultValuesForDevelopment->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/setup/seeder/seeder.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddDefaultValuesForDevelopment\n                        \n                        \n                            SeederService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SeederService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeederService } from './service/seeder.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Seed } from './entity/seeder.entity';\nimport { Dictionary } from '/src/dictionary/dictionary.entity';\nimport { Translation } from '/src/translations/translation.entity';\nimport { AddDefaultValuesForDevelopment } from './seeds/AddDefaultValuesForDevelopment';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Seed, Dictionary, Translation])],\n  providers: [SeederService, AddDefaultValuesForDevelopment],\n  exports: [SeederService],\n})\nexport class SeederModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SeederService.html":{"url":"injectables/SeederService.html","title":"injectable - SeederService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SeederService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/setup/seeder/service/seeder.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onApplicationBootstrap\n                            \n                            \n                                    Async\n                                seed\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addDevelopmentValues: AddDefaultValuesForDevelopment)\n                    \n                \n                        \n                            \n                                Defined in src/common/setup/seeder/service/seeder.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addDevelopmentValues\n                                                  \n                                                        \n                                                                        AddDefaultValuesForDevelopment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationBootstrap\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationBootstrap()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/seeder/service/seeder.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        seed\n                        \n                    \n                \n            \n            \n                \n                        \n                    seed()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/seeder/service/seeder.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('SeederService')\n                    \n                \n                    \n                        \n                                Defined in src/common/setup/seeder/service/seeder.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, OnApplicationBootstrap } from '@nestjs/common';\nimport { AddDefaultValuesForDevelopment } from '../seeds/AddDefaultValuesForDevelopment';\nimport { Seeds } from '/common/setup/seeder/abstract/BaseSeed';\n\n@Injectable()\nexport class SeederService implements OnApplicationBootstrap {\n  private readonly logger = new Logger('SeederService');\n\n  constructor(private readonly addDevelopmentValues: AddDefaultValuesForDevelopment) {}\n\n  async onApplicationBootstrap() {\n    return this.seed();\n  }\n\n  async seed() {\n    // When there is a new seed, add it here\n    const seeds: Seeds[] = [this.addDevelopmentValues];\n\n    for (const seed of seeds) {\n      if (await seed.hasRun()) continue;\n\n      try {\n        await seed.run();\n      } catch (error: unknown) {\n        const errMessage = error instanceof Error ? error.message : JSON.stringify(error);\n        this.logger.error(`[Seed][${seed.name}] Operation has been failed with error: ${errMessage}!`);\n        continue;\n      }\n\n      await seed.markAsRun();\n      this.logger.log(`[Seed][${seed.name}] Operation has been run!`);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Seeds.html":{"url":"injectables/Seeds.html","title":"injectable - Seeds","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Seeds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/setup/seeder/abstract/BaseSeed.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hasRun\n                            \n                            \n                                    Async\n                                markAsRun\n                            \n                            \n                                    Abstract\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(seedRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/common/setup/seeder/abstract/BaseSeed.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        seedRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        hasRun\n                        \n                    \n                \n            \n            \n                \n                        \n                    hasRun()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/seeder/abstract/BaseSeed.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        markAsRun\n                        \n                    \n                \n            \n            \n                \n                        \n                    markAsRun()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/seeder/abstract/BaseSeed.ts:14\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        run\n                        \n                    \n                \n            \n            \n                \n                        \n                    run()\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/setup/seeder/abstract/BaseSeed.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/common/setup/seeder/abstract/BaseSeed.ts:10\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Seed } from '../entity/seeder.entity';\n\n@Injectable()\nexport abstract class Seeds {\n  protected constructor(@InjectRepository(Seed) protected readonly seedRepository: Repository) {}\n\n  abstract get name(): string;\n\n  abstract run(): Promise;\n\n  async markAsRun(): Promise {\n    await this.seedRepository.insert({ name: this.name });\n  }\n\n  async hasRun(): Promise {\n    return (await this.seedRepository.count({ where: { name: this.name } })) > 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SetupModule.html":{"url":"modules/SetupModule.html","title":"module - SetupModule","body":"\n                   \n\n\n\n\n    Modules\n    SetupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SetupModule\n\n\n\ncluster_SetupModule_imports\n\n\n\n\nConfigModule\n\nConfigModule\n\n\n\nSetupModule\n\nSetupModule\n\nSetupModule -->\n\nConfigModule->SetupModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nSetupModule -->\n\nDatabaseModule->SetupModule\n\n\n\n\n\nRequestModule\n\nRequestModule\n\nSetupModule -->\n\nRequestModule->SetupModule\n\n\n\n\n\nSeederModule\n\nSeederModule\n\nSetupModule -->\n\nSeederModule->SetupModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/setup/setup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ConfigModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            RequestModule\n                        \n                        \n                            SeederModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RequestModule } from './request/request.module';\nimport { ConfigModule } from './config/config.module';\nimport { DatabaseModule } from './database/database.module';\nimport { SeederModule } from './seeder/seeder.module';\n\n@Module({\n  imports: [ConfigModule, RequestModule, DatabaseModule, SeederModule],\n})\nexport class SetupModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimestampsEntity.html":{"url":"classes/TimestampsEntity.html","title":"class - TimestampsEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimestampsEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/entities/timestamps.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            TimestampsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                    \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2020-01-01T00:00:00.000Z'})@CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/timestamps.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: '2022-04-25T08:34:33.315Z'})@UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/entities/timestamps.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { TimestampsInterface } from '../interfaces/timestamps.interface';\nimport { CreateDateColumn } from '/common/decorators/create-date-column.decorator';\nimport { UpdateDateColumn } from '/common/decorators/update-date-column.decorator';\n\nexport abstract class TimestampsEntity implements TimestampsInterface {\n  @ApiProperty({ example: '2020-01-01T00:00:00.000Z' })\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt: Date;\n\n  @ApiProperty({ example: '2022-04-25T08:34:33.315Z' })\n  @UpdateDateColumn({ type: 'timestamp' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TimestampsInterface.html":{"url":"interfaces/TimestampsInterface.html","title":"interface - TimestampsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TimestampsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/timestamps.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TimestampsInterface {\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Translation.html":{"url":"entities/Translation.html","title":"entity - Translation","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Translation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/translation.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                    \n                                dictionary\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        dictionary\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Dictionary\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, dictionary => dictionary.translations, {nullable: false})@JoinColumn({name: 'dictionaryId', referencedColumnName: 'id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: Language})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', nullable: true, length: 32})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'enum', enum: STATUS, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Generated('uuid')@Column({type: 'uuid'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'varchar', length: 512})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/translation.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Generated, Index, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { Language } from './translation.enum';\nimport { Dictionary } from '../dictionary/dictionary.entity';\nimport { TimestampsInterface } from '/common/interfaces/timestamps.interface';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Column } from '/common/decorators/column.decorator';\nimport { CreateDateColumn } from '/common/decorators/create-date-column.decorator';\nimport { UpdateDateColumn } from '/common/decorators/update-date-column.decorator';\n\n@Entity({ name: 'Translations' })\n@Index(['uuid'], { unique: true })\nexport class Translation implements TimestampsInterface {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Generated('uuid')\n  @Column({ type: 'uuid' })\n  uuid: string;\n\n  @Column({ type: 'varchar', length: 512 })\n  value: string;\n\n  @Column({ type: 'text', nullable: true })\n  description: string;\n\n  @Column({ type: 'enum', enum: Language })\n  language: Language;\n\n  @Column({ type: 'varchar', nullable: true, length: 32 })\n  source: string;\n\n  @Column({ type: 'enum', enum: STATUS, default: STATUS.PENDING })\n  status: STATUS;\n\n  // Bidirectional relationship with DictionaryEntity by specifying inverse side\n  @ManyToOne(() => Dictionary, (dictionary) => dictionary.translations, { nullable: false })\n  @JoinColumn({ name: 'dictionaryId', referencedColumnName: 'id' })\n  dictionary: Dictionary;\n\n  @CreateDateColumn({ type: 'timestamp' })\n  createdAt: Date;\n\n  @UpdateDateColumn({ type: 'timestamp' })\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TranslationController.html":{"url":"controllers/TranslationController.html","title":"controller - TranslationController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TranslationController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/translation.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                translation\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                findOneByUUID\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(param: CreateTranslationRequestParam, requestBody: CreateTranslationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiProtected()@ApiBadRequestResponse()@Post('create/:uuid')@HttpCode(HttpStatus.CREATED)@ApiUnprocessableEntityResponse({description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong'})@ApiCreatedResponse({type: CreateDictionaryResponse, description: 'Returns CREATED when successful'})\n                \n            \n\n                    \n                        \n                            Defined in src/translations/translation.controller.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            CreateTranslationRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestBody\n                                            \n                                                            CreateTranslationRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(param: DeleteTranslationRequestParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiProtected()@ApiBadRequestResponse()@HttpCode(HttpStatus.ACCEPTED)@Delete('delete/:uuid')@ApiAcceptedResponse({description: 'Returns ACCEPTED when successful'})@ApiUnprocessableEntityResponse({description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong'})\n                \n            \n\n                    \n                        \n                            Defined in src/translations/translation.controller.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            DeleteTranslationRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        findOneByUUID\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneByUUID(param: FetchDictionaryRequestParam)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBadRequestResponse()@HttpCode(HttpStatus.OK)@Get('find/:uuid')@ApiNotFoundResponse({description: 'Returns NOT_FOUND when no record found with the given uuid'})@ApiResponse({status: undefined, description: 'Returns OK when successful', type: FetchTranslationResponse})\n                \n            \n\n                    \n                        \n                            Defined in src/translations/translation.controller.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            FetchDictionaryRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(param: UpdateTranslationRequestParam, requestBody: UpdateTranslationRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiProtected()@ApiBadRequestResponse()@HttpCode(HttpStatus.NO_CONTENT)@Patch('update/:uuid')@ApiNoContentResponse({description: 'Returns NO_CONTENT when successful'})@ApiUnprocessableEntityResponse({description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong'})\n                \n            \n\n                    \n                        \n                            Defined in src/translations/translation.controller.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                param\n                                            \n                                                            UpdateTranslationRequestParam\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                requestBody\n                                            \n                                                            UpdateTranslationRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Logger,\n  NotFoundException,\n  Param,\n  Patch,\n  Post,\n  UnprocessableEntityException,\n} from '@nestjs/common';\nimport { TranslationService } from './translation.service';\nimport { CreateTranslationRequest, CreateTranslationRequestParam } from './request/create-translation.request';\nimport { UpdateTranslationRequest, UpdateTranslationRequestParam } from './request/update-translation.request';\nimport {\n  ApiAcceptedResponse,\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiResponse,\n  ApiTags,\n  ApiUnprocessableEntityResponse,\n} from '@nestjs/swagger';\nimport { FetchTranslationResponse } from './response/fetch-translation.response';\nimport { CreateDictionaryResponse } from '../dictionary/response/create-dictionary.response';\nimport { Env } from '/common/env';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Translation } from './translation.entity';\nimport { ActivityService } from '../activity/activity.service';\nimport { DeleteTranslationRequestParam } from './request/remove-translation.request';\nimport { FetchDictionaryRequestParam } from '../dictionary/request/fetch-dictionary.request';\nimport { DictionaryService } from '../dictionary/dictionary.service';\nimport { ApiBadRequestResponse } from '/common/decorators/open-api-bad-request.decorator';\nimport { ApiProtected } from '/common/decorators/open-api-protected-route.decorator';\n\n@ApiTags('Translation')\n@Controller('translation')\nexport class TranslationController {\n  constructor(\n    private readonly translateService: TranslationService,\n    private readonly dictionaryService: DictionaryService,\n    private readonly activityService: ActivityService,\n  ) {}\n\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.OK)\n  @Get('find/:uuid')\n  @ApiNotFoundResponse({ description: 'Returns NOT_FOUND when no record found with the given uuid' })\n  @ApiResponse({ status: HttpStatus.OK, description: 'Returns OK when successful', type: FetchTranslationResponse })\n  async findOneByUUID(@Param() param: FetchDictionaryRequestParam): Promise {\n    const record = await this.translateService.findOneBy(param.uuid);\n    if (!record) throw new NotFoundException('No record found with the given uuid');\n\n    return FetchTranslationResponse.from(record);\n  }\n\n  @ApiProtected()\n  @ApiBadRequestResponse()\n  @Post('create/:uuid')\n  @HttpCode(HttpStatus.CREATED)\n  @ApiUnprocessableEntityResponse({ description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong' })\n  @ApiCreatedResponse({ type: CreateDictionaryResponse, description: 'Returns CREATED when successful' })\n  async create(\n    @Param() param: CreateTranslationRequestParam,\n    @Body() requestBody: CreateTranslationRequest,\n  ): Promise {\n    // TODO: when user data is available change the createdBy to the user's id\n    const createdBy = -1;\n    const payload: Partial = {\n      ...requestBody,\n      ...(Env.isDev && { status: STATUS.ACTIVE }), // otherwise it will be set to PENDING by default\n    };\n\n    const dictionary = await this.dictionaryService.findOneBy(param.uuid);\n    if (!dictionary) throw new UnprocessableEntityException('No Dictionary record found with the given uuid');\n\n    const translation = await this.translateService.create(payload, dictionary);\n    await this.activityService.addTranslationCreated({ createdBy, dictionaryUUID: translation.uuid });\n\n    return FetchTranslationResponse.from(translation);\n  }\n\n  @ApiProtected()\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Patch('update/:uuid')\n  @ApiNoContentResponse({ description: 'Returns NO_CONTENT when successful' })\n  @ApiUnprocessableEntityResponse({ description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong' })\n  async update(@Param() param: UpdateTranslationRequestParam, @Body() requestBody: UpdateTranslationRequest) {\n    // TODO: when user data is available change the updatedBy to the user's id\n    const updatedBy = -1;\n\n    const oldValue = await this.translateService.findOneBy(param.uuid);\n    if (!oldValue) throw new UnprocessableEntityException('No record found with the given uuid');\n\n    const updated = await this.translateService.update(param.uuid, requestBody);\n    Logger.log(`The record has been updated. Affected rows: ${updated}`);\n\n    await this.activityService.addDictionaryUpdated({\n      updatedBy,\n      oldValue,\n      dictionaryUUID: param.uuid,\n    });\n\n    return void 0;\n  }\n\n  @ApiProtected()\n  @ApiBadRequestResponse()\n  @HttpCode(HttpStatus.ACCEPTED)\n  @Delete('delete/:uuid')\n  @ApiAcceptedResponse({ description: 'Returns ACCEPTED when successful' })\n  @ApiUnprocessableEntityResponse({ description: 'Returns UNPROCESSABLE_ENTITY when UUID is wrong' })\n  async delete(@Param() param: DeleteTranslationRequestParam): Promise {\n    // TODO: when user data is available change the deletedBy to the user's id\n    const deletedBy = -1;\n\n    const deleted = await this.translateService.markAsDeleted(param.uuid);\n    if (deleted.affected === 0) throw new UnprocessableEntityException('No record found with the given uuid');\n\n    Logger.log(`The record has been removed. Affected rows: ${deleted.affected}`);\n\n    await this.activityService.addDictionaryDeleted({ deletedBy, dictionaryUUID: param.uuid });\n\n    return void 0;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslationModule.html":{"url":"modules/TranslationModule.html","title":"module - TranslationModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TranslationModule\n\n\n\ncluster_TranslationModule_imports\n\n\n\ncluster_TranslationModule_providers\n\n\n\n\nActivityModule\n\nActivityModule\n\n\n\nTranslationModule\n\nTranslationModule\n\nTranslationModule -->\n\nActivityModule->TranslationModule\n\n\n\n\n\nDictionaryModule\n\nDictionaryModule\n\nTranslationModule -->\n\nDictionaryModule->TranslationModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nTranslationModule -->\n\nTranslationService->TranslationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/translations/translation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TranslationService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TranslationController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ActivityModule\n                        \n                        \n                            DictionaryModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TranslationService } from './translation.service';\nimport { TranslationController } from './translation.controller';\nimport { ActivityModule } from '../activity/activity.module';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Translation } from './translation.entity';\nimport { DictionaryModule } from '../dictionary/dictionary.module';\n\n@Module({\n  imports: [ActivityModule, DictionaryModule, TypeOrmModule.forFeature([Translation])],\n  controllers: [TranslationController],\n  providers: [TranslationService],\n})\nexport class TranslationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationProperty.html":{"url":"classes/TranslationProperty.html","title":"class - TranslationProperty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationProperty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/response/properties/translation.property.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createdAt\n                            \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                language\n                            \n                            \n                                    \n                                source\n                            \n                            \n                                    \n                                status\n                            \n                            \n                                    \n                                updatedAt\n                            \n                            \n                                    \n                                uuid\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                from\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(partial: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/translations/response/properties/translation.property.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        partial\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Some explanation', description: 'Translation word/sentence description, with examples'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Language\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: undefined, description: 'Language code'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        source\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'UUID string', example: '12345678-1234-1234-1234-123456789012'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({example: 'Hello there', description: 'Word or sentence'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/response/properties/translation.property.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        from\n                        \n                    \n                \n            \n            \n                \n                        \n                    from(partial: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/response/properties/translation.property.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partial\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         TranslationProperty\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Language } from '../../translation.enum';\nimport { Exclude } from 'class-transformer';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Translation } from '../../translation.entity';\n\nexport class TranslationProperty {\n  @ApiProperty({ description: 'UUID string', example: '12345678-1234-1234-1234-123456789012' })\n  uuid: string;\n\n  @ApiProperty({ example: 'Hello there', description: 'Word or sentence' })\n  value: string;\n\n  @ApiProperty({ example: 'Some explanation', description: 'Translation word/sentence description, with examples' })\n  description: string;\n\n  @ApiProperty({ example: Language.EN, description: 'Language code' })\n  language: Language;\n\n  @Exclude()\n  id: number;\n\n  @Exclude()\n  source: string;\n\n  @Exclude()\n  status: STATUS;\n\n  @Exclude()\n  createdAt: Date;\n\n  @Exclude()\n  updatedAt: Date;\n\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  static from(partial: Partial) {\n    return new TranslationProperty(partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/translation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findOneBy\n                            \n                            \n                                markAsActive\n                            \n                            \n                                markAsDeleted\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translation: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/translations/translation.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translation\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(payload: Partial, dictionary: Dictionary)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/translation.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dictionary\n                                            \n                                                            Dictionary\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOneBy\n                        \n                    \n                \n            \n            \n                \nfindOneBy(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/translation.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsActive\n                        \n                    \n                \n            \n            \n                \nmarkAsActive(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/translation.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        markAsDeleted\n                        \n                    \n                \n            \n            \n                \nmarkAsDeleted(uuid: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/translation.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(uuid: string, payload: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/translations/translation.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uuid\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                payload\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Translation } from './translation.entity';\nimport { Repository } from 'typeorm';\nimport { STATUS } from '/common/enums/status.enum';\nimport { Dictionary } from '../dictionary/dictionary.entity';\n\n@Injectable()\nexport class TranslationService {\n  constructor(@InjectRepository(Translation) private readonly translation: Repository) {}\n\n  findOneBy(uuid: string) {\n    return this.translation.findOne({\n      where: { uuid, status: STATUS.ACTIVE },\n      select: ['id', 'uuid', 'value', 'description', 'language'],\n      order: { createdAt: 'DESC' },\n    });\n  }\n\n  create(payload: Partial, dictionary: Dictionary) {\n    const translationInstance = this.translation.create({ ...payload, dictionary });\n\n    return this.translation.save(translationInstance);\n  }\n\n  update(uuid: string, payload: Partial) {\n    return this.translation.update({ uuid }, payload);\n  }\n\n  markAsDeleted(uuid: string) {\n    return this.translation.update({ uuid }, { status: STATUS.DELETED });\n  }\n\n  markAsActive(uuid: string) {\n    return this.translation.update({ uuid }, { status: STATUS.ACTIVE });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDictionaryRequest.html":{"url":"classes/UpdateDictionaryRequest.html","title":"class - UpdateDictionaryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDictionaryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/request/update-dictionary.request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateDictionaryRequest)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Record status', enum: STATUS, required: false})@IsEnum(STATUS)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/update-dictionary.request.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateDictionaryRequest } from './create-dictionary.request';\nimport { STATUS } from '../../common/enums/status.enum';\nimport { IsEnum, IsOptional, IsUUID } from 'class-validator';\n\nexport class UpdateDictionaryRequest extends PartialType(CreateDictionaryRequest) {\n  @ApiProperty({ description: 'Record status', enum: STATUS, required: false })\n  @IsEnum(STATUS)\n  @IsOptional()\n  status?: STATUS;\n}\n\nexport class UpdateDictionaryRequestParam {\n  @ApiProperty({ description: 'Dictionary UUID', required: true })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateDictionaryRequestParam.html":{"url":"classes/UpdateDictionaryRequestParam.html","title":"class - UpdateDictionaryRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateDictionaryRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dictionary/request/update-dictionary.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dictionary UUID', required: true})@IsUUID('4')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dictionary/request/update-dictionary.request.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateDictionaryRequest } from './create-dictionary.request';\nimport { STATUS } from '../../common/enums/status.enum';\nimport { IsEnum, IsOptional, IsUUID } from 'class-validator';\n\nexport class UpdateDictionaryRequest extends PartialType(CreateDictionaryRequest) {\n  @ApiProperty({ description: 'Record status', enum: STATUS, required: false })\n  @IsEnum(STATUS)\n  @IsOptional()\n  status?: STATUS;\n}\n\nexport class UpdateDictionaryRequestParam {\n  @ApiProperty({ description: 'Dictionary UUID', required: true })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationRequest.html":{"url":"classes/UpdateTranslationRequest.html","title":"class - UpdateTranslationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/request/update-translation.request.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateTranslationRequest)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         STATUS\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Record status', enum: STATUS, required: false})@IsEnum(STATUS)@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/update-translation.request.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateTranslationRequest } from './create-translation.request';\nimport { STATUS } from '/common/enums/status.enum';\nimport { IsEnum, IsOptional, IsUUID } from 'class-validator';\n\nexport class UpdateTranslationRequest extends PartialType(CreateTranslationRequest) {\n  @ApiProperty({ description: 'Record status', enum: STATUS, required: false })\n  @IsEnum(STATUS)\n  @IsOptional()\n  status?: STATUS;\n}\n\nexport class UpdateTranslationRequestParam {\n  @ApiProperty({ description: 'Dictionary UUID', required: true })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTranslationRequestParam.html":{"url":"classes/UpdateTranslationRequestParam.html","title":"class - UpdateTranslationRequestParam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTranslationRequestParam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/translations/request/update-translation.request.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        uuid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dictionary UUID', required: true})@IsUUID('4')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/translations/request/update-translation.request.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreateTranslationRequest } from './create-translation.request';\nimport { STATUS } from '/common/enums/status.enum';\nimport { IsEnum, IsOptional, IsUUID } from 'class-validator';\n\nexport class UpdateTranslationRequest extends PartialType(CreateTranslationRequest) {\n  @ApiProperty({ description: 'Record status', enum: STATUS, required: false })\n  @IsEnum(STATUS)\n  @IsOptional()\n  status?: STATUS;\n}\n\nexport class UpdateTranslationRequestParam {\n  @ApiProperty({ description: 'Dictionary UUID', required: true })\n  @IsUUID('4')\n  uuid: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/activity/activity.entity.ts\n            \n            entity\n            Activity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/activity/activity.service.ts\n            \n            injectable\n            ActivityService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/activity/interfaces/dictionary-activity.interface.ts\n            \n            interface\n            DictionaryCreated\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/activity/interfaces/dictionary-activity.interface.ts\n            \n            interface\n            DictionaryDeleted\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/activity/interfaces/dictionary-activity.interface.ts\n            \n            interface\n            DictionaryUpdated\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/bootstrap/bootstrap.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/bootstrap/configure-origin.ts\n            \n            variable\n            configureOrigin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/bootstrap/signals.ts\n            \n            variable\n            subscribeNodeSignals\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/bootstrap/swagger-config.ts\n            \n            variable\n            swaggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/bootstrap/swagger-save.ts\n            \n            variable\n            saveSwaggerDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/column.decorator.ts\n            \n            function\n            Column\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/create-date-column.decorator.ts\n            \n            function\n            CreateDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/ctx-logger.decorator.ts\n            \n            variable\n            CtxLogger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/environment-specific-column.decorator.ts\n            \n            function\n            EnvSpecificDecoratorValue\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/environment-specific-column.decorator.ts\n            \n            function\n            resolveDefault\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/environment-specific-column.decorator.ts\n            \n            function\n            resolveType\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-bad-request.decorator.ts\n            \n            function\n            ApiBadRequestResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-conflict-response.decorator.ts\n            \n            function\n            ApiConflictResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-created-response.decorator.ts\n            \n            function\n            ApiCreatedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-not-found-response.decorator.ts\n            \n            function\n            ApiNotFoundResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-ok-response.decorator.ts\n            \n            function\n            ApiOkResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-protected-route.decorator.ts\n            \n            function\n            ApiProtected\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-unauthorized-response.decorator.ts\n            \n            function\n            ApiUnauthorizedResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/open-api-unprocessable-response.decorator.ts\n            \n            function\n            ApiUnprocessableEntityResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/update-date-column.decorator.ts\n            \n            function\n            UpdateDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/user-agent.decorator.ts\n            \n            variable\n            UserAgent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/entities/timestamps.entity.ts\n            \n            class\n            TimestampsEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/env.ts\n            \n            class\n            Env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/exceptions/cors.exception.ts\n            \n            class\n            CorsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/exceptions/entity.exception.ts\n            \n            class\n            EntityException\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/common/exceptions/error.response.ts\n            \n            class\n            ErrorResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            HttpExceptionsFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/exception-handler.interceptor.ts\n            \n            injectable\n            ExceptionInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/request.interceptor.ts\n            \n            injectable\n            RequestInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/timestamps.interface.ts\n            \n            interface\n            TimestampsInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/setup/config/config.utils.ts\n            \n            variable\n            resolveEntityPath\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/config/orm.config.ts\n            \n            variable\n            commonConfiguration\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/config/orm.config.ts\n            \n            variable\n            development\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/config/orm.config.ts\n            \n            variable\n            driver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/config/orm.config.ts\n            \n            variable\n            getConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/config/orm.config.ts\n            \n            variable\n            production\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/config/orm.config.ts\n            \n            variable\n            unitTest\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/request/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/common/setup/seeder/abstract/BaseSeed.ts\n            \n            injectable\n            Seeds\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/setup/seeder/entity/seeder.entity.ts\n            \n            entity\n            Seed\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/setup/seeder/seeds/AddDefaultValuesForDevelopment.ts\n            \n            injectable\n            AddDefaultValuesForDevelopment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/setup/seeder/service/seeder.service.ts\n            \n            injectable\n            SeederService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/utils/utils.ts\n            \n            function\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/utils.ts\n            \n            function\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/utils.ts\n            \n            function\n            delay\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/utils.ts\n            \n            variable\n            randomFromArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/validations/env-validation.schema.ts\n            \n            variable\n            validationOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dictionary/dictionary.controller.ts\n            \n            controller\n            DictionaryController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dictionary/dictionary.entity.ts\n            \n            entity\n            Dictionary\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dictionary/dictionary.entity.ts\n            \n            class\n            Dictionary\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/dictionary/dictionary.service.ts\n            \n            injectable\n            DictionaryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/dictionary/request/create-dictionary.request.ts\n            \n            class\n            CreateDictionaryRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/dictionary/request/fetch-dictionary.request.ts\n            \n            class\n            FetchDictionaryRequestParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dictionary/request/remove-dictionary.request.ts\n            \n            class\n            DeleteDictionaryRequestParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dictionary/request/update-dictionary.request.ts\n            \n            class\n            UpdateDictionaryRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dictionary/request/update-dictionary.request.ts\n            \n            class\n            UpdateDictionaryRequestParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dictionary/response/create-dictionary.response.ts\n            \n            class\n            CreateDictionaryResponse\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/dictionary/response/fetch-dictionary.response.ts\n            \n            class\n            FetchDictionaryResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/search/request/search-dictionary.request.ts\n            \n            class\n            SearchDictionaryRequestParam\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/search/search.controller.ts\n            \n            controller\n            SearchController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/translations/request/create-translation.request.ts\n            \n            class\n            CreateTranslationRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/translations/request/create-translation.request.ts\n            \n            class\n            CreateTranslationRequestParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/translations/request/remove-translation.request.ts\n            \n            class\n            DeleteTranslationRequestParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/translations/request/update-translation.request.ts\n            \n            class\n            UpdateTranslationRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/translations/request/update-translation.request.ts\n            \n            class\n            UpdateTranslationRequestParam\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/translations/response/create-translation.response.ts\n            \n            class\n            CreateTranslationResponse\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/translations/response/fetch-translation.response.ts\n            \n            class\n            FetchTranslationResponse\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/translations/response/properties/translation.property.ts\n            \n            class\n            TranslationProperty\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/translations/translation.controller.ts\n            \n            controller\n            TranslationController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/translations/translation.entity.ts\n            \n            entity\n            Translation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/translations/translation.entity.ts\n            \n            class\n            Translation\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/translations/translation.service.ts\n            \n            injectable\n            TranslationService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/cache-manager : ^2.1.0\n        \n            @nestjs/common : ^10.2.7\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.2.7\n        \n            @nestjs/platform-express : ^10.2.7\n        \n            @nestjs/swagger : ^7.1.14\n        \n            @nestjs/terminus : ^10.1.1\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @types/passport-strategy : ^0.2.37\n        \n            bcrypt : ^5.1.1\n        \n            cache-manager : ^5.2.4\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            cross-env : ^7.0.3\n        \n            dotenv : ^16.3.1\n        \n            husky : ^8.0.3\n        \n            joi : ^17.11.0\n        \n            jsonwebtoken : ^9.0.2\n        \n            ms : ^2.1.3\n        \n            mysql2 : ^3.6.2\n        \n            node-cache : ^5.1.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^5.0.5\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.0\n        \n            typeorm : ^0.3.17\n        \n            uuid : ^9.0.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActivityAction   (src/.../activity.enum.ts)\n                        \n                        \n                            ActivityType   (src/.../activity.enum.ts)\n                        \n                        \n                            Language   (src/.../translation.enum.ts)\n                        \n                        \n                            NodeEnv   (src/.../index.ts)\n                        \n                        \n                            RequestHeader   (src/.../request.enum.ts)\n                        \n                        \n                            STATUS   (src/.../status.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/activity/activity.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ActivityAction\n                    \n                \n                        \n                            \n                                 CREATED\n                            \n                        \n                        \n                            \n                                Value : created\n                            \n                        \n                        \n                            \n                                 UPDATED\n                            \n                        \n                        \n                            \n                                Value : updated\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : deleted\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ActivityType\n                    \n                \n                        \n                            \n                                 DICTIONARY\n                            \n                        \n                        \n                            \n                                Value : dictionary\n                            \n                        \n                        \n                            \n                                 TRANSLATION\n                            \n                        \n                        \n                            \n                                Value : translation\n                            \n                        \n            \n        \n\n    src/translations/translation.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 EN\n                            \n                        \n                        \n                            \n                                Value : en\n                            \n                        \n                        \n                            \n                                 RU\n                            \n                        \n                        \n                            \n                                Value : ru\n                            \n                        \n                        \n                            \n                                 KA\n                            \n                        \n                        \n                            \n                                Value : ka\n                            \n                        \n                        \n                            \n                                 ME\n                            \n                        \n                        \n                            \n                                Value : me\n                            \n                        \n                        \n                            \n                                 SV\n                            \n                        \n                        \n                            \n                                Value : sv\n                            \n                        \n            \n        \n\n    src/common/types/index.ts\n    \n        \n            \n                \n                    \n                        \n                        NodeEnv\n                    \n                \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 TEST\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n                        \n                            \n                                 E2E\n                            \n                        \n                        \n                            \n                                Value : end2end\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                Value : debug\n                            \n                        \n            \n        \n\n    src/common/setup/request/request.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RequestHeader\n                    \n                \n                        \n                            \n                                 RequestId\n                            \n                        \n                        \n                            \n                                Value : x-request-id\n                            \n                        \n            \n        \n\n    src/common/enums/status.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        STATUS\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n                        \n                            \n                                 PENDING\n                            \n                        \n                        \n                            \n                                Value : PENDING\n                            \n                        \n                        \n                            \n                                 REJECTED\n                            \n                        \n                        \n                            \n                                Value : REJECTED\n                            \n                        \n                        \n                            \n                                 HIDDEN\n                            \n                        \n                        \n                            \n                                Value : HIDDEN\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiBadRequestResponse   (src/.../open-api-bad-request.decorator.ts)\n                        \n                        \n                            ApiConflictResponse   (src/.../open-api-conflict-response.decorator.ts)\n                        \n                        \n                            ApiCreatedResponse   (src/.../open-api-created-response.decorator.ts)\n                        \n                        \n                            ApiNotFoundResponse   (src/.../open-api-not-found-response.decorator.ts)\n                        \n                        \n                            ApiOkResponse   (src/.../open-api-ok-response.decorator.ts)\n                        \n                        \n                            ApiProtected   (src/.../open-api-protected-route.decorator.ts)\n                        \n                        \n                            ApiUnauthorizedResponse   (src/.../open-api-unauthorized-response.decorator.ts)\n                        \n                        \n                            ApiUnprocessableEntityResponse   (src/.../open-api-unprocessable-response.decorator.ts)\n                        \n                        \n                            Column   (src/.../column.decorator.ts)\n                        \n                        \n                            CreateDateColumn   (src/.../create-date-column.decorator.ts)\n                        \n                        \n                            delay   (src/.../utils.ts)\n                        \n                        \n                            delay   (src/.../utils.ts)\n                        \n                        \n                            delay   (src/.../utils.ts)\n                        \n                        \n                            EnvSpecificDecoratorValue   (src/.../environment-specific-column.decorator.ts)\n                        \n                        \n                            resolveDefault   (src/.../environment-specific-column.decorator.ts)\n                        \n                        \n                            resolveType   (src/.../environment-specific-column.decorator.ts)\n                        \n                        \n                            UpdateDateColumn   (src/.../update-date-column.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/decorators/open-api-bad-request.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiBadRequestResponse\n                        \n                    \n                \n            \n            \n                \nApiBadRequestResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/open-api-conflict-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConflictResponse\n                        \n                    \n                \n            \n            \n                \nApiConflictResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/open-api-created-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiCreatedResponse\n                        \n                    \n                \n            \n            \n                \nApiCreatedResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/open-api-not-found-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiNotFoundResponse\n                        \n                    \n                \n            \n            \n                \nApiNotFoundResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/open-api-ok-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiOkResponse\n                        \n                    \n                \n            \n            \n                \nApiOkResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/open-api-protected-route.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiProtected\n                        \n                    \n                \n            \n            \n                \nApiProtected()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/open-api-unauthorized-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUnauthorizedResponse\n                        \n                    \n                \n            \n            \n                \nApiUnauthorizedResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/open-api-unprocessable-response.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiUnprocessableEntityResponse\n                        \n                    \n                \n            \n            \n                \nApiUnprocessableEntityResponse(options: ApiResponseOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        ApiResponseOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Column\n                        \n                    \n                \n            \n            \n                \nColumn(columnOptions: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columnOptions\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/create-date-column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CreateDateColumn\n                        \n                    \n                \n            \n            \n                \nCreateDateColumn(columnOptions: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columnOptions\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n            \n                \ndelay(callback, ttd: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     NodeJS.Timeout\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n            \n                \ndelay(ttd: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ttd\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delay\n                        \n                    \n                \n            \n            \n                \ndelay(...args: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/environment-specific-column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EnvSpecificDecoratorValue\n                        \n                    \n                \n            \n            \n                \nEnvSpecificDecoratorValue(columnOptions: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n                        Environment specific column decorator.\nExactly the same as original TypeORM\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columnOptions\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveDefault\n                        \n                    \n                \n            \n            \n                \nresolveDefault(defaultValue)\n                \n            \n\n\n\n\n            \n                \n                        Replace column default value to SQLite compatible value for env:TEST or return original implementation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                defaultValue\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveType\n                        \n                    \n                \n            \n            \n                \nresolveType(type: ColumnType)\n                \n            \n\n\n\n\n            \n                \n                        Replace column type to SQLite compatible type for env:TEST or return original implementation\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            ColumnType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ColumnType\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/common/decorators/update-date-column.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UpdateDateColumn\n                        \n                    \n                \n            \n            \n                \nUpdateDateColumn(columnOptions: ColumnOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                columnOptions\n                                            \n                                                            ColumnOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\nDescription\nTemplate repository for backend services. With required boilerplate code.\nInstallation\nExample :# Set right NodeJS version\n$ nvm use\n# Install dependencies\n$ npm installRunning the service\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDatabase\nUse docker-compose from Auth-service to run MySQL locally.\nCreate a new database\nExample :CREATE DATABASE 'translations';\n\nMigrations\n\nThere are migration scripts located in package.json.\n\nIn most common cases you will need to use npm run migration:generate -- migrations/migration-name to generate migrations (Which will result creating migrations/migration-name.ts). There are initial database setup and when you add some changes the command mentioned above will generate new migration scripts. It is required to check the generated query since it can cause data lost.\nWhen you need to run npm run migrations? Only when you make changes in entities or creating a new one.\nIf you're actively adding new entities and need to test things faster you can modify orm.config.ts with the following\nExample :{\n  \"synchronize\": true,\n  \"synchronizeOptions\": {\n    \"force\": true\n  }\n}With this config there are high change of data loss. Since it always removes tables and creates new ones. Only convenient for development when actively adding new entities.\nWhen this sync mode is enabled, and you try to generate migration - it won't be able to detect changes because sync mode makes sure that all tables are created/synced.\nRecommended: When you alter schema => npm run migration:generate migrations/some-changes => npm run migrations.\nIt might require running npm run build.\nExample :$ npm run build\n$ npm run migration:generate migrations/migration-nameP.S.\nYou can always manually create migrations by running npm run migration:create migrations/add-users-table however in such cases you are responsible for the correctness of the script while npm run migration:generate will reverse-generate the migration from existing schemas/entities.\nNOTE: Current migration scripts contains env variable for schema name which is dynamic name. Library does not support such thing. So when generating/creating new migration makes sure it is using proper schema name for different envs. Since, for every deployment env there is the same db but different schema.\nMore details\n\n\nMore info\n\n\n\nUML diagram\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActivityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DictionaryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RequestModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeederModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SetupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ActivityModule\n\n\n\ncluster_ActivityModule_exports\n\n\n\ncluster_ActivityModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_DictionaryModule\n\n\n\ncluster_DictionaryModule_exports\n\n\n\ncluster_DictionaryModule_providers\n\n\n\ncluster_RequestModule\n\n\n\ncluster_RequestModule_exports\n\n\n\ncluster_SeederModule\n\n\n\ncluster_SeederModule_exports\n\n\n\ncluster_SeederModule_providers\n\n\n\ncluster_SetupModule\n\n\n\ncluster_SetupModule_imports\n\n\n\ncluster_TranslationModule\n\n\n\ncluster_TranslationModule_providers\n\n\n\n\nActivityService \n\nActivityService \n\n\n\nActivityModule\n\nActivityModule\n\nActivityService  -->\n\nActivityModule->ActivityService \n\n\n\n\n\nDictionaryModule\n\nDictionaryModule\n\nDictionaryModule -->\n\nActivityModule->DictionaryModule\n\n\n\n\n\nSearchModule\n\nSearchModule\n\nSearchModule -->\n\nActivityModule->SearchModule\n\n\n\n\n\nTranslationModule\n\nTranslationModule\n\nTranslationModule -->\n\nActivityModule->TranslationModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nActivityModule->AppModule\n\n\n\n\n\nActivityService\n\nActivityService\n\nActivityModule -->\n\nActivityService->ActivityModule\n\n\n\nSearchModule -->\n\nDictionaryModule->SearchModule\n\n\n\nTranslationModule -->\n\nDictionaryModule->TranslationModule\n\n\n\nAppModule -->\n\nDictionaryModule->AppModule\n\n\n\n\n\nDictionaryService \n\nDictionaryService \n\nDictionaryService  -->\n\nDictionaryModule->DictionaryService \n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\nAppModule -->\n\nSearchModule->AppModule\n\n\n\n\n\nSetupModule\n\nSetupModule\n\nAppModule -->\n\nSetupModule->AppModule\n\n\n\nAppModule -->\n\nTranslationModule->AppModule\n\n\n\n\n\nDictionaryService\n\nDictionaryService\n\nDictionaryModule -->\n\nDictionaryService->DictionaryModule\n\n\n\n\n\nRequestService \n\nRequestService \n\n\n\nRequestModule\n\nRequestModule\n\nSetupModule -->\n\nRequestModule->SetupModule\n\n\n\nRequestService  -->\n\nRequestModule->RequestService \n\n\n\n\n\nSeederService \n\nSeederService \n\n\n\nSeederModule\n\nSeederModule\n\nSetupModule -->\n\nSeederModule->SetupModule\n\n\n\nSeederService  -->\n\nSeederModule->SeederService \n\n\n\n\n\nAddDefaultValuesForDevelopment\n\nAddDefaultValuesForDevelopment\n\nSeederModule -->\n\nAddDefaultValuesForDevelopment->SeederModule\n\n\n\n\n\nSeederService\n\nSeederService\n\nSeederModule -->\n\nSeederService->SeederModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nSetupModule -->\n\nConfigModule->SetupModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nSetupModule -->\n\nDatabaseModule->SetupModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nTranslationModule -->\n\nTranslationService->TranslationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    24 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.3\n        \n            Description : Backend service for the application\n        \n            License : UNLICENSED\n        \n            Author : n1md7\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DictionaryActivityType   (src/.../dictionary-activity.interface.ts)\n                        \n                        \n                            ErrorPayloadType   (src/.../entity.exception.ts)\n                        \n                        \n                            ExpressRequest   (src/.../index.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/activity/interfaces/dictionary-activity.interface.ts\n    \n    \n        \n            \n                \n                    \n                    DictionaryActivityType\n                \n            \n            \n                \n                            DictionaryCreated | DictionaryUpdated | DictionaryDeleted\n\n                \n            \n        \n    \n    src/common/exceptions/entity.exception.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorPayloadType\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/common/types/index.ts\n    \n    \n        \n            \n                \n                    \n                    ExpressRequest\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../bootstrap.ts)\n                        \n                        \n                            commonConfiguration   (src/.../orm.config.ts)\n                        \n                        \n                            configureOrigin   (src/.../configure-origin.ts)\n                        \n                        \n                            CtxLogger   (src/.../ctx-logger.decorator.ts)\n                        \n                        \n                            development   (src/.../orm.config.ts)\n                        \n                        \n                            driver   (src/.../orm.config.ts)\n                        \n                        \n                            getConfig   (src/.../orm.config.ts)\n                        \n                        \n                            production   (src/.../orm.config.ts)\n                        \n                        \n                            randomFromArray   (src/.../utils.ts)\n                        \n                        \n                            resolveEntityPath   (src/.../config.utils.ts)\n                        \n                        \n                            saveSwaggerDocument   (src/.../swagger-save.ts)\n                        \n                        \n                            subscribeNodeSignals   (src/.../signals.ts)\n                        \n                        \n                            swaggerConfig   (src/.../swagger-config.ts)\n                        \n                        \n                            unitTest   (src/.../orm.config.ts)\n                        \n                        \n                            UserAgent   (src/.../user-agent.decorator.ts)\n                        \n                        \n                            validationOptions   (src/.../env-validation.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/bootstrap/bootstrap.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(AppModule);\n  const loggerService = new Logger('Bootstrap');\n  const configService = app.get(ConfigService);\n  subscribeNodeSignals(loggerService);\n  app.enableCors({\n    origin: configureOrigin,\n    methods: 'GET,POST,PUT,PATCH,DELETE,OPTIONS',\n    allowedHeaders: 'Authorization, Content-Type, Accept',\n    exposedHeaders: 'Authorization, Content-Type',\n    credentials: true,\n  });\n  app.useLogger(loggerService);\n  app.useGlobalPipes(\n    new ValidationPipe({\n      transform: true,\n      whitelist: true,\n      forbidNonWhitelisted: true,\n    }),\n  );\n  app.useGlobalInterceptors(\n    new RequestInterceptor(), // Important to be 1st, {CtxLogger} is injected here\n    new ExceptionInterceptor(),\n    new ClassSerializerInterceptor(app.get(Reflector)), // To make sure @Exclude() works on responses\n  );\n  app.setGlobalPrefix('/api');\n  app.enableVersioning({\n    prefix: 'v',\n    type: VersioningType.URI,\n    defaultVersion: '1',\n  });\n\n  const document = SwaggerModule.createDocument(app, swaggerConfig);\n  saveSwaggerDocument(document);\n  SwaggerModule.setup('docs', app, document, {\n    swaggerOptions: {\n      persistAuthorization: true,\n    },\n  });\n  const appPort = parseInt(configService.get('PORT'), 10);\n  app.getHttpAdapter().getInstance().disable('x-powered-by');\n  await app.listen(appPort, '0.0.0.0', async () => {\n    const url = await app.getUrl();\n    const devText = bold(`\n        Backend service started at: ${url}\n        Swagger docs: ${url}/docs\n        Mode: ${bgCyan(Env.NodeEnv)}\n        Pid: ${process.pid}\n    `);\n    if (Env.isDev) return console.log(devText);\n\n    loggerService.log(`Application started at: ${url}`, 'Bootstrap');\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/common/setup/config/orm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        commonConfiguration\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  port: Number(process.env.DB_PORT),\n  username: process.env.DB_USERNAME,\n  password: process.env.DB_PASSWORD,\n  host: process.env.DB_HOST,\n  entities: [resolveEntityPath()],\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        development\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  ...commonConfiguration,\n  database: process.env.DB_DATABASE,\n  type: driver,\n  logging: 'all',\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        driver\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'mysql'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  if (Env.isProd) return production;\n  if (Env.isDev) return development;\n  if (Env.isTest) return unitTest;\n\n  throw new Error('Unknown environment');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        production\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  ...commonConfiguration,\n  database: process.env.DB_DATABASE,\n  type: driver,\n  logging: ['error'],\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unitTest\n                        \n                    \n                \n            \n                \n                    \n                        Default value : {\n  ...commonConfiguration,\n  database: ':memory:',\n  type: 'sqlite',\n  synchronize: true, // Create tables from entities\n  logging: false,\n} as TypeOrmModuleOptions\n                    \n                \n\n\n        \n    \n\n    src/common/bootstrap/configure-origin.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        configureOrigin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CustomOrigin\n\n                    \n                \n                \n                    \n                        Default value : (requestOrigin, callback) => {\n  const corsWhitelist = process.env.ORIGIN.split(',');\n  const originNotDefined = !requestOrigin;\n  const isWhitelisted = corsWhitelist.indexOf(requestOrigin) !== -1;\n  const isLocalhost = new RegExp(/^https?:\\/\\/(localhost|127.0.0.1)/).test(requestOrigin);\n  const isMegrulad = new RegExp(/^https?:\\/\\/(.*)\\.megrulad\\.ge/).test(requestOrigin);\n  const corsAllowed = originNotDefined || isLocalhost || isWhitelisted || isMegrulad;\n\n  if (corsAllowed) return callback(null, true);\n  callback(new CorsException(`Origin [${requestOrigin}] Not allowed by CORS`));\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/ctx-logger.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CtxLogger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): Logger => {\n  return ctx.switchToHttp().getRequest().logger as Logger;\n})\n                    \n                \n\n\n        \n    \n\n    src/common/utils/utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        randomFromArray\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (array: T[]) => {\n  return array[Math.floor(Math.random() * array.length)];\n}\n                    \n                \n\n\n        \n    \n\n    src/common/setup/config/config.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resolveEntityPath\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  // Env for unit tests\n  if (Env.isTest) return 'src/**/*.entity.ts';\n\n  // Env is NodeEnv.PRODUCTION but for E2E tests\n  if (Env.isE2E) return 'src/**/*.entity.ts';\n\n  // Either NodeEnv.PRODUCTION or NodeEnv.DEVELOPMENT\n  return 'dist/src/**/*.entity.js';\n}\n                    \n                \n\n\n        \n    \n\n    src/common/bootstrap/swagger-save.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        saveSwaggerDocument\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (document: OpenAPIObject) => {\n  try {\n    const swaggerYaml = yaml.dump(document, { skipInvalid: true });\n    fs.writeFileSync('./docs/swagger.yaml', swaggerYaml, 'utf8');\n  } catch (error) {\n    Logger.error(`Error while writing swagger.yaml file: ${error}`, 'Bootstrap');\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/common/bootstrap/signals.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        subscribeNodeSignals\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (logger: LoggerService) => {\n  const signalsNames: NodeJS.Signals[] = ['SIGTERM', 'SIGINT', 'SIGHUP'];\n\n  signalsNames.forEach((signalName) =>\n    process.on(signalName, (signal) => {\n      logger.log(`Retrieved signal: ${signal}, application terminated`, 'Bootstrap');\n      process.exit(0);\n    }),\n  );\n\n  process.on('uncaughtException', (error: Error) => {\n    logger.error({ error }, 'Bootstrap');\n    process.exit(1);\n  });\n\n  process.on('unhandledRejection', (reason, promise) => {\n    logger.error(`Unhandled Promise Rejection, reason: ${reason}`, 'Bootstrap');\n    promise.catch((error: Error) => {\n      logger.error({ error });\n      process.exit(1);\n    });\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/common/bootstrap/swagger-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swaggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DocumentBuilder()\n  .addBearerAuth({\n    type: 'http',\n    scheme: 'bearer',\n    bearerFormat: 'JWT',\n    name: 'JWT',\n    description: 'Enter JWT auth token',\n    in: 'header',\n  })\n  .setTitle('Megrulad.ge Backend Service')\n  .setDescription('Main translation backend service')\n  .setVersion(packageJson.version)\n  .build()\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/user-agent.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserAgent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((data: unknown, ctx: ExecutionContext): string => {\n  return ctx.switchToHttp().getRequest().get('user-agent');\n})\n                    \n                \n\n\n        \n    \n\n    src/common/validations/env-validation.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  abortEarly: false,\n  allowUnknown: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
